{
    "sourceFile": "pages/admin-services.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1761336016111,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1761336028775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,12 +68,13 @@\n         const response = await fetch(\"/api/services\");\r\n         if (!response.ok) {\r\n           throw new Error(\"Unable to load services.\");\r\n         }\r\n-        const data = await response.json();\r\n-        const fetched = Array.isArray(data.services) ? data.services : [];\r\n-        setServices(fetched);\r\n-        setInitialServices(fetched);\r\n+  const data = await response.json();\r\n+  const fetched = Array.isArray(data.services) ? data.services : [];\r\n+  const cloned = JSON.parse(JSON.stringify(fetched));\r\n+  setServices(cloned);\r\n+  setInitialServices(cloned);\r\n       } catch (loadError) {\r\n         setError(loadError.message || \"Unable to load services.\");\r\n         setServices([]);\r\n         setInitialServices([]);\r\n@@ -178,10 +179,11 @@\n         throw new Error(data.error || \"Failed to save services.\");\r\n       }\r\n \r\n       const updated = Array.isArray(data.services) ? data.services : services;\r\n-      setServices(updated);\r\n-      setInitialServices(updated);\r\n+      const cloned = JSON.parse(JSON.stringify(updated));\r\n+      setServices(cloned);\r\n+      setInitialServices(cloned);\r\n       setSuccess(\"Services updated successfully.\");\r\n     } catch (saveError) {\r\n       setError(saveError.message || \"Failed to save services.\");\r\n     }\r\n"
                },
                {
                    "date": 1761405101982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,371 @@\n+import { useMemo, useEffect, useState } from \"react\";\r\n+import Link from \"next/link\";\r\n+\r\n+const emptyServiceTemplate = {\r\n+  id: \"\",\r\n+  title: \"\",\r\n+  summary: \"\",\r\n+  basePrice: null,\r\n+  revivePrice: null,\r\n+  durationMinutes: null,\r\n+  comingSoon: false,\r\n+  baseFeatures: [],\r\n+  reviveFeatures: [],\r\n+};\r\n+\r\n+function FeatureListEditor({ label, features, onChange, onAdd, onRemove }) {\r\n+  return (\r\n+    <div className=\"space-y-2\">\r\n+      <div className=\"flex items-center justify-between\">\r\n+        <h4 className=\"text-sm font-semibold text-slate-900\">{label}</h4>\r\n+        <button\r\n+          type=\"button\"\r\n+          onClick={onAdd}\r\n+          className=\"rounded-full border border-blue-200 px-3 py-1 text-xs font-semibold text-blue-600 hover:bg-blue-50\"\r\n+        >\r\n+          + Add item\r\n+        </button>\r\n+      </div>\r\n+      {features.length === 0 && (\r\n+        <p className=\"text-xs text-blue-500\">No items yet. Add one above.</p>\r\n+      )}\r\n+      <div className=\"space-y-2\">\r\n+        {features.map((feature, index) => (\r\n+          <div key={`${label}-${index}`} className=\"flex items-start gap-2\">\r\n+            <textarea\r\n+              value={feature}\r\n+              onChange={(event) => onChange(index, event.target.value)}\r\n+              rows={2}\r\n+              placeholder=\"Add bullet point\"\r\n+              className=\"w-full rounded-lg border border-slate-200 bg-slate-50 px-3 py-2 text-sm text-slate-900 focus:border-blue-400 focus:outline-none focus:ring-2 focus:ring-blue-100 placeholder:text-slate-400\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => onRemove(index)}\r\n+              className=\"rounded-lg border border-red-200 px-3 py-2 text-xs font-semibold text-red-600 hover:bg-red-50\"\r\n+            >\r\n+              Remove\r\n+            </button>\r\n+          </div>\r\n+        ))}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default function AdminServicesPage() {\r\n+  const [services, setServices] = useState([]);\r\n+  const [initialServices, setInitialServices] = useState([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+  const [saving, setSaving] = useState(false);\r\n+  const [error, setError] = useState(\"\");\r\n+  const [success, setSuccess] = useState(\"\");\r\n+\r\n+  useEffect(() => {\r\n+    async function loadServices() {\r\n+      setLoading(true);\r\n+      setError(\"\");\r\n+      try {\r\n+        const response = await fetch(\"/api/services\");\r\n+        if (!response.ok) {\r\n+          throw new Error(\"Unable to load services.\");\r\n+        }\r\n+  const data = await response.json();\r\n+  const fetched = Array.isArray(data.services) ? data.services : [];\r\n+  const cloned = JSON.parse(JSON.stringify(fetched));\r\n+  setServices(cloned);\r\n+  setInitialServices(cloned);\r\n+      } catch (loadError) {\r\n+        setError(loadError.message || \"Unable to load services.\");\r\n+        setServices([]);\r\n+        setInitialServices([]);\r\n+      }\r\n+      setLoading(false);\r\n+    }\r\n+\r\n+    loadServices();\r\n+  }, []);\r\n+\r\n+  const hasChanges = useMemo(() => {\r\n+    return JSON.stringify(services) !== JSON.stringify(initialServices);\r\n+  }, [services, initialServices]);\r\n+\r\n+  const handleServiceChange = (index, key, value) => {\r\n+    setServices((prev) =>\r\n+      prev.map((service, svcIndex) =>\r\n+        svcIndex === index\r\n+          ? {\r\n+              ...service,\r\n+              [key]: value,\r\n+            }\r\n+          : service\r\n+      )\r\n+    );\r\n+  };\r\n+\r\n+  const handleNumberChange = (index, key, value) => {\r\n+    handleServiceChange(index, key, value === \"\" ? \"\" : Number(value));\r\n+  };\r\n+\r\n+  const handleFeatureChange = (index, field, featureIndex, value) => {\r\n+    setServices((prev) =>\r\n+      prev.map((service, svcIndex) => {\r\n+        if (svcIndex !== index) return service;\r\n+        const list = Array.isArray(service[field]) ? [...service[field]] : [];\r\n+        list[featureIndex] = value;\r\n+        return {\r\n+          ...service,\r\n+          [field]: list,\r\n+        };\r\n+      })\r\n+    );\r\n+  };\r\n+\r\n+  const handleFeatureAdd = (index, field) => {\r\n+    setServices((prev) =>\r\n+      prev.map((service, svcIndex) => {\r\n+        if (svcIndex !== index) return service;\r\n+        const list = Array.isArray(service[field]) ? [...service[field]] : [];\r\n+        list.push(\"\");\r\n+        return {\r\n+          ...service,\r\n+          [field]: list,\r\n+        };\r\n+      })\r\n+    );\r\n+  };\r\n+\r\n+  const handleFeatureRemove = (index, field, featureIndex) => {\r\n+    setServices((prev) =>\r\n+      prev.map((service, svcIndex) => {\r\n+        if (svcIndex !== index) return service;\r\n+        const list = Array.isArray(service[field]) ? [...service[field]] : [];\r\n+        list.splice(featureIndex, 1);\r\n+        return {\r\n+          ...service,\r\n+          [field]: list,\r\n+        };\r\n+      })\r\n+    );\r\n+  };\r\n+\r\n+  const handleReset = () => {\r\n+    setServices(initialServices);\r\n+    setError(\"\");\r\n+    setSuccess(\"\");\r\n+  };\r\n+\r\n+  const handleAddNewService = () => {\r\n+    setServices((prev) => [...prev, { ...emptyServiceTemplate, id: `service-${prev.length + 1}` }]);\r\n+  };\r\n+\r\n+  const handleDeleteService = (index) => {\r\n+    setServices((prev) => prev.filter((_, svcIndex) => svcIndex !== index));\r\n+  };\r\n+\r\n+  const handleSave = async () => {\r\n+    setSaving(true);\r\n+    setError(\"\");\r\n+    setSuccess(\"\");\r\n+    try {\r\n+      const response = await fetch(\"/api/services\", {\r\n+        method: \"PUT\",\r\n+        headers: { \"Content-Type\": \"application/json\" },\r\n+        body: JSON.stringify({ services }),\r\n+      });\r\n+\r\n+      const data = await response.json().catch(() => ({}));\r\n+\r\n+      if (!response.ok) {\r\n+        throw new Error(data.error || \"Failed to save services.\");\r\n+      }\r\n+\r\n+      const updated = Array.isArray(data.services) ? data.services : services;\r\n+      const cloned = JSON.parse(JSON.stringify(updated));\r\n+      setServices(cloned);\r\n+      setInitialServices(cloned);\r\n+      setSuccess(\"Services updated successfully.\");\r\n+    } catch (saveError) {\r\n+      setError(saveError.message || \"Failed to save services.\");\r\n+    }\r\n+    setSaving(false);\r\n+  };\r\n+\r\n+  return (\r\n+    <main className=\"min-h-screen bg-blue-50 px-4 py-10 text-blue-900\">\r\n+      <div className=\"mx-auto flex max-w-5xl flex-col gap-8\">\r\n+        <div className=\"flex flex-col gap-3 sm:flex-row sm:items-center sm:justify-between\">\r\n+          <div className=\"flex items-center gap-3\">\r\n+            <Link\r\n+              href=\"/adminDashboard\"\r\n+              className=\"rounded-lg border border-blue-200 bg-white px-4 py-2 text-sm font-semibold text-blue-700 shadow-sm transition-colors hover:bg-blue-50\"\r\n+            >\r\n+              ‚Üê Back to Dashboard\r\n+            </Link>\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={handleAddNewService}\r\n+              className=\"rounded-lg border border-green-200 bg-green-50 px-4 py-2 text-sm font-semibold text-green-700 transition-colors hover:bg-green-100\"\r\n+            >\r\n+              Add New Service\r\n+            </button>\r\n+          </div>\r\n+          <div className=\"flex flex-col gap-2 sm:flex-row sm:items-center\">\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={handleReset}\r\n+              disabled={!hasChanges || saving}\r\n+              className=\"rounded-lg border border-blue-200 px-4 py-2 text-sm font-semibold text-blue-600 transition-colors hover:bg-blue-50 disabled:cursor-not-allowed disabled:opacity-50\"\r\n+            >\r\n+              Reset\r\n+            </button>\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={handleSave}\r\n+              disabled={!hasChanges || saving}\r\n+              className=\"rounded-lg bg-blue-600 px-6 py-2 text-sm font-semibold text-white shadow-sm transition-colors hover:bg-blue-700 disabled:cursor-not-allowed disabled:opacity-50\"\r\n+            >\r\n+              {saving ? \"Saving...\" : \"Save Changes\"}\r\n+            </button>\r\n+          </div>\r\n+        </div>\r\n+\r\n+        <header className=\"rounded-2xl border border-blue-200 bg-gradient-to-r from-blue-50 via-white to-blue-50 p-6 shadow\">\r\n+          <h1 className=\"text-2xl font-bold text-slate-900\">\r\n+            Services & Pricing Editor\r\n+          </h1>\r\n+          <p className=\"mt-2 text-sm text-blue-700\">\r\n+            Update prices, toggle availability, and adjust bullet points for each plan. Changes are saved directly to\r\n+            <code className=\"ml-1 rounded bg-blue-100 px-2 py-0.5 text-xs text-blue-800\">data/services.js</code>.\r\n+          </p>\r\n+          {error && <div className=\"mt-3 rounded-lg border border-red-200 bg-red-50 px-4 py-2 text-sm text-red-700\">{error}</div>}\r\n+          {success && <div className=\"mt-3 rounded-lg border border-green-200 bg-green-50 px-4 py-2 text-sm text-green-700\">{success}</div>}\r\n+        </header>\r\n+\r\n+        {loading ? (\r\n+          <div className=\"rounded-2xl border border-blue-200 bg-white p-10 text-center text-blue-600 shadow\">\r\n+            Loading services...\r\n+          </div>\r\n+        ) : services.length === 0 ? (\r\n+          <div className=\"rounded-2xl border border-blue-200 bg-white p-10 text-center text-blue-600 shadow\">\r\n+            No services found. Add a new service to get started.\r\n+          </div>\r\n+        ) : (\r\n+          <div className=\"space-y-8\">\r\n+            {services.map((service, index) => (\r\n+              <section key={service.id || index} className=\"rounded-2xl border border-blue-100 bg-white/90 p-6 shadow transition-shadow hover:shadow-lg\">\r\n+                <div className=\"flex flex-col gap-4 sm:flex-row sm:items-start sm:justify-between\">\r\n+                  <div className=\"flex-1 space-y-2\">\r\n+                    <span className=\"inline-flex items-center rounded-full bg-blue-100 px-3 py-1 text-xs font-semibold text-blue-700\">\r\n+                      {service.id || \"New service\"}\r\n+                    </span>\r\n+                    <h2 className=\"text-xl font-semibold text-slate-900\">\r\n+                      {service.title || \"Untitled Service\"}\r\n+                    </h2>\r\n+                  </div>\r\n+                  <div className=\"space-y-4 sm:flex-1\">\r\n+                    <div className=\"grid gap-3 sm:grid-cols-2\">\r\n+                      <label className=\"text-sm font-semibold text-slate-900\">\r\n+                        Service ID\r\n+                        <input\r\n+                          type=\"text\"\r\n+                          value={service.id}\r\n+                          onChange={(event) => handleServiceChange(index, \"id\", event.target.value)}\r\n+                          className=\"mt-1 w-full rounded-lg border border-slate-200 bg-slate-50 px-3 py-2 text-sm text-slate-900 focus:border-blue-400 focus:outline-none focus:ring-2 focus:ring-blue-100 placeholder:text-slate-400\"\r\n+                        />\r\n+                      </label>\r\n+                      <label className=\"text-sm font-semibold text-slate-900\">\r\n+                        Title\r\n+                        <input\r\n+                          type=\"text\"\r\n+                          value={service.title || \"\"}\r\n+                          onChange={(event) => handleServiceChange(index, \"title\", event.target.value)}\r\n+                          className=\"mt-1 w-full rounded-lg border border-slate-200 bg-slate-50 px-3 py-2 text-sm text-slate-900 focus:border-blue-400 focus:outline-none focus:ring-2 focus:ring-blue-100 placeholder:text-slate-400\"\r\n+                        />\r\n+                      </label>\r\n+                      <label className=\"text-sm font-semibold text-slate-900 sm:col-span-2\">\r\n+                        Summary\r\n+                        <textarea\r\n+                          value={service.summary || \"\"}\r\n+                          onChange={(event) => handleServiceChange(index, \"summary\", event.target.value)}\r\n+                          rows={3}\r\n+                          className=\"mt-1 w-full rounded-lg border border-slate-200 bg-slate-50 px-3 py-2 text-sm text-slate-900 focus:border-blue-400 focus:outline-none focus:ring-2 focus:ring-blue-100 placeholder:text-slate-400\"\r\n+                        />\r\n+                      </label>\r\n+                      <label className=\"text-sm font-semibold text-slate-900\">\r\n+                        Base Price\r\n+                        <input\r\n+                          type=\"number\"\r\n+                          min=\"0\"\r\n+                          step=\"1\"\r\n+                          value={service.basePrice ?? \"\"}\r\n+                          onChange={(event) => handleNumberChange(index, \"basePrice\", event.target.value)}\r\n+                          className=\"mt-1 w-full rounded-lg border border-slate-200 bg-slate-50 px-3 py-2 text-sm text-slate-900 focus:border-blue-400 focus:outline-none focus:ring-2 focus:ring-blue-100 placeholder:text-slate-400\"\r\n+                        />\r\n+                      </label>\r\n+                      <label className=\"text-sm font-semibold text-slate-900\">\r\n+                        Revive Price\r\n+                        <input\r\n+                          type=\"number\"\r\n+                          min=\"0\"\r\n+                          step=\"1\"\r\n+                          value={service.revivePrice ?? \"\"}\r\n+                          onChange={(event) => handleNumberChange(index, \"revivePrice\", event.target.value)}\r\n+                          className=\"mt-1 w-full rounded-lg border border-slate-200 bg-slate-50 px-3 py-2 text-sm text-slate-900 focus:border-blue-400 focus:outline-none focus:ring-2 focus:ring-blue-100 placeholder:text-slate-400\"\r\n+                        />\r\n+                      </label>\r\n+                      <label className=\"text-sm font-semibold text-slate-900\">\r\n+                        Duration (minutes)\r\n+                        <input\r\n+                          type=\"number\"\r\n+                          min=\"0\"\r\n+                          step=\"15\"\r\n+                          value={service.durationMinutes ?? \"\"}\r\n+                          onChange={(event) => handleNumberChange(index, \"durationMinutes\", event.target.value)}\r\n+                          className=\"mt-1 w-full rounded-lg border border-slate-200 bg-slate-50 px-3 py-2 text-sm text-slate-900 focus:border-blue-400 focus:outline-none focus:ring-2 focus:ring-blue-100 placeholder:text-slate-400\"\r\n+                        />\r\n+                      </label>\r\n+                    </div>\r\n+                    <label className=\"flex items-center gap-2 text-sm font-semibold text-slate-900\">\r\n+                      <input\r\n+                        type=\"checkbox\"\r\n+                        checked={Boolean(service.comingSoon)}\r\n+                        onChange={(event) => handleServiceChange(index, \"comingSoon\", event.target.checked)}\r\n+                        className=\"h-4 w-4 rounded border border-blue-300 text-blue-600 focus:ring-blue-500\"\r\n+                      />\r\n+                      Coming soon (hide from booking form)\r\n+                    </label>\r\n+                  </div>\r\n+                  <button\r\n+                    type=\"button\"\r\n+                    onClick={() => handleDeleteService(index)}\r\n+                    className=\"self-start rounded-lg border border-red-200 px-3 py-2 text-xs font-semibold text-red-600 hover:bg-red-50\"\r\n+                  >\r\n+                    Delete service\r\n+                  </button>\r\n+                </div>\r\n+\r\n+                <div className=\"mt-6 grid gap-6 md:grid-cols-2\">\r\n+                  <FeatureListEditor\r\n+                    label=\"Base Plan Features\"\r\n+                    features={service.baseFeatures || []}\r\n+                    onChange={(featureIndex, value) => handleFeatureChange(index, \"baseFeatures\", featureIndex, value)}\r\n+                    onAdd={() => handleFeatureAdd(index, \"baseFeatures\")}\r\n+                    onRemove={(featureIndex) => handleFeatureRemove(index, \"baseFeatures\", featureIndex)}\r\n+                  />\r\n+                  <FeatureListEditor\r\n+                    label=\"Revive Plan Features\"\r\n+                    features={service.reviveFeatures || []}\r\n+                    onChange={(featureIndex, value) => handleFeatureChange(index, \"reviveFeatures\", featureIndex, value)}\r\n+                    onAdd={() => handleFeatureAdd(index, \"reviveFeatures\")}\r\n+                    onRemove={(featureIndex) => handleFeatureRemove(index, \"reviveFeatures\", featureIndex)}\r\n+                  />\r\n+                </div>\r\n+              </section>\r\n+            ))}\r\n+          </div>\r\n+        )}\r\n+      </div>\r\n+    </main>\r\n+  );\r\n+}\r\n"
                }
            ],
            "date": 1761336016111,
            "name": "Commit-0",
            "content": "import { useMemo, useEffect, useState } from \"react\";\r\nimport Link from \"next/link\";\r\n\r\nconst emptyServiceTemplate = {\r\n  id: \"\",\r\n  title: \"\",\r\n  summary: \"\",\r\n  basePrice: null,\r\n  revivePrice: null,\r\n  durationMinutes: null,\r\n  comingSoon: false,\r\n  baseFeatures: [],\r\n  reviveFeatures: [],\r\n};\r\n\r\nfunction FeatureListEditor({ label, features, onChange, onAdd, onRemove }) {\r\n  return (\r\n    <div className=\"space-y-2\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <h4 className=\"text-sm font-semibold text-blue-800\">{label}</h4>\r\n        <button\r\n          type=\"button\"\r\n          onClick={onAdd}\r\n          className=\"rounded-full border border-blue-300 px-3 py-1 text-xs font-semibold text-blue-600 hover:bg-blue-50\"\r\n        >\r\n          + Add item\r\n        </button>\r\n      </div>\r\n      {features.length === 0 && (\r\n        <p className=\"text-xs text-blue-500\">No items yet. Add one above.</p>\r\n      )}\r\n      <div className=\"space-y-2\">\r\n        {features.map((feature, index) => (\r\n          <div key={`${label}-${index}`} className=\"flex items-start gap-2\">\r\n            <textarea\r\n              value={feature}\r\n              onChange={(event) => onChange(index, event.target.value)}\r\n              rows={2}\r\n              className=\"w-full rounded-lg border border-blue-200 bg-white px-3 py-2 text-sm text-blue-900 focus:border-blue-400 focus:outline-none focus:ring-2 focus:ring-blue-100\"\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => onRemove(index)}\r\n              className=\"rounded-lg border border-red-200 px-3 py-2 text-xs font-semibold text-red-600 hover:bg-red-50\"\r\n            >\r\n              Remove\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function AdminServicesPage() {\r\n  const [services, setServices] = useState([]);\r\n  const [initialServices, setInitialServices] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function loadServices() {\r\n      setLoading(true);\r\n      setError(\"\");\r\n      try {\r\n        const response = await fetch(\"/api/services\");\r\n        if (!response.ok) {\r\n          throw new Error(\"Unable to load services.\");\r\n        }\r\n        const data = await response.json();\r\n        const fetched = Array.isArray(data.services) ? data.services : [];\r\n        setServices(fetched);\r\n        setInitialServices(fetched);\r\n      } catch (loadError) {\r\n        setError(loadError.message || \"Unable to load services.\");\r\n        setServices([]);\r\n        setInitialServices([]);\r\n      }\r\n      setLoading(false);\r\n    }\r\n\r\n    loadServices();\r\n  }, []);\r\n\r\n  const hasChanges = useMemo(() => {\r\n    return JSON.stringify(services) !== JSON.stringify(initialServices);\r\n  }, [services, initialServices]);\r\n\r\n  const handleServiceChange = (index, key, value) => {\r\n    setServices((prev) =>\r\n      prev.map((service, svcIndex) =>\r\n        svcIndex === index\r\n          ? {\r\n              ...service,\r\n              [key]: value,\r\n            }\r\n          : service\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleNumberChange = (index, key, value) => {\r\n    handleServiceChange(index, key, value === \"\" ? \"\" : Number(value));\r\n  };\r\n\r\n  const handleFeatureChange = (index, field, featureIndex, value) => {\r\n    setServices((prev) =>\r\n      prev.map((service, svcIndex) => {\r\n        if (svcIndex !== index) return service;\r\n        const list = Array.isArray(service[field]) ? [...service[field]] : [];\r\n        list[featureIndex] = value;\r\n        return {\r\n          ...service,\r\n          [field]: list,\r\n        };\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleFeatureAdd = (index, field) => {\r\n    setServices((prev) =>\r\n      prev.map((service, svcIndex) => {\r\n        if (svcIndex !== index) return service;\r\n        const list = Array.isArray(service[field]) ? [...service[field]] : [];\r\n        list.push(\"\");\r\n        return {\r\n          ...service,\r\n          [field]: list,\r\n        };\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleFeatureRemove = (index, field, featureIndex) => {\r\n    setServices((prev) =>\r\n      prev.map((service, svcIndex) => {\r\n        if (svcIndex !== index) return service;\r\n        const list = Array.isArray(service[field]) ? [...service[field]] : [];\r\n        list.splice(featureIndex, 1);\r\n        return {\r\n          ...service,\r\n          [field]: list,\r\n        };\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setServices(initialServices);\r\n    setError(\"\");\r\n    setSuccess(\"\");\r\n  };\r\n\r\n  const handleAddNewService = () => {\r\n    setServices((prev) => [...prev, { ...emptyServiceTemplate, id: `service-${prev.length + 1}` }]);\r\n  };\r\n\r\n  const handleDeleteService = (index) => {\r\n    setServices((prev) => prev.filter((_, svcIndex) => svcIndex !== index));\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    setSaving(true);\r\n    setError(\"\");\r\n    setSuccess(\"\");\r\n    try {\r\n      const response = await fetch(\"/api/services\", {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ services }),\r\n      });\r\n\r\n      const data = await response.json().catch(() => ({}));\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error || \"Failed to save services.\");\r\n      }\r\n\r\n      const updated = Array.isArray(data.services) ? data.services : services;\r\n      setServices(updated);\r\n      setInitialServices(updated);\r\n      setSuccess(\"Services updated successfully.\");\r\n    } catch (saveError) {\r\n      setError(saveError.message || \"Failed to save services.\");\r\n    }\r\n    setSaving(false);\r\n  };\r\n\r\n  return (\r\n    <main className=\"min-h-screen bg-blue-50 px-4 py-10 text-blue-900\">\r\n      <div className=\"mx-auto flex max-w-5xl flex-col gap-8\">\r\n        <div className=\"flex flex-col gap-3 sm:flex-row sm:items-center sm:justify-between\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <Link\r\n              href=\"/adminDashboard\"\r\n              className=\"rounded-lg border border-blue-200 bg-white px-4 py-2 text-sm font-semibold text-blue-700 shadow-sm transition-colors hover:bg-blue-50\"\r\n            >\r\n              ‚Üê Back to Dashboard\r\n            </Link>\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleAddNewService}\r\n              className=\"rounded-lg border border-green-200 bg-green-50 px-4 py-2 text-sm font-semibold text-green-700 transition-colors hover:bg-green-100\"\r\n            >\r\n              Add New Service\r\n            </button>\r\n          </div>\r\n          <div className=\"flex flex-col gap-2 sm:flex-row sm:items-center\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleReset}\r\n              disabled={!hasChanges || saving}\r\n              className=\"rounded-lg border border-blue-200 px-4 py-2 text-sm font-semibold text-blue-600 transition-colors hover:bg-blue-50 disabled:cursor-not-allowed disabled:opacity-50\"\r\n            >\r\n              Reset\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleSave}\r\n              disabled={!hasChanges || saving}\r\n              className=\"rounded-lg bg-blue-600 px-6 py-2 text-sm font-semibold text-white shadow-sm transition-colors hover:bg-blue-700 disabled:cursor-not-allowed disabled:opacity-50\"\r\n            >\r\n              {saving ? \"Saving...\" : \"Save Changes\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <header className=\"rounded-2xl border border-blue-200 bg-white p-6 shadow\">\r\n          <h1 className=\"text-2xl font-bold\" style={{ color: \"#000\" }}>\r\n            Services & Pricing Editor\r\n          </h1>\r\n          <p className=\"mt-2 text-sm text-blue-700\">\r\n            Update prices, toggle availability, and adjust bullet points for each plan. Changes are saved directly to\r\n            <code className=\"ml-1 rounded bg-blue-100 px-2 py-0.5 text-xs text-blue-800\">data/services.js</code>.\r\n          </p>\r\n          {error && <div className=\"mt-3 rounded-lg border border-red-200 bg-red-50 px-4 py-2 text-sm text-red-700\">{error}</div>}\r\n          {success && <div className=\"mt-3 rounded-lg border border-green-200 bg-green-50 px-4 py-2 text-sm text-green-700\">{success}</div>}\r\n        </header>\r\n\r\n        {loading ? (\r\n          <div className=\"rounded-2xl border border-blue-200 bg-white p-10 text-center text-blue-600 shadow\">\r\n            Loading services...\r\n          </div>\r\n        ) : services.length === 0 ? (\r\n          <div className=\"rounded-2xl border border-blue-200 bg-white p-10 text-center text-blue-600 shadow\">\r\n            No services found. Add a new service to get started.\r\n          </div>\r\n        ) : (\r\n          <div className=\"space-y-8\">\r\n            {services.map((service, index) => (\r\n              <section key={service.id || index} className=\"rounded-2xl border border-blue-200 bg-white p-6 shadow\">\r\n                <div className=\"flex flex-col gap-4 sm:flex-row sm:items-start sm:justify-between\">\r\n                  <div className=\"space-y-4 sm:flex-1\">\r\n                    <div className=\"grid gap-3 sm:grid-cols-2\">\r\n                      <label className=\"text-sm font-semibold text-blue-800\">\r\n                        Service ID\r\n                        <input\r\n                          type=\"text\"\r\n                          value={service.id}\r\n                          onChange={(event) => handleServiceChange(index, \"id\", event.target.value)}\r\n                          className=\"mt-1 w-full rounded-lg border border-blue-200 px-3 py-2 text-sm text-blue-900 focus:border-blue-400 focus:outline-none focus:ring-2 focus:ring-blue-100\"\r\n                        />\r\n                      </label>\r\n                      <label className=\"text-sm font-semibold text-blue-800\">\r\n                        Title\r\n                        <input\r\n                          type=\"text\"\r\n                          value={service.title || \"\"}\r\n                          onChange={(event) => handleServiceChange(index, \"title\", event.target.value)}\r\n                          className=\"mt-1 w-full rounded-lg border border-blue-200 px-3 py-2 text-sm text-blue-900 focus:border-blue-400 focus:outline-none focus:ring-2 focus:ring-blue-100\"\r\n                        />\r\n                      </label>\r\n                      <label className=\"text-sm font-semibold text-blue-800 sm:col-span-2\">\r\n                        Summary\r\n                        <textarea\r\n                          value={service.summary || \"\"}\r\n                          onChange={(event) => handleServiceChange(index, \"summary\", event.target.value)}\r\n                          rows={3}\r\n                          className=\"mt-1 w-full rounded-lg border border-blue-200 px-3 py-2 text-sm text-blue-900 focus:border-blue-400 focus:outline-none focus:ring-2 focus:ring-blue-100\"\r\n                        />\r\n                      </label>\r\n                      <label className=\"text-sm font-semibold text-blue-800\">\r\n                        Base Price\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"0\"\r\n                          step=\"1\"\r\n                          value={service.basePrice ?? \"\"}\r\n                          onChange={(event) => handleNumberChange(index, \"basePrice\", event.target.value)}\r\n                          className=\"mt-1 w-full rounded-lg border border-blue-200 px-3 py-2 text-sm text-blue-900 focus:border-blue-400 focus:outline-none focus:ring-2 focus:ring-blue-100\"\r\n                        />\r\n                      </label>\r\n                      <label className=\"text-sm font-semibold text-blue-800\">\r\n                        Revive Price\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"0\"\r\n                          step=\"1\"\r\n                          value={service.revivePrice ?? \"\"}\r\n                          onChange={(event) => handleNumberChange(index, \"revivePrice\", event.target.value)}\r\n                          className=\"mt-1 w-full rounded-lg border border-blue-200 px-3 py-2 text-sm text-blue-900 focus:border-blue-400 focus:outline-none focus:ring-2 focus:ring-blue-100\"\r\n                        />\r\n                      </label>\r\n                      <label className=\"text-sm font-semibold text-blue-800\">\r\n                        Duration (minutes)\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"0\"\r\n                          step=\"15\"\r\n                          value={service.durationMinutes ?? \"\"}\r\n                          onChange={(event) => handleNumberChange(index, \"durationMinutes\", event.target.value)}\r\n                          className=\"mt-1 w-full rounded-lg border border-blue-200 px-3 py-2 text-sm text-blue-900 focus:border-blue-400 focus:outline-none focus:ring-2 focus:ring-blue-100\"\r\n                        />\r\n                      </label>\r\n                    </div>\r\n                    <label className=\"flex items-center gap-2 text-sm font-semibold text-blue-800\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={Boolean(service.comingSoon)}\r\n                        onChange={(event) => handleServiceChange(index, \"comingSoon\", event.target.checked)}\r\n                        className=\"h-4 w-4 rounded border border-blue-300 text-blue-600 focus:ring-blue-500\"\r\n                      />\r\n                      Coming soon (hide from booking form)\r\n                    </label>\r\n                  </div>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => handleDeleteService(index)}\r\n                    className=\"self-start rounded-lg border border-red-200 px-3 py-2 text-xs font-semibold text-red-600 hover:bg-red-50\"\r\n                  >\r\n                    Delete service\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"mt-6 grid gap-6 md:grid-cols-2\">\r\n                  <FeatureListEditor\r\n                    label=\"Base Plan Features\"\r\n                    features={service.baseFeatures || []}\r\n                    onChange={(featureIndex, value) => handleFeatureChange(index, \"baseFeatures\", featureIndex, value)}\r\n                    onAdd={() => handleFeatureAdd(index, \"baseFeatures\")}\r\n                    onRemove={(featureIndex) => handleFeatureRemove(index, \"baseFeatures\", featureIndex)}\r\n                  />\r\n                  <FeatureListEditor\r\n                    label=\"Revive Plan Features\"\r\n                    features={service.reviveFeatures || []}\r\n                    onChange={(featureIndex, value) => handleFeatureChange(index, \"reviveFeatures\", featureIndex, value)}\r\n                    onAdd={() => handleFeatureAdd(index, \"reviveFeatures\")}\r\n                    onRemove={(featureIndex) => handleFeatureRemove(index, \"reviveFeatures\", featureIndex)}\r\n                  />\r\n                </div>\r\n              </section>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n"
        }
    ]
}