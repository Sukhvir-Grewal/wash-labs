{
    "sourceFile": "pages/api/delete-booking.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1760675561239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1760675561239,
            "name": "Commit-0",
            "content": "import { MongoClient, ObjectId } from \"mongodb\";\r\n\r\nconst uri = process.env.MONGODB_URI;\r\nconst dbName = process.env.MONGODB_DB;\r\n\r\nexport default async function handler(req, res) {\r\n  if (req.method !== \"DELETE\") {\r\n    return res.status(405).json({ error: \"Method not allowed\" });\r\n  }\r\n  const { id } = req.query;\r\n  if (!uri || !dbName) {\r\n    return res.status(500).json({ error: \"Missing MongoDB config\" });\r\n  }\r\n  if (!id) {\r\n    return res.status(400).json({ error: \"Missing booking id\" });\r\n  }\r\n  let client;\r\n  try {\r\n    client = await MongoClient.connect(uri, { useNewUrlParser: true, useUnifiedTopology: true });\r\n    const db = client.db(dbName);\r\n    const collection = db.collection(\"bookings\");\r\n    const result = await collection.deleteOne({ _id: new ObjectId(id) });\r\n    if (result.deletedCount === 1) {\r\n      res.status(200).json({ success: true });\r\n    } else {\r\n      res.status(404).json({ error: \"Booking not found\" });\r\n    }\r\n  } catch (err) {\r\n    res.status(500).json({ error: err.message });\r\n  } finally {\r\n    if (client) await client.close();\r\n  }\r\n}\r\n"
        }
    ]
}