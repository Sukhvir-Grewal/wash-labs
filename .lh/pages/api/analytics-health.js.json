{
    "sourceFile": "pages/api/analytics-health.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1760844547517,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1760844547517,
            "name": "Commit-0",
            "content": "import { BetaAnalyticsDataClient } from '@google-analytics/data';\r\n\r\nfunction summarizeEnv() {\r\n  const clientEmail = process.env.GA4_CLIENT_EMAIL || '';\r\n  const privateKey = process.env.GA4_PRIVATE_KEY || '';\r\n  const propertyId = process.env.GA4_PROPERTY_ID || '';\r\n\r\n  const containsEscapedNewlines = privateKey.includes('\\\\n');\r\n  const containsRealNewlines = privateKey.includes('\\n');\r\n  const wrappedInQuotes = (privateKey.startsWith('\"') && privateKey.endsWith('\"')) || (privateKey.startsWith(\"'\") && privateKey.endsWith(\"'\"));\r\n\r\n  // Mask email for safety: show first 3 chars and domain\r\n  let maskedEmail = '';\r\n  if (clientEmail) {\r\n    const [name, domain] = clientEmail.split('@');\r\n    const head = (name || '').slice(0, 3);\r\n    maskedEmail = `${head}${name && name.length > 3 ? '***' : ''}@${domain || ''}`;\r\n  }\r\n\r\n  return {\r\n    hasPropertyId: Boolean(propertyId),\r\n    hasClientEmail: Boolean(clientEmail),\r\n    hasPrivateKey: Boolean(privateKey),\r\n    clientEmailMasked: maskedEmail,\r\n    privateKeyHeuristics: {\r\n      containsEscapedNewlines,\r\n      containsRealNewlines,\r\n      wrappedInQuotes,\r\n      length: privateKey ? privateKey.length : 0,\r\n    },\r\n  };\r\n}\r\n\r\nexport default async function handler(req, res) {\r\n  try {\r\n    const envSummary = summarizeEnv();\r\n    let canInitClient = false;\r\n    if (envSummary.hasClientEmail && envSummary.hasPrivateKey) {\r\n      try {\r\n        const key = (() => {\r\n          let k = process.env.GA4_PRIVATE_KEY;\r\n          if (!k) return k;\r\n          // Trim and normalize common misformatting\r\n          k = k.trim();\r\n          if ((k.startsWith('\"') && k.endsWith('\"')) || (k.startsWith(\"'\") && k.endsWith(\"'\"))) {\r\n            k = k.slice(1, -1);\r\n          }\r\n          if (k.includes('\\\\n')) k = k.replace(/\\\\n/g, '\\n');\r\n          return k;\r\n        })();\r\n        // Attempt to construct the client (no network call)\r\n        // If this throws, credentials are malformed\r\n        // eslint-disable-next-line no-new\r\n        new BetaAnalyticsDataClient({\r\n          credentials: {\r\n            client_email: process.env.GA4_CLIENT_EMAIL,\r\n            private_key: key,\r\n          },\r\n        });\r\n        canInitClient = true;\r\n      } catch (err) {\r\n        canInitClient = false;\r\n      }\r\n    }\r\n\r\n    res.status(200).json({ success: true, env: envSummary, canInitClient });\r\n  } catch (e) {\r\n    res.status(500).json({ success: false, error: e?.message || 'Unknown error' });\r\n  }\r\n}\r\n"
        }
    ]
}