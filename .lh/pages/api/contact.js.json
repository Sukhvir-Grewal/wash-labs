{
    "sourceFile": "pages/api/contact.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1757907084559,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1757907319354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,27 +11,38 @@\n     return res.status(400).json({ message: \"All fields are required\" });\n   }\n \n   try {\n-    // create transporter (use Gmail SMTP)\n+    // Configure your transporter (use your Gmail credentials or environment variables)\n     const transporter = nodemailer.createTransport({\n       service: \"gmail\",\n       auth: {\n-        user: process.env.EMAIL_USER, // your washlabs.ca@gmail.com\n-        pass: process.env.EMAIL_PASS, // app password from Gmail\n+        user: process.env.EMAIL_USER, // e.g., washlabs.ca@gmail.com\n+        pass: process.env.EMAIL_PASS, // Gmail app password\n       },\n     });\n \n-    await transporter.sendMail({\n-      from: email,\n-      to: \"washlabs.ca@gmail.com\",\n-      subject: `New message from ${name}`,\n-      text: message,\n-      html: `<p>${message}</p><p>From: ${name} (${email})</p>`,\n-    });\n+    // Compose the email\n+    const mailOptions = {\n+      from: `\"WashLabs Contact Form\" <${process.env.EMAIL_USER}>`,\n+      to: \"washlabs.ca@gmail.com\", // your inbox\n+      subject: `📩 New Contact Message from ${name}`, // clear subject\n+      html: `\n+        <h2 style=\"color:#f97316;\">New Contact Form Submission</h2>\n+        <p><strong>Name:</strong> ${name}</p>\n+        <p><strong>Email:</strong> ${email}</p>\n+        <p><strong>Message:</strong></p>\n+        <p style=\"white-space: pre-line;\">${message}</p>\n+        <hr />\n+        <p style=\"font-size:0.9rem;color:gray;\">This message was sent from the WashLabs website contact form.</p>\n+      `,\n+    };\n \n-    return res.status(200).json({ message: \"Email sent successfully\" });\n+    // Send the email\n+    await transporter.sendMail(mailOptions);\n+\n+    return res.status(200).json({ message: \"Message sent successfully\" });\n   } catch (error) {\n-    console.error(error);\n-    return res.status(500).json({ message: \"Something went wrong\" });\n+    console.error(\"Error sending email:\", error);\n+    return res.status(500).json({ message: \"Failed to send message\" });\n   }\n }\n"
                },
                {
                    "date": 1758176588656,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,37 +11,68 @@\n     return res.status(400).json({ message: \"All fields are required\" });\n   }\n \n   try {\n-    // Configure your transporter (use your Gmail credentials or environment variables)\n     const transporter = nodemailer.createTransport({\n       service: \"gmail\",\n       auth: {\n         user: process.env.EMAIL_USER, // e.g., washlabs.ca@gmail.com\n         pass: process.env.EMAIL_PASS, // Gmail app password\n       },\n     });\n \n-    // Compose the email\n-    const mailOptions = {\n+    // 📩 Send to Admin\n+    const adminMail = {\n       from: `\"WashLabs Contact Form\" <${process.env.EMAIL_USER}>`,\n       to: \"washlabs.ca@gmail.com\", // your inbox\n-      subject: `📩 New Contact Message from ${name}`, // clear subject\n+      subject: `📩 New Contact Message from ${name}`,\n       html: `\n         <h2 style=\"color:#f97316;\">New Contact Form Submission</h2>\n         <p><strong>Name:</strong> ${name}</p>\n         <p><strong>Email:</strong> ${email}</p>\n         <p><strong>Message:</strong></p>\n         <p style=\"white-space: pre-line;\">${message}</p>\n         <hr />\n-        <p style=\"font-size:0.9rem;color:gray;\">This message was sent from the WashLabs website contact form.</p>\n+        <p style=\"font-size:0.9rem;color:gray;\">\n+          This message was sent from the WashLabs website contact form.\n+        </p>\n       `,\n+      replyTo: email, // ✅ allows you to reply directly to the sender\n     };\n \n-    // Send the email\n-    await transporter.sendMail(mailOptions);\n+    await transporter.sendMail(adminMail);\n \n-    return res.status(200).json({ message: \"Message sent successfully\" });\n+    // 📩 Confirmation to User (No Reply)\n+    const confirmationMail = {\n+      from: `\"WashLabs (No Reply)\" <no-reply@washlabs.ca>`, // ✅ noreply sender\n+      to: email,\n+      subject: \"✅ We’ve received your message\",\n+      html: `\n+        <div style=\"font-family:Arial, sans-serif; line-height:1.6; color:#333;\">\n+          <h2 style=\"color:#22c55e;\">Hello ${name},</h2>\n+          <p>Thank you for contacting <strong>WashLabs</strong>. We’ve received your message and our team will review it shortly.</p>\n+          \n+          <h3 style=\"color:#f97316;\">Your Message</h3>\n+          <p style=\"white-space: pre-line; border-left:3px solid #f97316; padding-left:8px; color:#444;\">\n+            ${message}\n+          </p>\n+          \n+          <hr/>\n+          <p style=\"font-size:0.9rem; color:gray;\">\n+            WashLabs Team<br/>\n+            📍 Halifax / Dartmouth / Bedford<br/>\n+            ✉️ washlabs.ca@gmail.com<br/>\n+            ⚠️ This is an automated email from a no-reply address. Please do not reply directly.\n+          </p>\n+        </div>\n+      `,\n+    };\n+\n+    await transporter.sendMail(confirmationMail);\n+\n+    return res\n+      .status(200)\n+      .json({ message: \"Message and confirmation sent successfully\" });\n   } catch (error) {\n     console.error(\"Error sending email:\", error);\n     return res.status(500).json({ message: \"Failed to send message\" });\n   }\n"
                },
                {
                    "date": 1758176625679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,32 +1,32 @@\n import nodemailer from \"nodemailer\";\n \n export default async function handler(req, res) {\n-  if (req.method !== \"POST\") {\n-    return res.status(405).json({ message: \"Method not allowed\" });\n-  }\n+    if (req.method !== \"POST\") {\n+        return res.status(405).json({ message: \"Method not allowed\" });\n+    }\n \n-  const { name, email, message } = req.body;\n+    const { name, email, message } = req.body;\n \n-  if (!name || !email || !message) {\n-    return res.status(400).json({ message: \"All fields are required\" });\n-  }\n+    if (!name || !email || !message) {\n+        return res.status(400).json({ message: \"All fields are required\" });\n+    }\n \n-  try {\n-    const transporter = nodemailer.createTransport({\n-      service: \"gmail\",\n-      auth: {\n-        user: process.env.EMAIL_USER, // e.g., washlabs.ca@gmail.com\n-        pass: process.env.EMAIL_PASS, // Gmail app password\n-      },\n-    });\n+    try {\n+        const transporter = nodemailer.createTransport({\n+            service: \"gmail\",\n+            auth: {\n+                user: process.env.EMAIL_USER, // e.g., washlabs.ca@gmail.com\n+                pass: process.env.EMAIL_PASS, // Gmail app password\n+            },\n+        });\n \n-    // 📩 Send to Admin\n-    const adminMail = {\n-      from: `\"WashLabs Contact Form\" <${process.env.EMAIL_USER}>`,\n-      to: \"washlabs.ca@gmail.com\", // your inbox\n-      subject: `📩 New Contact Message from ${name}`,\n-      html: `\n+        // 📩 Send to Admin\n+        const adminMail = {\n+            from: `\"WashLabs Contact Form\" <${process.env.EMAIL_USER}>`,\n+            to: \"washlabs.ca@gmail.com\", // your inbox\n+            subject: `📩 New Contact Message from ${name}`,\n+            html: `\n         <h2 style=\"color:#f97316;\">New Contact Form Submission</h2>\n         <p><strong>Name:</strong> ${name}</p>\n         <p><strong>Email:</strong> ${email}</p>\n         <p><strong>Message:</strong></p>\n@@ -35,19 +35,19 @@\n         <p style=\"font-size:0.9rem;color:gray;\">\n           This message was sent from the WashLabs website contact form.\n         </p>\n       `,\n-      replyTo: email, // ✅ allows you to reply directly to the sender\n-    };\n+            replyTo: email, // ✅ allows you to reply directly to the sender\n+        };\n \n-    await transporter.sendMail(adminMail);\n+        await transporter.sendMail(adminMail);\n \n-    // 📩 Confirmation to User (No Reply)\n-    const confirmationMail = {\n-      from: `\"WashLabs (No Reply)\" <no-reply@washlabs.ca>`, // ✅ noreply sender\n-      to: email,\n-      subject: \"✅ We’ve received your message\",\n-      html: `\n+        // 📩 Confirmation to User (No Reply)\n+        const confirmationMail = {\n+            from: `\"WashLabs (No Reply)\" <no-reply@washlabs.ca>`, // ✅ noreply sender\n+            to: email,\n+            subject: \"✅ We’ve received your message\",\n+            html: `\n         <div style=\"font-family:Arial, sans-serif; line-height:1.6; color:#333;\">\n           <h2 style=\"color:#22c55e;\">Hello ${name},</h2>\n           <p>Thank you for contacting <strong>WashLabs</strong>. We’ve received your message and our team will review it shortly.</p>\n           \n@@ -64,16 +64,16 @@\n             ⚠️ This is an automated email from a no-reply address. Please do not reply directly.\n           </p>\n         </div>\n       `,\n-    };\n+        };\n \n-    await transporter.sendMail(confirmationMail);\n+        await transporter.sendMail(confirmationMail);\n \n-    return res\n-      .status(200)\n-      .json({ message: \"Message and confirmation sent successfully\" });\n-  } catch (error) {\n-    console.error(\"Error sending email:\", error);\n-    return res.status(500).json({ message: \"Failed to send message\" });\n-  }\n+        return res\n+            .status(200)\n+            .json({ message: \"Message and confirmation sent successfully\" });\n+    } catch (error) {\n+        console.error(\"Error sending email:\", error);\n+        return res.status(500).json({ message: \"Failed to send message\" });\n+    }\n }\n"
                }
            ],
            "date": 1757907084559,
            "name": "Commit-0",
            "content": "import nodemailer from \"nodemailer\";\n\nexport default async function handler(req, res) {\n  if (req.method !== \"POST\") {\n    return res.status(405).json({ message: \"Method not allowed\" });\n  }\n\n  const { name, email, message } = req.body;\n\n  if (!name || !email || !message) {\n    return res.status(400).json({ message: \"All fields are required\" });\n  }\n\n  try {\n    // create transporter (use Gmail SMTP)\n    const transporter = nodemailer.createTransport({\n      service: \"gmail\",\n      auth: {\n        user: process.env.EMAIL_USER, // your washlabs.ca@gmail.com\n        pass: process.env.EMAIL_PASS, // app password from Gmail\n      },\n    });\n\n    await transporter.sendMail({\n      from: email,\n      to: \"washlabs.ca@gmail.com\",\n      subject: `New message from ${name}`,\n      text: message,\n      html: `<p>${message}</p><p>From: ${name} (${email})</p>`,\n    });\n\n    return res.status(200).json({ message: \"Email sent successfully\" });\n  } catch (error) {\n    console.error(error);\n    return res.status(500).json({ message: \"Something went wrong\" });\n  }\n}\n"
        }
    ]
}