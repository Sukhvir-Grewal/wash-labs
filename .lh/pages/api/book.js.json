{
    "sourceFile": "pages/api/book.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1757005877586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1757006076352,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,130 @@\n+import { useState } from \"react\";\r\n+import Calendar from \"react-calendar\";\r\n+import \"react-calendar/dist/Calendar.css\";\r\n+import { motion } from \"framer-motion\";\r\n+\r\n+export default function BookingPage() {\r\n+  const [date, setDate] = useState(new Date());\r\n+  const [time, setTime] = useState(\"\");\r\n+  const [name, setName] = useState(\"\");\r\n+  const [email, setEmail] = useState(\"\");\r\n+  const [submitted, setSubmitted] = useState(false);\r\n+\r\n+  const isWeekend = (date) => {\r\n+    const day = date.getDay();\r\n+    return day === 6 || day === 0; // Saturday (6), Sunday (0)\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    const res = await fetch(\"/api/book\", {\r\n+      method: \"POST\",\r\n+      headers: { \"Content-Type\": \"application/json\" },\r\n+      body: JSON.stringify({ name, email, date, time }),\r\n+    });\r\n+\r\n+    if (res.ok) {\r\n+      setSubmitted(true);\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen flex flex-col items-center justify-center bg-gradient-to-br from-blue-50 to-blue-200 p-6\">\r\n+      <motion.h1\r\n+        initial={{ y: -50, opacity: 0 }}\r\n+        animate={{ y: 0, opacity: 1 }}\r\n+        transition={{ duration: 0.6 }}\r\n+        className=\"text-4xl font-extrabold mb-6 text-blue-800 drop-shadow-lg\"\r\n+      >\r\n+        Book Your Detailing Appointment\r\n+      </motion.h1>\r\n+\r\n+      {submitted ? (\r\n+        <motion.div\r\n+          initial={{ scale: 0.8, opacity: 0 }}\r\n+          animate={{ scale: 1, opacity: 1 }}\r\n+          transition={{ duration: 0.5 }}\r\n+          className=\"p-6 bg-green-100 rounded-2xl shadow-lg\"\r\n+        >\r\n+          <h2 className=\"text-xl font-semibold text-green-800\">\r\n+            ✅ Booking Sent! We’ll confirm with you soon.\r\n+          </h2>\r\n+        </motion.div>\r\n+      ) : (\r\n+        <motion.form\r\n+          initial={{ opacity: 0, y: 30 }}\r\n+          animate={{ opacity: 1, y: 0 }}\r\n+          transition={{ duration: 0.6 }}\r\n+          onSubmit={handleSubmit}\r\n+          className=\"bg-white p-8 rounded-2xl shadow-2xl w-full max-w-lg space-y-6\"\r\n+        >\r\n+          <div>\r\n+            <label className=\"block font-medium text-gray-700\">Your Name</label>\r\n+            <input\r\n+              type=\"text\"\r\n+              value={name}\r\n+              onChange={(e) => setName(e.target.value)}\r\n+              required\r\n+              className=\"w-full border rounded-lg px-4 py-2 mt-1 focus:ring-2 focus:ring-blue-400 outline-none\"\r\n+            />\r\n+          </div>\r\n+\r\n+          <div>\r\n+            <label className=\"block font-medium text-gray-700\">Your Email</label>\r\n+            <input\r\n+              type=\"email\"\r\n+              value={email}\r\n+              onChange={(e) => setEmail(e.target.value)}\r\n+              required\r\n+              className=\"w-full border rounded-lg px-4 py-2 mt-1 focus:ring-2 focus:ring-blue-400 outline-none\"\r\n+            />\r\n+          </div>\r\n+\r\n+          <div className=\"flex flex-col items-center\">\r\n+            <label className=\"block font-medium text-gray-700 mb-2\">\r\n+              Select Date\r\n+            </label>\r\n+            <Calendar\r\n+              value={date}\r\n+              onChange={setDate}\r\n+              className=\"rounded-xl shadow-lg p-2\"\r\n+              tileDisabled={({ date }) => !isWeekend(date)}\r\n+            />\r\n+            <p className=\"mt-2 text-sm text-gray-500 italic\">\r\n+              (Bookings available only on Saturday & Sunday)\r\n+            </p>\r\n+          </div>\r\n+\r\n+          <div>\r\n+            <label className=\"block font-medium text-gray-700\">\r\n+              Select Time Slot\r\n+            </label>\r\n+            <select\r\n+              value={time}\r\n+              onChange={(e) => setTime(e.target.value)}\r\n+              required\r\n+              className=\"w-full border rounded-lg px-4 py-2 mt-1 focus:ring-2 focus:ring-blue-400 outline-none\"\r\n+            >\r\n+              <option value=\"\">-- Choose a time --</option>\r\n+              <option>9:00 AM</option>\r\n+              <option>11:00 AM</option>\r\n+              <option>1:00 PM</option>\r\n+              <option>3:00 PM</option>\r\n+              <option>5:00 PM</option>\r\n+            </select>\r\n+          </div>\r\n+\r\n+          <motion.button\r\n+            whileHover={{ scale: 1.05 }}\r\n+            whileTap={{ scale: 0.95 }}\r\n+            type=\"submit\"\r\n+            className=\"w-full bg-blue-600 text-white font-semibold py-3 rounded-lg shadow-lg hover:bg-blue-700 transition\"\r\n+          >\r\n+            Confirm Booking\r\n+          </motion.button>\r\n+        </motion.form>\r\n+      )}\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1757006196033,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,35 @@\n+import nodemailer from \"nodemailer\";\r\n+\r\n+export default async function handler(req, res) {\r\n+  if (req.method === \"POST\") {\r\n+    const { name, email, date, time } = req.body;\r\n+\r\n+    try {\r\n+      let transporter = nodemailer.createTransport({\r\n+        service: \"gmail\",\r\n+        auth: {\r\n+          user: process.env.EMAIL_USER,\r\n+          pass: process.env.EMAIL_PASS,\r\n+        },\r\n+      });\r\n+\r\n+      await transporter.sendMail({\r\n+        from: process.env.EMAIL_USER,\r\n+        to: \"washlabs.ca@gmail.com\",\r\n+        subject: \"New Booking Request\",\r\n+        text: `\r\n+          Name: ${name}\r\n+          Email: ${email}\r\n+          Date: ${new Date(date).toDateString()}\r\n+          Time: ${time}\r\n+        `,\r\n+      });\r\n+\r\n+      return res.status(200).json({ message: \"Booking sent\" });\r\n+    } catch (err) {\r\n+      return res.status(500).json({ error: err.message });\r\n+    }\r\n+  } else {\r\n+    res.status(405).json({ error: \"Method not allowed\" });\r\n+  }\r\n+}\r\n"
                }
            ],
            "date": 1757005877586,
            "name": "Commit-0",
            "content": "import nodemailer from \"nodemailer\";\r\n\r\nexport default async function handler(req, res) {\r\n  if (req.method === \"POST\") {\r\n    const { name, email, date, time } = req.body;\r\n\r\n    try {\r\n      let transporter = nodemailer.createTransport({\r\n        service: \"gmail\",\r\n        auth: {\r\n          user: process.env.EMAIL_USER,\r\n          pass: process.env.EMAIL_PASS,\r\n        },\r\n      });\r\n\r\n      await transporter.sendMail({\r\n        from: process.env.EMAIL_USER,\r\n        to: \"washlabs.ca@gmail.com\",\r\n        subject: \"New Booking Request\",\r\n        text: `\r\n          Name: ${name}\r\n          Email: ${email}\r\n          Date: ${new Date(date).toDateString()}\r\n          Time: ${time}\r\n        `,\r\n      });\r\n\r\n      return res.status(200).json({ message: \"Booking sent\" });\r\n    } catch (err) {\r\n      return res.status(500).json({ error: err.message });\r\n    }\r\n  } else {\r\n    res.status(405).json({ error: \"Method not allowed\" });\r\n  }\r\n}\r\n"
        }
    ]
}