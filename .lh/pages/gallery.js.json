{
    "sourceFile": "pages/gallery.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1760034059342,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1760034179728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,41 @@\n+import Head from \"next/head\";\r\n+import Image from \"next/image\";\r\n+\r\n+const galleryImages = [\r\n+    \"/images/slides/slide1.jpg\",\r\n+    \"/images/slides/slide2.jpg\",\r\n+    \"/images/slides/slide3.jpg\",\r\n+    \"/images/slides/slide4.jpg\",\r\n+    // Add more images as needed\r\n+];\r\n+\r\n+export default function GalleryPage() {\r\n+    return (\r\n+        <>\r\n+            <Head>\r\n+                <title>Gallery | Wash Labs</title>\r\n+                <meta name=\"description\" content=\"Gallery of Wash Labs car detailing work in Halifax.\" />\r\n+            </Head>\r\n+            <section className=\"min-h-screen bg-blue-50 py-20\">\r\n+                <div className=\"max-w-7xl mx-auto px-4\">\r\n+                    <h1 className=\"text-4xl font-extrabold text-[#0076ff] mb-10 text-center\">Gallery</h1>\r\n+                    <div className=\"grid gap-8 grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4\">\r\n+                        {galleryImages.map((img, idx) => (\r\n+                            <div key={idx} className=\"rounded-2xl overflow-hidden shadow-lg bg-white\">\r\n+                                <Image\r\n+                                    src={img}\r\n+                                    alt={`Gallery image ${idx + 1}`}\r\n+                                    width={600}\r\n+                                    height={400}\r\n+                                    className=\"w-full h-64 object-cover transition-opacity duration-700 opacity-0\"\r\n+                                    onLoadingComplete={imgEl => imgEl.classList.remove(\"opacity-0\")}\r\n+                                    priority={idx < 4}\r\n+                                />\r\n+                            </div>\r\n+                        ))}\r\n+                    </div>\r\n+                </div>\r\n+            </section>\r\n+        </>\r\n+    );\r\n+}\r\n"
                },
                {
                    "date": 1760034277324,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,57 +1,27 @@\n import Head from \"next/head\";\r\n import Image from \"next/image\";\r\n+import fs from \"fs\";\r\n+import path from \"path\";\r\n \r\n-const galleryImages = [\r\n-    \"/images/slides/slide1.jpg\",\r\n-    \"/images/slides/slide2.jpg\",\r\n-    \"/images/slides/slide3.jpg\",\r\n-    \"/images/slides/slide4.jpg\",\r\n-    // Add more images as needed\r\n-];\r\n-\r\n-export default function GalleryPage() {\r\n-    return (\r\n-        <>\r\n-            <Head>\r\n-                <title>Gallery | Wash Labs</title>\r\n-                <meta name=\"description\" content=\"Gallery of Wash Labs car detailing work in Halifax.\" />\r\n-            </Head>\r\n-            <section className=\"min-h-screen bg-blue-50 py-20\">\r\n-                <div className=\"max-w-7xl mx-auto px-4\">\r\n-                    <h1 className=\"text-4xl font-extrabold text-[#0076ff] mb-10 text-center\">Gallery</h1>\r\n-                    <div className=\"grid gap-8 grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4\">\r\n-                        {galleryImages.map((img, idx) => (\r\n-                            <div key={idx} className=\"rounded-2xl overflow-hidden shadow-lg bg-white\">\r\n-                                <Image\r\n-                                    src={img}\r\n-                                    alt={`Gallery image ${idx + 1}`}\r\n-                                    width={600}\r\n-                                    height={400}\r\n-                                    className=\"w-full h-64 object-cover transition-opacity duration-700 opacity-0\"\r\n-                                    onLoadingComplete={imgEl => imgEl.classList.remove(\"opacity-0\")}\r\n-                                    priority={idx < 4}\r\n-                                />\r\n-                            </div>\r\n-                        ))}\r\n-                    </div>\r\n-                </div>\r\n-            </section>\r\n-        </>\r\n-    );\r\n+// Get all image files from /public/images/gallery at build time\r\n+export async function getStaticProps() {\r\n+    const galleryDir = path.join(process.cwd(), \"public\", \"images\", \"gallery\");\r\n+    let images = [];\r\n+    try {\r\n+        images = fs\r\n+            .readdirSync(galleryDir)\r\n+            .filter((file) =>\r\n+                /\\.(jpe?g|png|webp|gif)$/i.test(file)\r\n+            )\r\n+            .map((file) => `/images/gallery/${file}`);\r\n+    } catch (e) {\r\n+        // Directory may not exist yet\r\n+    }\r\n+    return { props: { galleryImages: images } };\r\n }\r\n-import Head from \"next/head\";\r\n-import Image from \"next/image\";\r\n \r\n-const galleryImages = [\r\n-    \"/images/slides/slide1.jpg\",\r\n-    \"/images/slides/slide2.jpg\",\r\n-    \"/images/slides/slide3.jpg\",\r\n-    \"/images/slides/slide4.jpg\",\r\n-    // Add more images as needed\r\n-];\r\n-\r\n-export default function GalleryPage() {\r\n+export default function GalleryPage({ galleryImages }) {\r\n     return (\r\n         <>\r\n             <Head>\r\n                 <title>Gallery | Wash Labs</title>\r\n@@ -61,9 +31,9 @@\n                 <div className=\"max-w-7xl mx-auto px-4\">\r\n                     <h1 className=\"text-4xl font-extrabold text-[#0076ff] mb-10 text-center\">Gallery</h1>\r\n                     <div className=\"grid gap-8 grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4\">\r\n                         {galleryImages.map((img, idx) => (\r\n-                            <div key={idx} className=\"rounded-2xl overflow-hidden shadow-lg bg-white\">\r\n+                            <div key={img} className=\"rounded-2xl overflow-hidden shadow-lg bg-white\">\r\n                                 <Image\r\n                                     src={img}\r\n                                     alt={`Gallery image ${idx + 1}`}\r\n                                     width={600}\r\n"
                },
                {
                    "date": 1760034672788,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import Head from \"next/head\";\r\n import Image from \"next/image\";\r\n import fs from \"fs\";\r\n import path from \"path\";\r\n+import { useState } from \"react\";\r\n \r\n // Get all image files from /public/images/gallery at build time\r\n export async function getStaticProps() {\r\n     const galleryDir = path.join(process.cwd(), \"public\", \"images\", \"gallery\");\r\n@@ -20,8 +21,10 @@\n     return { props: { galleryImages: images } };\r\n }\r\n \r\n export default function GalleryPage({ galleryImages }) {\r\n+    const [modalImg, setModalImg] = useState(null);\r\n+\r\n     return (\r\n         <>\r\n             <Head>\r\n                 <title>Gallery | Wash Labs</title>\r\n@@ -29,24 +32,78 @@\n             </Head>\r\n             <section className=\"min-h-screen bg-blue-50 py-20\">\r\n                 <div className=\"max-w-7xl mx-auto px-4\">\r\n                     <h1 className=\"text-4xl font-extrabold text-[#0076ff] mb-10 text-center\">Gallery</h1>\r\n-                    <div className=\"grid gap-8 grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4\">\r\n-                        {galleryImages.map((img, idx) => (\r\n-                            <div key={img} className=\"rounded-2xl overflow-hidden shadow-lg bg-white\">\r\n+                    <div\r\n+                        className=\"grid gap-4 grid-cols-2 sm:grid-cols-4 md:grid-cols-6 auto-rows-[180px] md:auto-rows-[200px]\"\r\n+                        style={{ gridAutoFlow: \"dense\" }}\r\n+                    >\r\n+                        {galleryImages.map((img, idx) => {\r\n+                            const isLarge = idx % 7 === 0 || idx % 11 === 0;\r\n+                            return (\r\n+                                <div\r\n+                                    key={img}\r\n+                                    className={`relative overflow-hidden rounded-xl shadow-lg bg-white group transition-all duration-300\r\n+                                        ${isLarge ? \"col-span-2 row-span-2\" : \"\"}\r\n+                                        cursor-pointer\r\n+                                    `}\r\n+                                    style={{\r\n+                                        minHeight: isLarge ? 400 : 180,\r\n+                                        gridColumn: isLarge ? \"span 2\" : undefined,\r\n+                                        gridRow: isLarge ? \"span 2\" : undefined,\r\n+                                    }}\r\n+                                    onClick={() => setModalImg(img)}\r\n+                                >\r\n+                                    <Image\r\n+                                        src={img}\r\n+                                        alt={`Gallery image ${idx + 1}`}\r\n+                                        fill\r\n+                                        sizes={isLarge ? \"(min-width: 768px) 33vw, 100vw\" : \"(min-width: 768px) 16vw, 50vw\"}\r\n+                                        className=\"object-cover w-full h-full transition-transform duration-500 group-hover:scale-105\"\r\n+                                        style={{ objectPosition: \"center\" }}\r\n+                                        quality={90}\r\n+                                        priority={idx < 4}\r\n+                                    />\r\n+                                </div>\r\n+                            );\r\n+                        })}\r\n+                    </div>\r\n+                </div>\r\n+                {/* Modal for enlarged image */}\r\n+                {modalImg && (\r\n+                    <div\r\n+                        className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/70 backdrop-blur-sm transition-all duration-300\"\r\n+                        onClick={() => setModalImg(null)}\r\n+                    >\r\n+                        <div\r\n+                            className=\"relative max-w-3xl w-[90vw] max-h-[90vh] flex items-center justify-center animate-fade-in\"\r\n+                            onClick={e => e.stopPropagation()}\r\n+                            style={{ aspectRatio: \"3/2\", transition: \"transform 0.3s cubic-bezier(.4,2,.6,1)\" }}\r\n+                        >\r\n+                            <div className=\"relative w-full h-[60vw] max-h-[80vh] max-w-3xl transition-all duration-300\">\r\n                                 <Image\r\n-                                    src={img}\r\n-                                    alt={`Gallery image ${idx + 1}`}\r\n-                                    width={600}\r\n-                                    height={400}\r\n-                                    className=\"w-full h-64 object-cover transition-opacity duration-700 opacity-0\"\r\n-                                    onLoadingComplete={imgEl => imgEl.classList.remove(\"opacity-0\")}\r\n-                                    priority={idx < 4}\r\n+                                    src={modalImg}\r\n+                                    alt=\"Enlarged gallery image\"\r\n+                                    fill\r\n+                                    sizes=\"90vw\"\r\n+                                    className=\"object-contain rounded-2xl shadow-2xl bg-white transition-all duration-300 scale-100\"\r\n+                                    style={{ background: \"white\" }}\r\n+                                    quality={95}\r\n+                                    priority\r\n                                 />\r\n                             </div>\r\n-                        ))}\r\n+                        </div>\r\n                     </div>\r\n-                </div>\r\n+                )}\r\n             </section>\r\n+            <style jsx global>{`\r\n+                @keyframes fade-in {\r\n+                    from { opacity: 0; transform: scale(0.96);}\r\n+                    to { opacity: 1; transform: scale(1);}\r\n+                }\r\n+                .animate-fade-in {\r\n+                    animation: fade-in 0.35s cubic-bezier(.4,2,.6,1);\r\n+                }\r\n+            `}</style>\r\n         </>\r\n     );\r\n }\r\n"
                },
                {
                    "date": 1760034760257,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,109 @@\n+import Head from \"next/head\";\r\n+import Image from \"next/image\";\r\n+import fs from \"fs\";\r\n+import path from \"path\";\r\n+import { useState } from \"react\";\r\n+\r\n+// Get all image files from /public/images/gallery at build time\r\n+export async function getStaticProps() {\r\n+    const galleryDir = path.join(process.cwd(), \"public\", \"images\", \"gallery\");\r\n+    let images = [];\r\n+    try {\r\n+        images = fs\r\n+            .readdirSync(galleryDir)\r\n+            .filter((file) =>\r\n+                /\\.(jpe?g|png|webp|gif)$/i.test(file)\r\n+            )\r\n+            .map((file) => `/images/gallery/${file}`);\r\n+    } catch (e) {\r\n+        // Directory may not exist yet\r\n+    }\r\n+    return { props: { galleryImages: images } };\r\n+}\r\n+\r\n+export default function GalleryPage({ galleryImages }) {\r\n+    const [modalImg, setModalImg] = useState(null);\r\n+\r\n+    return (\r\n+        <>\r\n+            <Head>\r\n+                <title>Gallery | Wash Labs</title>\r\n+                <meta name=\"description\" content=\"Gallery of Wash Labs car detailing work in Halifax.\" />\r\n+            </Head>\r\n+            <section className=\"min-h-screen bg-blue-50 py-14 sm:py-20\">\r\n+                <div className=\"max-w-7xl mx-auto px-2 sm:px-4\">\r\n+                    <h1 className=\"text-3xl sm:text-4xl font-extrabold text-[#0076ff] mb-6 sm:mb-10 text-center\">Gallery</h1>\r\n+                    <div\r\n+                        className=\"grid gap-2 sm:gap-4 grid-cols-2 sm:grid-cols-4 md:grid-cols-6 auto-rows-[120px] sm:auto-rows-[180px] md:auto-rows-[200px]\"\r\n+                        style={{ gridAutoFlow: \"dense\" }}\r\n+                    >\r\n+                        {galleryImages.map((img, idx) => {\r\n+                            const isLarge = idx % 7 === 0 || idx % 11 === 0;\r\n+                            return (\r\n+                                <div\r\n+                                    key={img}\r\n+                                    className={`relative overflow-hidden rounded-xl shadow-lg bg-white group transition-all duration-300\r\n+                                        ${isLarge ? \"col-span-2 row-span-2\" : \"\"}\r\n+                                        cursor-pointer\r\n+                                    `}\r\n+                                    style={{\r\n+                                        minHeight: isLarge ? 240 : 100,\r\n+                                        gridColumn: isLarge ? \"span 2\" : undefined,\r\n+                                        gridRow: isLarge ? \"span 2\" : undefined,\r\n+                                    }}\r\n+                                    onClick={() => setModalImg(img)}\r\n+                                >\r\n+                                    <Image\r\n+                                        src={img}\r\n+                                        alt={`Gallery image ${idx + 1}`}\r\n+                                        fill\r\n+                                        sizes={isLarge ? \"(min-width: 768px) 33vw, 100vw\" : \"(min-width: 768px) 16vw, 50vw\"}\r\n+                                        className=\"object-cover w-full h-full transition-transform duration-500 group-hover:scale-105\"\r\n+                                        style={{ objectPosition: \"center\" }}\r\n+                                        quality={90}\r\n+                                        priority={idx < 4}\r\n+                                    />\r\n+                                </div>\r\n+                            );\r\n+                        })}\r\n+                    </div>\r\n+                </div>\r\n+                {/* Modal for enlarged image */}\r\n+                {modalImg && (\r\n+                    <div\r\n+                        className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/70 backdrop-blur-sm transition-all duration-300\"\r\n+                        onClick={() => setModalImg(null)}\r\n+                    >\r\n+                        <div\r\n+                            className=\"relative max-w-3xl w-[96vw] sm:w-[90vw] max-h-[90vh] flex items-center justify-center animate-fade-in\"\r\n+                            onClick={e => e.stopPropagation()}\r\n+                            style={{ aspectRatio: \"3/2\", transition: \"transform 0.3s cubic-bezier(.4,2,.6,1)\" }}\r\n+                        >\r\n+                            <div className=\"relative w-full h-[60vw] sm:h-[50vw] max-h-[80vh] max-w-3xl transition-all duration-300\">\r\n+                                <Image\r\n+                                    src={modalImg}\r\n+                                    alt=\"Enlarged gallery image\"\r\n+                                    fill\r\n+                                    sizes=\"90vw\"\r\n+                                    className=\"object-contain rounded-2xl shadow-2xl bg-white transition-all duration-300 scale-100\"\r\n+                                    style={{ background: \"white\" }}\r\n+                                    quality={95}\r\n+                                    priority\r\n+                                />\r\n+                            </div>\r\n+                        </div>\r\n+                    </div>\r\n+                )}\r\n+            </section>\r\n+            <style jsx global>{`\r\n+                @keyframes fade-in {\r\n+                    from { opacity: 0; transform: scale(0.96);}\r\n+                    to { opacity: 1; transform: scale(1);}\r\n+                }\r\n+                .animate-fade-in {\r\n+                    animation: fade-in 0.35s cubic-bezier(.4,2,.6,1);\r\n+                }\r\n+            `}</style>\r\n+        </>\r\n+    );\r\n+}\r\n"
                },
                {
                    "date": 1760037316714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     try {\r\n         images = fs\r\n             .readdirSync(galleryDir)\r\n             .filter((file) =>\r\n-                /\\.(jpe?g|png|webp|gif)$/i.test(file)\r\n+                /\\.(jpe?g|png|webp|gif|heic)$/i.test(file)\r\n             )\r\n             .map((file) => `/images/gallery/${file}`);\r\n     } catch (e) {\r\n         // Directory may not exist yet\r\n@@ -106,113 +106,4 @@\n             `}</style>\r\n         </>\r\n     );\r\n }\r\n-import Head from \"next/head\";\r\n-import Image from \"next/image\";\r\n-import fs from \"fs\";\r\n-import path from \"path\";\r\n-import { useState } from \"react\";\r\n-\r\n-// Get all image files from /public/images/gallery at build time\r\n-export async function getStaticProps() {\r\n-    const galleryDir = path.join(process.cwd(), \"public\", \"images\", \"gallery\");\r\n-    let images = [];\r\n-    try {\r\n-        images = fs\r\n-            .readdirSync(galleryDir)\r\n-            .filter((file) =>\r\n-                /\\.(jpe?g|png|webp|gif)$/i.test(file)\r\n-            )\r\n-            .map((file) => `/images/gallery/${file}`);\r\n-    } catch (e) {\r\n-        // Directory may not exist yet\r\n-    }\r\n-    return { props: { galleryImages: images } };\r\n-}\r\n-\r\n-export default function GalleryPage({ galleryImages }) {\r\n-    const [modalImg, setModalImg] = useState(null);\r\n-\r\n-    return (\r\n-        <>\r\n-            <Head>\r\n-                <title>Gallery | Wash Labs</title>\r\n-                <meta name=\"description\" content=\"Gallery of Wash Labs car detailing work in Halifax.\" />\r\n-            </Head>\r\n-            <section className=\"min-h-screen bg-blue-50 py-20\">\r\n-                <div className=\"max-w-7xl mx-auto px-4\">\r\n-                    <h1 className=\"text-4xl font-extrabold text-[#0076ff] mb-10 text-center\">Gallery</h1>\r\n-                    <div\r\n-                        className=\"grid gap-4 grid-cols-2 sm:grid-cols-4 md:grid-cols-6 auto-rows-[180px] md:auto-rows-[200px]\"\r\n-                        style={{ gridAutoFlow: \"dense\" }}\r\n-                    >\r\n-                        {galleryImages.map((img, idx) => {\r\n-                            const isLarge = idx % 7 === 0 || idx % 11 === 0;\r\n-                            return (\r\n-                                <div\r\n-                                    key={img}\r\n-                                    className={`relative overflow-hidden rounded-xl shadow-lg bg-white group transition-all duration-300\r\n-                                        ${isLarge ? \"col-span-2 row-span-2\" : \"\"}\r\n-                                        cursor-pointer\r\n-                                    `}\r\n-                                    style={{\r\n-                                        minHeight: isLarge ? 400 : 180,\r\n-                                        gridColumn: isLarge ? \"span 2\" : undefined,\r\n-                                        gridRow: isLarge ? \"span 2\" : undefined,\r\n-                                    }}\r\n-                                    onClick={() => setModalImg(img)}\r\n-                                >\r\n-                                    <Image\r\n-                                        src={img}\r\n-                                        alt={`Gallery image ${idx + 1}`}\r\n-                                        fill\r\n-                                        sizes={isLarge ? \"(min-width: 768px) 33vw, 100vw\" : \"(min-width: 768px) 16vw, 50vw\"}\r\n-                                        className=\"object-cover w-full h-full transition-transform duration-500 group-hover:scale-105\"\r\n-                                        style={{ objectPosition: \"center\" }}\r\n-                                        quality={90}\r\n-                                        priority={idx < 4}\r\n-                                    />\r\n-                                </div>\r\n-                            );\r\n-                        })}\r\n-                    </div>\r\n-                </div>\r\n-                {/* Modal for enlarged image */}\r\n-                {modalImg && (\r\n-                    <div\r\n-                        className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/70 backdrop-blur-sm transition-all duration-300\"\r\n-                        onClick={() => setModalImg(null)}\r\n-                    >\r\n-                        <div\r\n-                            className=\"relative max-w-3xl w-[90vw] max-h-[90vh] flex items-center justify-center animate-fade-in\"\r\n-                            onClick={e => e.stopPropagation()}\r\n-                            style={{ aspectRatio: \"3/2\", transition: \"transform 0.3s cubic-bezier(.4,2,.6,1)\" }}\r\n-                        >\r\n-                            <div className=\"relative w-full h-[60vw] max-h-[80vh] max-w-3xl transition-all duration-300\">\r\n-                                <Image\r\n-                                    src={modalImg}\r\n-                                    alt=\"Enlarged gallery image\"\r\n-                                    fill\r\n-                                    sizes=\"90vw\"\r\n-                                    className=\"object-contain rounded-2xl shadow-2xl bg-white transition-all duration-300 scale-100\"\r\n-                                    style={{ background: \"white\" }}\r\n-                                    quality={95}\r\n-                                    priority\r\n-                                />\r\n-                            </div>\r\n-                        </div>\r\n-                    </div>\r\n-                )}\r\n-            </section>\r\n-            <style jsx global>{`\r\n-                @keyframes fade-in {\r\n-                    from { opacity: 0; transform: scale(0.96);}\r\n-                    to { opacity: 1; transform: scale(1);}\r\n-                }\r\n-                .animate-fade-in {\r\n-                    animation: fade-in 0.35s cubic-bezier(.4,2,.6,1);\r\n-                }\r\n-            `}</style>\r\n-        </>\r\n-    );\r\n-}\r\n"
                },
                {
                    "date": 1760155282658,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import Image from \"next/image\";\r\n import fs from \"fs\";\r\n import path from \"path\";\r\n import { useState } from \"react\";\r\n+import { useRouter } from \"next/router\";\r\n \r\n // Get all image files from /public/images/gallery at build time\r\n export async function getStaticProps() {\r\n     const galleryDir = path.join(process.cwd(), \"public\", \"images\", \"gallery\");\r\n@@ -22,18 +23,38 @@\n }\r\n \r\n export default function GalleryPage({ galleryImages }) {\r\n     const [modalImg, setModalImg] = useState(null);\r\n+    const router = useRouter();\r\n \r\n     return (\r\n         <>\r\n             <Head>\r\n                 <title>Gallery | Wash Labs</title>\r\n                 <meta name=\"description\" content=\"Gallery of Wash Labs car detailing work in Halifax.\" />\r\n             </Head>\r\n+\r\n             <section className=\"min-h-screen bg-blue-50 py-14 sm:py-20\">\r\n                 <div className=\"max-w-7xl mx-auto px-2 sm:px-4\">\r\n-                    <h1 className=\"text-3xl sm:text-4xl font-extrabold text-[#0076ff] mb-6 sm:mb-10 text-center\">Gallery</h1>\r\n+                    {/* Back button below the site navbar */}\r\n+                    <div className=\"mb-4 sm:mb-6\">\r\n+                        <button\r\n+                            type=\"button\"\r\n+                            onClick={() => router.back()}\r\n+                            className=\"inline-flex items-center gap-2 px-3 py-2 rounded-lg border border-blue-200 text-blue-700 hover:bg-blue-50\"\r\n+                            aria-label=\"Go back\"\r\n+                        >\r\n+                            <span aria-hidden=\"true\">←</span>\r\n+                            Back\r\n+                        </button>\r\n+                    </div>\r\n+\r\n+                    <h1\r\n+\tclassName=\"text-3xl sm:text-4xl font-extrabold text-neutral-950 mb-6 sm:mb-10 text-center\"\r\n+\tstyle={{ color: \"#000\" }}\r\n+>\r\n+\tGallery\r\n+</h1>\r\n                     <div\r\n                         className=\"grid gap-2 sm:gap-4 grid-cols-2 sm:grid-cols-4 md:grid-cols-6 auto-rows-[120px] sm:auto-rows-[180px] md:auto-rows-[200px]\"\r\n                         style={{ gridAutoFlow: \"dense\" }}\r\n                     >\r\n"
                },
                {
                    "date": 1760158423653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n import fs from \"fs\";\r\n import path from \"path\";\r\n import { useState } from \"react\";\r\n import { useRouter } from \"next/router\";\r\n+import Navigation from \"@/components/Navigation\";\r\n \r\n // Get all image files from /public/images/gallery at build time\r\n export async function getStaticProps() {\r\n     const galleryDir = path.join(process.cwd(), \"public\", \"images\", \"gallery\");\r\n@@ -32,23 +33,12 @@\n                 <title>Gallery | Wash Labs</title>\r\n                 <meta name=\"description\" content=\"Gallery of Wash Labs car detailing work in Halifax.\" />\r\n             </Head>\r\n \r\n+            <Navigation />\r\n+\r\n             <section className=\"min-h-screen bg-blue-50 py-14 sm:py-20\">\r\n                 <div className=\"max-w-7xl mx-auto px-2 sm:px-4\">\r\n-                    {/* Back button below the site navbar */}\r\n-                    <div className=\"mb-4 sm:mb-6\">\r\n-                        <button\r\n-                            type=\"button\"\r\n-                            onClick={() => router.back()}\r\n-                            className=\"inline-flex items-center gap-2 px-3 py-2 rounded-lg border border-blue-200 text-blue-700 hover:bg-blue-50\"\r\n-                            aria-label=\"Go back\"\r\n-                        >\r\n-                            <span aria-hidden=\"true\">←</span>\r\n-                            Back\r\n-                        </button>\r\n-                    </div>\r\n-\r\n                     <h1\r\n \tclassName=\"text-3xl sm:text-4xl font-extrabold text-neutral-950 mb-6 sm:mb-10 text-center\"\r\n \tstyle={{ color: \"#000\" }}\r\n >\r\n"
                },
                {
                    "date": 1761437399402,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,127 @@\n+import Head from \"next/head\";\r\n+import Image from \"next/image\";\r\n+import { useState } from \"react\";\r\n+import { useRouter } from \"next/router\";\r\n+import Navigation from \"@/components/Navigation\";\r\n+import { createClient } from \"@supabase/supabase-js\";\r\n+\r\n+// Load gallery images from Supabase Storage bucket \"Gallery\" at request time\r\n+export async function getServerSideProps() {\r\n+    const supabaseUrl = \"https://uqqunhpfgnqrkalycrbr.supabase.co\";\r\n+    const supabaseKey = process.env.SUPABASE_KEY;\r\n+    const supabase = createClient(supabaseUrl, supabaseKey);\r\n+\r\n+    let images = [];\r\n+    try {\r\n+        const { data, error } = await supabase\r\n+            .storage\r\n+            .from(\"Gallery\")\r\n+            .list('', { limit: 200, sortBy: { column: \"created_at\", order: \"desc\" } });\r\n+\r\n+        if (error) throw error;\r\n+\r\n+        images = (data || [])\r\n+            .filter((file) => /\\.(jpe?g|png|webp|gif|heic)$/i.test(file.name))\r\n+            .map((file) => `${supabaseUrl}/storage/v1/object/public/Gallery/${encodeURIComponent(file.name)}`);\r\n+    } catch (e) {\r\n+        images = [];\r\n+    }\r\n+\r\n+    return { props: { galleryImages: images } };\r\n+}\r\n+\r\n+export default function GalleryPage({ galleryImages }) {\r\n+    const [modalImg, setModalImg] = useState(null);\r\n+    const router = useRouter();\r\n+\r\n+    return (\r\n+        <>\r\n+            <Head>\r\n+                <title>Gallery | Wash Labs</title>\r\n+                <meta name=\"description\" content=\"Gallery of Wash Labs car detailing work in Halifax.\" />\r\n+            </Head>\r\n+\r\n+            <Navigation />\r\n+\r\n+            <section className=\"min-h-screen bg-blue-50 py-14 sm:py-20\">\r\n+                <div className=\"max-w-7xl mx-auto px-2 sm:px-4\">\r\n+                    <h1\r\n+\tclassName=\"text-3xl sm:text-4xl font-extrabold text-neutral-950 mb-6 sm:mb-10 text-center\"\r\n+\tstyle={{ color: \"#000\" }}\r\n+>\r\n+\tGallery\r\n+</h1>\r\n+                    <div\r\n+                        className=\"grid gap-2 sm:gap-4 grid-cols-2 sm:grid-cols-4 md:grid-cols-6 auto-rows-[120px] sm:auto-rows-[180px] md:auto-rows-[200px]\"\r\n+                        style={{ gridAutoFlow: \"dense\" }}\r\n+                    >\r\n+                        {galleryImages.map((img, idx) => {\r\n+                            const isLarge = idx % 7 === 0 || idx % 11 === 0;\r\n+                            return (\r\n+                                <div\r\n+                                    key={img}\r\n+                                    className={`relative overflow-hidden rounded-xl shadow-lg bg-white group transition-all duration-300\r\n+                                        ${isLarge ? \"col-span-2 row-span-2\" : \"\"}\r\n+                                        cursor-pointer\r\n+                                    `}\r\n+                                    style={{\r\n+                                        minHeight: isLarge ? 240 : 100,\r\n+                                        gridColumn: isLarge ? \"span 2\" : undefined,\r\n+                                        gridRow: isLarge ? \"span 2\" : undefined,\r\n+                                    }}\r\n+                                    onClick={() => setModalImg(img)}\r\n+                                >\r\n+                                    <Image\r\n+                                        src={img}\r\n+                                        alt={`Gallery image ${idx + 1}`}\r\n+                                        fill\r\n+                                        sizes={isLarge ? \"(min-width: 768px) 33vw, 100vw\" : \"(min-width: 768px) 16vw, 50vw\"}\r\n+                                        className=\"object-cover w-full h-full transition-transform duration-500 group-hover:scale-105\"\r\n+                                        style={{ objectPosition: \"center\" }}\r\n+                                        quality={90}\r\n+                                        priority={idx < 4}\r\n+                                    />\r\n+                                </div>\r\n+                            );\r\n+                        })}\r\n+                    </div>\r\n+                </div>\r\n+                {/* Modal for enlarged image */}\r\n+                {modalImg && (\r\n+                    <div\r\n+                        className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/70 backdrop-blur-sm transition-all duration-300\"\r\n+                        onClick={() => setModalImg(null)}\r\n+                    >\r\n+                        <div\r\n+                            className=\"relative max-w-3xl w-[96vw] sm:w-[90vw] max-h-[90vh] flex items-center justify-center animate-fade-in\"\r\n+                            onClick={e => e.stopPropagation()}\r\n+                            style={{ aspectRatio: \"3/2\", transition: \"transform 0.3s cubic-bezier(.4,2,.6,1)\" }}\r\n+                        >\r\n+                            <div className=\"relative w-full h-[60vw] sm:h-[50vw] max-h-[80vh] max-w-3xl transition-all duration-300\">\r\n+                                <Image\r\n+                                    src={modalImg}\r\n+                                    alt=\"Enlarged gallery image\"\r\n+                                    fill\r\n+                                    sizes=\"90vw\"\r\n+                                    className=\"object-contain rounded-2xl shadow-2xl bg-white transition-all duration-300 scale-100\"\r\n+                                    style={{ background: \"white\" }}\r\n+                                    quality={95}\r\n+                                    priority\r\n+                                />\r\n+                            </div>\r\n+                        </div>\r\n+                    </div>\r\n+                )}\r\n+            </section>\r\n+            <style jsx global>{`\r\n+                @keyframes fade-in {\r\n+                    from { opacity: 0; transform: scale(0.96);}\r\n+                    to { opacity: 1; transform: scale(1);}\r\n+                }\r\n+                .animate-fade-in {\r\n+                    animation: fade-in 0.35s cubic-bezier(.4,2,.6,1);\r\n+                }\r\n+            `}</style>\r\n+        </>\r\n+    );\r\n+}\r\n"
                },
                {
                    "date": 1761437930052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,143 @@\n+import Head from \"next/head\";\r\n+import Image from \"next/image\";\r\n+import { useState } from \"react\";\r\n+import { useRouter } from \"next/router\";\r\n+import Navigation from \"@/components/Navigation\";\r\n+import { createClient } from \"@supabase/supabase-js\";\r\n+\r\n+// Load gallery images from Supabase Storage bucket \"Gallery\" at request time\r\n+export async function getServerSideProps() {\r\n+    const supabaseUrl = \"https://uqqunhpfgnqrkalycrbr.supabase.co\";\r\n+    const supabaseKey = process.env.SUPABASE_KEY;\r\n+    const bucket = process.env.SUPABASE_GALLERY_BUCKET || \"Gallery\";\r\n+    const pathPrefix = (process.env.SUPABASE_GALLERY_PATH || \"\").replace(/^\\/+|\\/+$/g, \"\");\r\n+    const supabase = createClient(supabaseUrl, supabaseKey);\r\n+\r\n+    let images = [];\r\n+    let errorMsg = null;\r\n+    try {\r\n+        const listPath = pathPrefix || '';\r\n+        const { data, error } = await supabase.storage.from(bucket).list(listPath, {\r\n+            limit: 200,\r\n+            sortBy: { column: \"created_at\", order: \"desc\" },\r\n+        });\r\n+        if (error) throw error;\r\n+\r\n+        images = await Promise.all(\r\n+            (data || [])\r\n+                .filter((file) => file && file.name && /\\.(jpe?g|png|webp|gif|heic)$/i.test(file.name))\r\n+                .map(async (file) => {\r\n+                    const filePath = pathPrefix ? `${pathPrefix}/${file.name}` : file.name;\r\n+                    const { data: pub } = supabase.storage.from(bucket).getPublicUrl(filePath);\r\n+                    return pub?.publicUrl || null;\r\n+                })\r\n+        );\r\n+        images = images.filter(Boolean);\r\n+    } catch (e) {\r\n+        errorMsg = e?.message || String(e);\r\n+        images = [];\r\n+    }\r\n+\r\n+    return { props: { galleryImages: images, galleryError: errorMsg } };\r\n+}\r\n+\r\n+export default function GalleryPage({ galleryImages, galleryError }) {\r\n+    const [modalImg, setModalImg] = useState(null);\r\n+    const router = useRouter();\r\n+\r\n+    return (\r\n+        <>\r\n+            <Head>\r\n+                <title>Gallery | Wash Labs</title>\r\n+                <meta name=\"description\" content=\"Gallery of Wash Labs car detailing work in Halifax.\" />\r\n+            </Head>\r\n+\r\n+            <Navigation />\r\n+\r\n+            <section className=\"min-h-screen bg-blue-50 py-14 sm:py-20\">\r\n+                <div className=\"max-w-7xl mx-auto px-2 sm:px-4\">\r\n+                    <h1\r\n+\tclassName=\"text-3xl sm:text-4xl font-extrabold text-neutral-950 mb-6 sm:mb-10 text-center\"\r\n+\tstyle={{ color: \"#000\" }}\r\n+>\r\n+\tGallery\r\n+</h1>\r\n+                    {galleryError && (\r\n+                        <p className=\"mb-4 text-center text-sm\" style={{ color: '#B91C1C' }}>\r\n+                            {galleryError}\r\n+                        </p>\r\n+                    )}\r\n+                    <div\r\n+                        className=\"grid gap-2 sm:gap-4 grid-cols-2 sm:grid-cols-4 md:grid-cols-6 auto-rows-[120px] sm:auto-rows-[180px] md:auto-rows-[200px]\"\r\n+                        style={{ gridAutoFlow: \"dense\" }}\r\n+                    >\r\n+                        {galleryImages.map((img, idx) => {\r\n+                            const isLarge = idx % 7 === 0 || idx % 11 === 0;\r\n+                            return (\r\n+                                <div\r\n+                                    key={img}\r\n+                                    className={`relative overflow-hidden rounded-xl shadow-lg bg-white group transition-all duration-300\r\n+                                        ${isLarge ? \"col-span-2 row-span-2\" : \"\"}\r\n+                                        cursor-pointer\r\n+                                    `}\r\n+                                    style={{\r\n+                                        minHeight: isLarge ? 240 : 100,\r\n+                                        gridColumn: isLarge ? \"span 2\" : undefined,\r\n+                                        gridRow: isLarge ? \"span 2\" : undefined,\r\n+                                    }}\r\n+                                    onClick={() => setModalImg(img)}\r\n+                                >\r\n+                                    <Image\r\n+                                        src={img}\r\n+                                        alt={`Gallery image ${idx + 1}`}\r\n+                                        fill\r\n+                                        sizes={isLarge ? \"(min-width: 768px) 33vw, 100vw\" : \"(min-width: 768px) 16vw, 50vw\"}\r\n+                                        className=\"object-cover w-full h-full transition-transform duration-500 group-hover:scale-105\"\r\n+                                        style={{ objectPosition: \"center\" }}\r\n+                                        quality={90}\r\n+                                        priority={idx < 4}\r\n+                                    />\r\n+                                </div>\r\n+                            );\r\n+                        })}\r\n+                    </div>\r\n+                </div>\r\n+                {/* Modal for enlarged image */}\r\n+                {modalImg && (\r\n+                    <div\r\n+                        className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/70 backdrop-blur-sm transition-all duration-300\"\r\n+                        onClick={() => setModalImg(null)}\r\n+                    >\r\n+                        <div\r\n+                            className=\"relative max-w-3xl w-[96vw] sm:w-[90vw] max-h-[90vh] flex items-center justify-center animate-fade-in\"\r\n+                            onClick={e => e.stopPropagation()}\r\n+                            style={{ aspectRatio: \"3/2\", transition: \"transform 0.3s cubic-bezier(.4,2,.6,1)\" }}\r\n+                        >\r\n+                            <div className=\"relative w-full h-[60vw] sm:h-[50vw] max-h-[80vh] max-w-3xl transition-all duration-300\">\r\n+                                <Image\r\n+                                    src={modalImg}\r\n+                                    alt=\"Enlarged gallery image\"\r\n+                                    fill\r\n+                                    sizes=\"90vw\"\r\n+                                    className=\"object-contain rounded-2xl shadow-2xl bg-white transition-all duration-300 scale-100\"\r\n+                                    style={{ background: \"white\" }}\r\n+                                    quality={95}\r\n+                                    priority\r\n+                                />\r\n+                            </div>\r\n+                        </div>\r\n+                    </div>\r\n+                )}\r\n+            </section>\r\n+            <style jsx global>{`\r\n+                @keyframes fade-in {\r\n+                    from { opacity: 0; transform: scale(0.96);}\r\n+                    to { opacity: 1; transform: scale(1);}\r\n+                }\r\n+                .animate-fade-in {\r\n+                    animation: fade-in 0.35s cubic-bezier(.4,2,.6,1);\r\n+                }\r\n+            `}</style>\r\n+        </>\r\n+    );\r\n+}\r\n"
                },
                {
                    "date": 1761438570092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,27 +9,41 @@\n export async function getServerSideProps() {\r\n     const supabaseUrl = \"https://uqqunhpfgnqrkalycrbr.supabase.co\";\r\n     const supabaseKey = process.env.SUPABASE_KEY;\r\n     const bucket = process.env.SUPABASE_GALLERY_BUCKET || \"Gallery\";\r\n-    const pathPrefix = (process.env.SUPABASE_GALLERY_PATH || \"\").replace(/^\\/+|\\/+$/g, \"\");\r\n+    const pathPrefix = (process.env.SUPABASE_GALLERY_PATH || \"\").replace(\r\n+        /^\\/+|\\/+$/g,\r\n+        \"\"\r\n+    );\r\n     const supabase = createClient(supabaseUrl, supabaseKey);\r\n \r\n     let images = [];\r\n     let errorMsg = null;\r\n     try {\r\n-        const listPath = pathPrefix || '';\r\n-        const { data, error } = await supabase.storage.from(bucket).list(listPath, {\r\n-            limit: 200,\r\n-            sortBy: { column: \"created_at\", order: \"desc\" },\r\n-        });\r\n+        const listPath = pathPrefix || \"\";\r\n+        const { data, error } = await supabase.storage\r\n+            .from(bucket)\r\n+            .list(listPath, {\r\n+                limit: 200,\r\n+                sortBy: { column: \"created_at\", order: \"desc\" },\r\n+            });\r\n         if (error) throw error;\r\n \r\n         images = await Promise.all(\r\n             (data || [])\r\n-                .filter((file) => file && file.name && /\\.(jpe?g|png|webp|gif|heic)$/i.test(file.name))\r\n+                .filter(\r\n+                    (file) =>\r\n+                        file &&\r\n+                        file.name &&\r\n+                        /\\.(jpe?g|png|webp|gif|heic)$/i.test(file.name)\r\n+                )\r\n                 .map(async (file) => {\r\n-                    const filePath = pathPrefix ? `${pathPrefix}/${file.name}` : file.name;\r\n-                    const { data: pub } = supabase.storage.from(bucket).getPublicUrl(filePath);\r\n+                    const filePath = pathPrefix\r\n+                        ? `${pathPrefix}/${file.name}`\r\n+                        : file.name;\r\n+                    const { data: pub } = supabase.storage\r\n+                        .from(bucket)\r\n+                        .getPublicUrl(filePath);\r\n                     return pub?.publicUrl || null;\r\n                 })\r\n         );\r\n         images = images.filter(Boolean);\r\n@@ -48,23 +62,29 @@\n     return (\r\n         <>\r\n             <Head>\r\n                 <title>Gallery | Wash Labs</title>\r\n-                <meta name=\"description\" content=\"Gallery of Wash Labs car detailing work in Halifax.\" />\r\n+                <meta\r\n+                    name=\"description\"\r\n+                    content=\"Gallery of Wash Labs car detailing work in Halifax.\"\r\n+                />\r\n             </Head>\r\n \r\n             <Navigation />\r\n \r\n             <section className=\"min-h-screen bg-blue-50 py-14 sm:py-20\">\r\n                 <div className=\"max-w-7xl mx-auto px-2 sm:px-4\">\r\n                     <h1\r\n-\tclassName=\"text-3xl sm:text-4xl font-extrabold text-neutral-950 mb-6 sm:mb-10 text-center\"\r\n-\tstyle={{ color: \"#000\" }}\r\n->\r\n-\tGallery\r\n-</h1>\r\n+                        className=\"text-3xl sm:text-4xl font-extrabold text-neutral-950 mb-6 sm:mb-10 text-center\"\r\n+                        style={{ color: \"#000\" }}\r\n+                    >\r\n+                        Gallery\r\n+                    </h1>\r\n                     {galleryError && (\r\n-                        <p className=\"mb-4 text-center text-sm\" style={{ color: '#B91C1C' }}>\r\n+                        <p\r\n+                            className=\"mb-4 text-center text-sm\"\r\n+                            style={{ color: \"#B91C1C\" }}\r\n+                        >\r\n                             {galleryError}\r\n                         </p>\r\n                     )}\r\n                     <div\r\n@@ -76,23 +96,33 @@\n                             return (\r\n                                 <div\r\n                                     key={img}\r\n                                     className={`relative overflow-hidden rounded-xl shadow-lg bg-white group transition-all duration-300\r\n-                                        ${isLarge ? \"col-span-2 row-span-2\" : \"\"}\r\n+                                        ${\r\n+                                            isLarge\r\n+                                                ? \"col-span-2 row-span-2\"\r\n+                                                : \"\"\r\n+                                        }\r\n                                         cursor-pointer\r\n                                     `}\r\n                                     style={{\r\n                                         minHeight: isLarge ? 240 : 100,\r\n-                                        gridColumn: isLarge ? \"span 2\" : undefined,\r\n+                                        gridColumn: isLarge\r\n+                                            ? \"span 2\"\r\n+                                            : undefined,\r\n                                         gridRow: isLarge ? \"span 2\" : undefined,\r\n                                     }}\r\n                                     onClick={() => setModalImg(img)}\r\n                                 >\r\n                                     <Image\r\n                                         src={img}\r\n                                         alt={`Gallery image ${idx + 1}`}\r\n                                         fill\r\n-                                        sizes={isLarge ? \"(min-width: 768px) 33vw, 100vw\" : \"(min-width: 768px) 16vw, 50vw\"}\r\n+                                        sizes={\r\n+                                            isLarge\r\n+                                                ? \"(min-width: 768px) 33vw, 100vw\"\r\n+                                                : \"(min-width: 768px) 16vw, 50vw\"\r\n+                                        }\r\n                                         className=\"object-cover w-full h-full transition-transform duration-500 group-hover:scale-105\"\r\n                                         style={{ objectPosition: \"center\" }}\r\n                                         quality={90}\r\n                                         priority={idx < 4}\r\n@@ -109,10 +139,14 @@\n                         onClick={() => setModalImg(null)}\r\n                     >\r\n                         <div\r\n                             className=\"relative max-w-3xl w-[96vw] sm:w-[90vw] max-h-[90vh] flex items-center justify-center animate-fade-in\"\r\n-                            onClick={e => e.stopPropagation()}\r\n-                            style={{ aspectRatio: \"3/2\", transition: \"transform 0.3s cubic-bezier(.4,2,.6,1)\" }}\r\n+                            onClick={(e) => e.stopPropagation()}\r\n+                            style={{\r\n+                                aspectRatio: \"3/2\",\r\n+                                transition:\r\n+                                    \"transform 0.3s cubic-bezier(.4,2,.6,1)\",\r\n+                            }}\r\n                         >\r\n                             <div className=\"relative w-full h-[60vw] sm:h-[50vw] max-h-[80vh] max-w-3xl transition-all duration-300\">\r\n                                 <Image\r\n                                     src={modalImg}\r\n@@ -130,261 +164,20 @@\n                 )}\r\n             </section>\r\n             <style jsx global>{`\r\n                 @keyframes fade-in {\r\n-                    from { opacity: 0; transform: scale(0.96);}\r\n-                    to { opacity: 1; transform: scale(1);}\r\n+                    from {\r\n+                        opacity: 0;\r\n+                        transform: scale(0.96);\r\n+                    }\r\n+                    to {\r\n+                        opacity: 1;\r\n+                        transform: scale(1);\r\n+                    }\r\n                 }\r\n                 .animate-fade-in {\r\n-                    animation: fade-in 0.35s cubic-bezier(.4,2,.6,1);\r\n+                    animation: fade-in 0.35s cubic-bezier(0.4, 2, 0.6, 1);\r\n                 }\r\n             `}</style>\r\n         </>\r\n     );\r\n }\r\n-import Head from \"next/head\";\r\n-import Image from \"next/image\";\r\n-import { useState } from \"react\";\r\n-import { useRouter } from \"next/router\";\r\n-import Navigation from \"@/components/Navigation\";\r\n-import { createClient } from \"@supabase/supabase-js\";\r\n-\r\n-// Load gallery images from Supabase Storage bucket \"Gallery\" at request time\r\n-export async function getServerSideProps() {\r\n-    const supabaseUrl = \"https://uqqunhpfgnqrkalycrbr.supabase.co\";\r\n-    const supabaseKey = process.env.SUPABASE_KEY;\r\n-    const supabase = createClient(supabaseUrl, supabaseKey);\r\n-\r\n-    let images = [];\r\n-    try {\r\n-        const { data, error } = await supabase\r\n-            .storage\r\n-            .from(\"Gallery\")\r\n-            .list('', { limit: 200, sortBy: { column: \"created_at\", order: \"desc\" } });\r\n-\r\n-        if (error) throw error;\r\n-\r\n-        images = (data || [])\r\n-            .filter((file) => /\\.(jpe?g|png|webp|gif|heic)$/i.test(file.name))\r\n-            .map((file) => `${supabaseUrl}/storage/v1/object/public/Gallery/${encodeURIComponent(file.name)}`);\r\n-    } catch (e) {\r\n-        images = [];\r\n-    }\r\n-\r\n-    return { props: { galleryImages: images } };\r\n-}\r\n-\r\n-export default function GalleryPage({ galleryImages }) {\r\n-    const [modalImg, setModalImg] = useState(null);\r\n-    const router = useRouter();\r\n-\r\n-    return (\r\n-        <>\r\n-            <Head>\r\n-                <title>Gallery | Wash Labs</title>\r\n-                <meta name=\"description\" content=\"Gallery of Wash Labs car detailing work in Halifax.\" />\r\n-            </Head>\r\n-\r\n-            <Navigation />\r\n-\r\n-            <section className=\"min-h-screen bg-blue-50 py-14 sm:py-20\">\r\n-                <div className=\"max-w-7xl mx-auto px-2 sm:px-4\">\r\n-                    <h1\r\n-\tclassName=\"text-3xl sm:text-4xl font-extrabold text-neutral-950 mb-6 sm:mb-10 text-center\"\r\n-\tstyle={{ color: \"#000\" }}\r\n->\r\n-\tGallery\r\n-</h1>\r\n-                    <div\r\n-                        className=\"grid gap-2 sm:gap-4 grid-cols-2 sm:grid-cols-4 md:grid-cols-6 auto-rows-[120px] sm:auto-rows-[180px] md:auto-rows-[200px]\"\r\n-                        style={{ gridAutoFlow: \"dense\" }}\r\n-                    >\r\n-                        {galleryImages.map((img, idx) => {\r\n-                            const isLarge = idx % 7 === 0 || idx % 11 === 0;\r\n-                            return (\r\n-                                <div\r\n-                                    key={img}\r\n-                                    className={`relative overflow-hidden rounded-xl shadow-lg bg-white group transition-all duration-300\r\n-                                        ${isLarge ? \"col-span-2 row-span-2\" : \"\"}\r\n-                                        cursor-pointer\r\n-                                    `}\r\n-                                    style={{\r\n-                                        minHeight: isLarge ? 240 : 100,\r\n-                                        gridColumn: isLarge ? \"span 2\" : undefined,\r\n-                                        gridRow: isLarge ? \"span 2\" : undefined,\r\n-                                    }}\r\n-                                    onClick={() => setModalImg(img)}\r\n-                                >\r\n-                                    <Image\r\n-                                        src={img}\r\n-                                        alt={`Gallery image ${idx + 1}`}\r\n-                                        fill\r\n-                                        sizes={isLarge ? \"(min-width: 768px) 33vw, 100vw\" : \"(min-width: 768px) 16vw, 50vw\"}\r\n-                                        className=\"object-cover w-full h-full transition-transform duration-500 group-hover:scale-105\"\r\n-                                        style={{ objectPosition: \"center\" }}\r\n-                                        quality={90}\r\n-                                        priority={idx < 4}\r\n-                                    />\r\n-                                </div>\r\n-                            );\r\n-                        })}\r\n-                    </div>\r\n-                </div>\r\n-                {/* Modal for enlarged image */}\r\n-                {modalImg && (\r\n-                    <div\r\n-                        className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/70 backdrop-blur-sm transition-all duration-300\"\r\n-                        onClick={() => setModalImg(null)}\r\n-                    >\r\n-                        <div\r\n-                            className=\"relative max-w-3xl w-[96vw] sm:w-[90vw] max-h-[90vh] flex items-center justify-center animate-fade-in\"\r\n-                            onClick={e => e.stopPropagation()}\r\n-                            style={{ aspectRatio: \"3/2\", transition: \"transform 0.3s cubic-bezier(.4,2,.6,1)\" }}\r\n-                        >\r\n-                            <div className=\"relative w-full h-[60vw] sm:h-[50vw] max-h-[80vh] max-w-3xl transition-all duration-300\">\r\n-                                <Image\r\n-                                    src={modalImg}\r\n-                                    alt=\"Enlarged gallery image\"\r\n-                                    fill\r\n-                                    sizes=\"90vw\"\r\n-                                    className=\"object-contain rounded-2xl shadow-2xl bg-white transition-all duration-300 scale-100\"\r\n-                                    style={{ background: \"white\" }}\r\n-                                    quality={95}\r\n-                                    priority\r\n-                                />\r\n-                            </div>\r\n-                        </div>\r\n-                    </div>\r\n-                )}\r\n-            </section>\r\n-            <style jsx global>{`\r\n-                @keyframes fade-in {\r\n-                    from { opacity: 0; transform: scale(0.96);}\r\n-                    to { opacity: 1; transform: scale(1);}\r\n-                }\r\n-                .animate-fade-in {\r\n-                    animation: fade-in 0.35s cubic-bezier(.4,2,.6,1);\r\n-                }\r\n-            `}</style>\r\n-        </>\r\n-    );\r\n-}\r\n-import Head from \"next/head\";\r\n-import Image from \"next/image\";\r\n-import fs from \"fs\";\r\n-import path from \"path\";\r\n-import { useState } from \"react\";\r\n-import { useRouter } from \"next/router\";\r\n-import Navigation from \"@/components/Navigation\";\r\n-\r\n-// Get all image files from /public/images/gallery at build time\r\n-export async function getStaticProps() {\r\n-    const galleryDir = path.join(process.cwd(), \"public\", \"images\", \"gallery\");\r\n-    let images = [];\r\n-    try {\r\n-        images = fs\r\n-            .readdirSync(galleryDir)\r\n-            .filter((file) =>\r\n-                /\\.(jpe?g|png|webp|gif|heic)$/i.test(file)\r\n-            )\r\n-            .map((file) => `/images/gallery/${file}`);\r\n-    } catch (e) {\r\n-        // Directory may not exist yet\r\n-    }\r\n-    return { props: { galleryImages: images } };\r\n-}\r\n-\r\n-export default function GalleryPage({ galleryImages }) {\r\n-    const [modalImg, setModalImg] = useState(null);\r\n-    const router = useRouter();\r\n-\r\n-    return (\r\n-        <>\r\n-            <Head>\r\n-                <title>Gallery | Wash Labs</title>\r\n-                <meta name=\"description\" content=\"Gallery of Wash Labs car detailing work in Halifax.\" />\r\n-            </Head>\r\n-\r\n-            <Navigation />\r\n-\r\n-            <section className=\"min-h-screen bg-blue-50 py-14 sm:py-20\">\r\n-                <div className=\"max-w-7xl mx-auto px-2 sm:px-4\">\r\n-                    <h1\r\n-\tclassName=\"text-3xl sm:text-4xl font-extrabold text-neutral-950 mb-6 sm:mb-10 text-center\"\r\n-\tstyle={{ color: \"#000\" }}\r\n->\r\n-\tGallery\r\n-</h1>\r\n-                    <div\r\n-                        className=\"grid gap-2 sm:gap-4 grid-cols-2 sm:grid-cols-4 md:grid-cols-6 auto-rows-[120px] sm:auto-rows-[180px] md:auto-rows-[200px]\"\r\n-                        style={{ gridAutoFlow: \"dense\" }}\r\n-                    >\r\n-                        {galleryImages.map((img, idx) => {\r\n-                            const isLarge = idx % 7 === 0 || idx % 11 === 0;\r\n-                            return (\r\n-                                <div\r\n-                                    key={img}\r\n-                                    className={`relative overflow-hidden rounded-xl shadow-lg bg-white group transition-all duration-300\r\n-                                        ${isLarge ? \"col-span-2 row-span-2\" : \"\"}\r\n-                                        cursor-pointer\r\n-                                    `}\r\n-                                    style={{\r\n-                                        minHeight: isLarge ? 240 : 100,\r\n-                                        gridColumn: isLarge ? \"span 2\" : undefined,\r\n-                                        gridRow: isLarge ? \"span 2\" : undefined,\r\n-                                    }}\r\n-                                    onClick={() => setModalImg(img)}\r\n-                                >\r\n-                                    <Image\r\n-                                        src={img}\r\n-                                        alt={`Gallery image ${idx + 1}`}\r\n-                                        fill\r\n-                                        sizes={isLarge ? \"(min-width: 768px) 33vw, 100vw\" : \"(min-width: 768px) 16vw, 50vw\"}\r\n-                                        className=\"object-cover w-full h-full transition-transform duration-500 group-hover:scale-105\"\r\n-                                        style={{ objectPosition: \"center\" }}\r\n-                                        quality={90}\r\n-                                        priority={idx < 4}\r\n-                                    />\r\n-                                </div>\r\n-                            );\r\n-                        })}\r\n-                    </div>\r\n-                </div>\r\n-                {/* Modal for enlarged image */}\r\n-                {modalImg && (\r\n-                    <div\r\n-                        className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/70 backdrop-blur-sm transition-all duration-300\"\r\n-                        onClick={() => setModalImg(null)}\r\n-                    >\r\n-                        <div\r\n-                            className=\"relative max-w-3xl w-[96vw] sm:w-[90vw] max-h-[90vh] flex items-center justify-center animate-fade-in\"\r\n-                            onClick={e => e.stopPropagation()}\r\n-                            style={{ aspectRatio: \"3/2\", transition: \"transform 0.3s cubic-bezier(.4,2,.6,1)\" }}\r\n-                        >\r\n-                            <div className=\"relative w-full h-[60vw] sm:h-[50vw] max-h-[80vh] max-w-3xl transition-all duration-300\">\r\n-                                <Image\r\n-                                    src={modalImg}\r\n-                                    alt=\"Enlarged gallery image\"\r\n-                                    fill\r\n-                                    sizes=\"90vw\"\r\n-                                    className=\"object-contain rounded-2xl shadow-2xl bg-white transition-all duration-300 scale-100\"\r\n-                                    style={{ background: \"white\" }}\r\n-                                    quality={95}\r\n-                                    priority\r\n-                                />\r\n-                            </div>\r\n-                        </div>\r\n-                    </div>\r\n-                )}\r\n-            </section>\r\n-            <style jsx global>{`\r\n-                @keyframes fade-in {\r\n-                    from { opacity: 0; transform: scale(0.96);}\r\n-                    to { opacity: 1; transform: scale(1);}\r\n-                }\r\n-                .animate-fade-in {\r\n-                    animation: fade-in 0.35s cubic-bezier(.4,2,.6,1);\r\n-                }\r\n-            `}</style>\r\n-        </>\r\n-    );\r\n-}\r\n"
                },
                {
                    "date": 1761443053391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,48 +6,30 @@\n import { createClient } from \"@supabase/supabase-js\";\r\n \r\n // Load gallery images from Supabase Storage bucket \"Gallery\" at request time\r\n export async function getServerSideProps() {\r\n-    const supabaseUrl = \"https://uqqunhpfgnqrkalycrbr.supabase.co\";\r\n+    const supabaseUrl = process.env.SUPABASE_URL || \"https://uqqunhpfgnqrkalycrbr.supabase.co\";\r\n     const supabaseKey = process.env.SUPABASE_KEY;\r\n     const bucket = process.env.SUPABASE_GALLERY_BUCKET || \"Gallery\";\r\n-    const pathPrefix = (process.env.SUPABASE_GALLERY_PATH || \"\").replace(\r\n-        /^\\/+|\\/+$/g,\r\n-        \"\"\r\n-    );\r\n     const supabase = createClient(supabaseUrl, supabaseKey);\r\n \r\n+    // Hardcoded list of image filenames in the Gallery bucket\r\n+    // TODO: Replace with a dynamic list from your database or admin panel\r\n+    const imageFilenames = [\r\n+        '5035f2cf008c38e4eeb86d0b9802d10c.jpg',\r\n+        // Add more filenames here as you upload more images\r\n+    ];\r\n+\r\n     let images = [];\r\n     let errorMsg = null;\r\n+    \r\n     try {\r\n-        const listPath = pathPrefix || \"\";\r\n-        const { data, error } = await supabase.storage\r\n-            .from(bucket)\r\n-            .list(listPath, {\r\n-                limit: 200,\r\n-                sortBy: { column: \"created_at\", order: \"desc\" },\r\n-            });\r\n-        if (error) throw error;\r\n-\r\n-        images = await Promise.all(\r\n-            (data || [])\r\n-                .filter(\r\n-                    (file) =>\r\n-                        file &&\r\n-                        file.name &&\r\n-                        /\\.(jpe?g|png|webp|gif|heic)$/i.test(file.name)\r\n-                )\r\n-                .map(async (file) => {\r\n-                    const filePath = pathPrefix\r\n-                        ? `${pathPrefix}/${file.name}`\r\n-                        : file.name;\r\n-                    const { data: pub } = supabase.storage\r\n-                        .from(bucket)\r\n-                        .getPublicUrl(filePath);\r\n-                    return pub?.publicUrl || null;\r\n-                })\r\n-        );\r\n-        images = images.filter(Boolean);\r\n+        images = imageFilenames.map((filename) => {\r\n+            const { data: pub } = supabase.storage\r\n+                .from(bucket)\r\n+                .getPublicUrl(filename);\r\n+            return pub?.publicUrl || null;\r\n+        }).filter(Boolean);\r\n     } catch (e) {\r\n         errorMsg = e?.message || String(e);\r\n         images = [];\r\n     }\r\n"
                },
                {
                    "date": 1761443692738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,30 +6,47 @@\n import { createClient } from \"@supabase/supabase-js\";\r\n \r\n // Load gallery images from Supabase Storage bucket \"Gallery\" at request time\r\n export async function getServerSideProps() {\r\n-    const supabaseUrl = process.env.SUPABASE_URL || \"https://uqqunhpfgnqrkalycrbr.supabase.co\";\r\n-    const supabaseKey = process.env.SUPABASE_KEY;\r\n+    const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\r\n+    // Use service role key for server-side operations (bypasses RLS)\r\n+    const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY || process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\r\n     const bucket = process.env.SUPABASE_GALLERY_BUCKET || \"Gallery\";\r\n+    const pathPrefix = (process.env.SUPABASE_GALLERY_PATH || \"\").replace(\r\n+        /^\\/+|\\/+$/g,\r\n+        \"\"\r\n+    );\r\n     const supabase = createClient(supabaseUrl, supabaseKey);\r\n \r\n-    // Hardcoded list of image filenames in the Gallery bucket\r\n-    // TODO: Replace with a dynamic list from your database or admin panel\r\n-    const imageFilenames = [\r\n-        '5035f2cf008c38e4eeb86d0b9802d10c.jpg',\r\n-        // Add more filenames here as you upload more images\r\n-    ];\r\n-\r\n     let images = [];\r\n     let errorMsg = null;\r\n-    \r\n     try {\r\n-        images = imageFilenames.map((filename) => {\r\n-            const { data: pub } = supabase.storage\r\n-                .from(bucket)\r\n-                .getPublicUrl(filename);\r\n-            return pub?.publicUrl || null;\r\n-        }).filter(Boolean);\r\n+        const listPath = pathPrefix || \"\";\r\n+        const { data, error } = await supabase.storage\r\n+            .from(bucket)\r\n+            .list(listPath, {\r\n+                limit: 200,\r\n+                sortBy: { column: \"created_at\", order: \"desc\" },\r\n+            });\r\n+        if (error) throw error;\r\n+\r\n+        images = (data || [])\r\n+            .filter(\r\n+                (file) =>\r\n+                    file &&\r\n+                    file.name &&\r\n+                    /\\.(jpe?g|png|webp|gif|heic)$/i.test(file.name)\r\n+            )\r\n+            .map((file) => {\r\n+                const filePath = pathPrefix\r\n+                    ? `${pathPrefix}/${file.name}`\r\n+                    : file.name;\r\n+                const { data: pub } = supabase.storage\r\n+                    .from(bucket)\r\n+                    .getPublicUrl(filePath);\r\n+                return pub?.publicUrl || null;\r\n+            })\r\n+            .filter(Boolean);\r\n     } catch (e) {\r\n         errorMsg = e?.message || String(e);\r\n         images = [];\r\n     }\r\n"
                }
            ],
            "date": 1760034059342,
            "name": "Commit-0",
            "content": "import Head from \"next/head\";\r\nimport Image from \"next/image\";\r\n\r\nconst galleryImages = [\r\n    \"/images/slides/slide1.jpg\",\r\n    \"/images/slides/slide2.jpg\",\r\n    \"/images/slides/slide3.jpg\",\r\n    \"/images/slides/slide4.jpg\",\r\n    // Add more images as needed\r\n];\r\n\r\nexport default function GalleryPage() {\r\n    return (\r\n        <>\r\n            <Head>\r\n                <title>Gallery | Wash Labs</title>\r\n                <meta name=\"description\" content=\"Gallery of Wash Labs car detailing work in Halifax.\" />\r\n            </Head>\r\n            <section className=\"min-h-screen bg-blue-50 py-20\">\r\n                <div className=\"max-w-7xl mx-auto px-4\">\r\n                    <h1 className=\"text-4xl font-extrabold text-[#0076ff] mb-10 text-center\">Gallery</h1>\r\n                    <div className=\"grid gap-8 grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4\">\r\n                        {galleryImages.map((img, idx) => (\r\n                            <div key={idx} className=\"rounded-2xl overflow-hidden shadow-lg bg-white\">\r\n                                <Image\r\n                                    src={img}\r\n                                    alt={`Gallery image ${idx + 1}`}\r\n                                    width={600}\r\n                                    height={400}\r\n                                    className=\"w-full h-64 object-cover transition-opacity duration-700 opacity-0\"\r\n                                    onLoadingComplete={imgEl => imgEl.classList.remove(\"opacity-0\")}\r\n                                    priority={idx < 4}\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n}\r\n"
        }
    ]
}