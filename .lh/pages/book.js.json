{
    "sourceFile": "pages/book.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 19,
            "patches": [
                {
                    "date": 1761325977460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1761327702644,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n import { useEffect, useMemo, useState } from \"react\";\r\n import dynamic from \"next/dynamic\";\r\n import { useRouter } from \"next/router\";\r\n import Navigation from \"@/components/Navigation\";\r\n-import FAQ from \"@/components/FAQ\";\r\n import Footer from \"@/components/Footer\";\r\n import { SERVICES, getServiceById } from \"@/data/services\";\r\n \r\n const Booking = dynamic(() => import(\"@/components/Booking\"), { ssr: false });\r\n@@ -16,16 +15,20 @@\n     return getServiceById(serviceId) || null;\r\n   }, [serviceId]);\r\n \r\n   const [showBooking, setShowBooking] = useState(false);\r\n+  const [plan, setPlan] = useState(\"base\");\r\n \r\n   useEffect(() => {\r\n-    if (selectedService && !selectedService.comingSoon) {\r\n-      setShowBooking(true);\r\n-    }\r\n-  }, [selectedService]);\r\n+    setPlan(\"base\");\r\n+  }, [selectedService?.id]);\r\n \r\n   useEffect(() => {\r\n+    if (!router.isReady) return;\r\n+    window.scrollTo({ top: 0, behavior: \"auto\" });\r\n+  }, [router.isReady]);\r\n+\r\n+  useEffect(() => {\r\n     document.body.style.overflow = showBooking ? \"hidden\" : \"auto\";\r\n     return () => {\r\n       document.body.style.overflow = \"auto\";\r\n     };\r\n@@ -55,11 +58,40 @@\n               </span>\r\n               <h1 className=\"text-3xl sm:text-4xl font-bold\" style={{ color: \"#000\" }}>\r\n                 {selectedService.title}\r\n               </h1>\r\n-              <p className=\"text-lg text-blue-700 leading-relaxed\">\r\n-                {selectedService.summary || \"Schedule your mobile detailing appointment in just a few steps.\"}\r\n-              </p>\r\n+              <div className=\"bg-blue-50 border border-blue-200 rounded-full p-1 flex items-center gap-1 w-full sm:w-auto\">\r\n+                <button\r\n+                  type=\"button\"\r\n+                  onClick={() => setPlan(\"base\")}\r\n+                  className={`flex-1 sm:flex-none px-5 py-2 rounded-full text-sm font-semibold transition ${\r\n+                    plan === \"base\"\r\n+                      ? \"bg-white text-blue-700 shadow\"\r\n+                      : \"text-blue-600 hover:text-blue-700\"\r\n+                  }`}\r\n+                >\r\n+                  Base\r\n+                </button>\r\n+                <button\r\n+                  type=\"button\"\r\n+                  onClick={() => setPlan(\"revive\")}\r\n+                  className={`flex-1 sm:flex-none px-5 py-2 rounded-full text-sm font-semibold transition ${\r\n+                    plan === \"revive\"\r\n+                      ? \"bg-white text-blue-700 shadow\"\r\n+                      : \"text-blue-600 hover:text-blue-700\"\r\n+                  }`}\r\n+                  disabled={selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"}\r\n+                >\r\n+                  Revive\r\n+                </button>\r\n+              </div>\r\n+              <div className=\"text-xl font-semibold text-blue-700\">\r\n+                {plan === \"revive\" && typeof selectedService.revivePrice === \"number\"\r\n+                  ? `$${selectedService.revivePrice}`\r\n+                  : typeof selectedService.basePrice === \"number\"\r\n+                  ? `$${selectedService.basePrice}`\r\n+                  : \"Contact us\"}\r\n+              </div>\r\n               {selectedService.features?.length ? (\r\n                 <ul className=\"grid sm:grid-cols-2 gap-3 text-blue-800 text-sm sm:text-base\">\r\n                   {selectedService.features.map((feature) => (\r\n                     <li key={feature} className=\"flex items-start gap-2\">\r\n@@ -68,13 +100,8 @@\n                     </li>\r\n                   ))}\r\n                 </ul>\r\n               ) : null}\r\n-              {typeof selectedService.basePrice === \"number\" && (\r\n-                <div className=\"text-xl font-semibold text-blue-700\">\r\n-                  Starting at ${selectedService.basePrice}\r\n-                </div>\r\n-              )}\r\n               {!selectedService.comingSoon && (\r\n                 <div className=\"flex flex-col sm:flex-row gap-3 pt-4\">\r\n                   <button\r\n                     type=\"button\"\r\n@@ -115,9 +142,8 @@\n             )}\r\n           </div>\r\n         )}\r\n       </section>\r\n-      <FAQ />\r\n       <Footer />\r\n       {showBooking && selectedService && !selectedService.comingSoon && (\r\n         <Booking service={selectedService} onClose={handleCloseBooking} />\r\n       )}\r\n"
                },
                {
                    "date": 1761328127193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,27 +58,35 @@\n               </span>\r\n               <h1 className=\"text-3xl sm:text-4xl font-bold\" style={{ color: \"#000\" }}>\r\n                 {selectedService.title}\r\n               </h1>\r\n-              <div className=\"bg-blue-50 border border-blue-200 rounded-full p-1 flex items-center gap-1 w-full sm:w-auto\">\r\n+              <div className=\"relative grid grid-cols-2 bg-blue-50 border border-blue-200 rounded-full overflow-hidden w-full sm:w-auto\">\r\n+                <div\r\n+                  className=\"absolute inset-y-0 w-1/2 rounded-full bg-white shadow transition-transform duration-300 ease-out\"\r\n+                  style={{ transform: plan === \"revive\" ? \"translateX(100%)\" : \"translateX(0%)\" }}\r\n+                  aria-hidden=\"true\"\r\n+                />\r\n                 <button\r\n                   type=\"button\"\r\n                   onClick={() => setPlan(\"base\")}\r\n-                  className={`flex-1 sm:flex-none px-5 py-2 rounded-full text-sm font-semibold transition ${\r\n-                    plan === \"base\"\r\n-                      ? \"bg-white text-blue-700 shadow\"\r\n-                      : \"text-blue-600 hover:text-blue-700\"\r\n+                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n+                    plan === \"base\" ? \"text-blue-700\" : \"text-blue-500 hover:text-blue-600\"\r\n                   }`}\r\n                 >\r\n                   Base\r\n                 </button>\r\n                 <button\r\n                   type=\"button\"\r\n-                  onClick={() => setPlan(\"revive\")}\r\n-                  className={`flex-1 sm:flex-none px-5 py-2 rounded-full text-sm font-semibold transition ${\r\n-                    plan === \"revive\"\r\n-                      ? \"bg-white text-blue-700 shadow\"\r\n-                      : \"text-blue-600 hover:text-blue-700\"\r\n+                  onClick={() => {\r\n+                    if (selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\") return;\r\n+                    setPlan(\"revive\");\r\n+                  }}\r\n+                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n+                    plan === \"revive\" ? \"text-blue-700\" : \"text-blue-500 hover:text-blue-600\"\r\n+                  } ${\r\n+                    selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"\r\n+                      ? \"opacity-50 cursor-not-allowed\"\r\n+                      : \"\"\r\n                   }`}\r\n                   disabled={selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"}\r\n                 >\r\n                   Revive\r\n"
                },
                {
                    "date": 1761328323338,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,11 +98,11 @@\n                   : typeof selectedService.basePrice === \"number\"\r\n                   ? `$${selectedService.basePrice}`\r\n                   : \"Contact us\"}\r\n               </div>\r\n-              {selectedService.features?.length ? (\r\n+              {(plan === \"revive\" ? selectedService.reviveFeatures : selectedService.baseFeatures)?.length ? (\r\n                 <ul className=\"grid sm:grid-cols-2 gap-3 text-blue-800 text-sm sm:text-base\">\r\n-                  {selectedService.features.map((feature) => (\r\n+                  {(plan === \"revive\" ? selectedService.reviveFeatures : selectedService.baseFeatures).map((feature) => (\r\n                     <li key={feature} className=\"flex items-start gap-2\">\r\n                       <span className=\"text-blue-500 mt-1\">•</span>\r\n                       <span>{feature}</span>\r\n                     </li>\r\n"
                },
                {
                    "date": 1761328695850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,16 @@\n \r\n   const [showBooking, setShowBooking] = useState(false);\r\n   const [plan, setPlan] = useState(\"base\");\r\n \r\n+  const planFeatures = useMemo(() => {\r\n+    if (!selectedService?.features) return [];\r\n+    const planKey = plan === \"revive\" ? \"revive\" : \"base\";\r\n+    return selectedService.features\r\n+      .filter((feature) => feature[planKey] === \"✅\")\r\n+      .map((feature) => ({ text: feature.text, status: feature[planKey] }));\r\n+  }, [selectedService, plan]);\r\n+\r\n   useEffect(() => {\r\n     setPlan(\"base\");\r\n   }, [selectedService?.id]);\r\n \r\n@@ -98,14 +106,14 @@\n                   : typeof selectedService.basePrice === \"number\"\r\n                   ? `$${selectedService.basePrice}`\r\n                   : \"Contact us\"}\r\n               </div>\r\n-              {(plan === \"revive\" ? selectedService.reviveFeatures : selectedService.baseFeatures)?.length ? (\r\n+              {planFeatures.length ? (\r\n                 <ul className=\"grid sm:grid-cols-2 gap-3 text-blue-800 text-sm sm:text-base\">\r\n-                  {(plan === \"revive\" ? selectedService.reviveFeatures : selectedService.baseFeatures).map((feature) => (\r\n-                    <li key={feature} className=\"flex items-start gap-2\">\r\n-                      <span className=\"text-blue-500 mt-1\">•</span>\r\n-                      <span>{feature}</span>\r\n+                  {planFeatures.map((feature) => (\r\n+                    <li key={feature.text} className=\"flex items-start gap-3\">\r\n+                      <span className=\"text-lg leading-none mt-[2px]\">{feature.status}</span>\r\n+                      <span>{feature.text}</span>\r\n                     </li>\r\n                   ))}\r\n                 </ul>\r\n               ) : null}\r\n"
                },
                {
                    "date": 1761332650526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,220 @@\n+import { useEffect, useMemo, useState } from \"react\";\r\n+import dynamic from \"next/dynamic\";\r\n+import { useRouter } from \"next/router\";\r\n+import Navigation from \"@/components/Navigation\";\r\n+import Footer from \"@/components/Footer\";\r\n+import { SERVICES, getServiceById } from \"@/data/services\";\r\n+\r\n+const Booking = dynamic(() => import(\"@/components/Booking\"), { ssr: false });\r\n+\r\n+const VEHICLE_OPTIONS = [\r\n+  { id: \"sedan\", label: \"Sedan\", adjustment: 0 },\r\n+  { id: \"suv\", label: \"SUV\", adjustment: 20 },\r\n+  { id: \"truck\", label: \"Truck\", adjustment: 40 },\r\n+];\r\n+\r\n+export default function BookPage() {\r\n+  const router = useRouter();\r\n+  const { service: serviceId } = router.query;\r\n+  const selectedService = useMemo(() => {\r\n+    if (typeof serviceId !== \"string\") return null;\r\n+    return getServiceById(serviceId) || null;\r\n+  }, [serviceId]);\r\n+\r\n+  const [showBooking, setShowBooking] = useState(false);\r\n+  const [plan, setPlan] = useState(\"base\");\r\n+\r\n+  const planFeatures = useMemo(() => {\r\n+    if (!selectedService?.features) return [];\r\n+    const planKey = plan === \"revive\" ? \"revive\" : \"base\";\r\n+    return selectedService.features\r\n+      .filter((feature) => feature[planKey] === \"✅\")\r\n+      .map((feature) => ({ text: feature.text, status: feature[planKey] }));\r\n+  }, [selectedService, plan]);\r\n+\r\n+  useEffect(() => {\r\n+    setPlan(\"base\");\r\n+  }, [selectedService?.id]);\r\n+\r\n+  useEffect(() => {\r\n+    if (!router.isReady) return;\r\n+    window.scrollTo({ top: 0, behavior: \"auto\" });\r\n+  }, [router.isReady]);\r\n+\r\n+  useEffect(() => {\r\n+    document.body.style.overflow = showBooking ? \"hidden\" : \"auto\";\r\n+    return () => {\r\n+      document.body.style.overflow = \"auto\";\r\n+    };\r\n+  }, [showBooking]);\r\n+\r\n+  const handleOpenBooking = () => {\r\n+    if (selectedService && !selectedService.comingSoon) {\r\n+      setShowBooking(true);\r\n+    }\r\n+  };\r\n+\r\n+  const handleCloseBooking = () => {\r\n+    setShowBooking(false);\r\n+  };\r\n+\r\n+  const fallbackService = SERVICES.find((svc) => !svc.comingSoon);\r\n+\r\n+  return (\r\n+    <main className=\"min-h-screen bg-blue-50 text-blue-900\">\r\n+      <Navigation />\r\n+      <section className=\"max-w-4xl mx-auto px-4 py-20\">\r\n+        {selectedService ? (\r\n+          <div className=\"bg-white border border-blue-100 rounded-3xl shadow-xl overflow-hidden\">\r\n+            <div className=\"px-6 sm:px-10 py-10 space-y-6\">\r\n+              <span className=\"inline-flex px-4 py-1 rounded-full bg-blue-100 text-blue-700 text-sm font-semibold uppercase tracking-widest\">\r\n+                {selectedService.comingSoon ? \"Coming Soon\" : \"Book Now\"}\r\n+              </span>\r\n+              <h1 className=\"text-3xl sm:text-4xl font-bold\" style={{ color: \"#000\" }}>\r\n+                {selectedService.title}\r\n+              </h1>\r\n+              <div className=\"relative grid grid-cols-2 bg-blue-50 border border-blue-200 rounded-full overflow-hidden w-full sm:w-auto\">\r\n+                <div\r\n+                  className=\"absolute inset-y-0 w-1/2 rounded-full bg-white shadow transition-transform duration-300 ease-out\"\r\n+                  style={{ transform: plan === \"revive\" ? \"translateX(100%)\" : \"translateX(0%)\" }}\r\n+                  aria-hidden=\"true\"\r\n+                />\r\n+                <button\r\n+                  type=\"button\"\r\n+                  onClick={() => setPlan(\"base\")}\r\n+                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n+                    plan === \"base\" ? \"text-blue-700\" : \"text-blue-500 hover:text-blue-600\"\r\n+                  }`}\r\n+                >\r\n+                  Base\r\n+                    const [vehicleType, setVehicleType] = useState(VEHICLE_OPTIONS[0].id);\r\n+                </button>\r\n+                <button\r\n+                  type=\"button\"\r\n+                      setVehicleType(VEHICLE_OPTIONS[0].id);\r\n+                  onClick={() => {\r\n+                    if (selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\") return;\r\n+                    setPlan(\"revive\");\r\n+                  }}\r\n+                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n+                    plan === \"revive\" ? \"text-blue-700\" : \"text-blue-500 hover:text-blue-600\"\r\n+                  } ${\r\n+                    selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"\r\n+                      ? \"opacity-50 cursor-not-allowed\"\r\n+                      : \"\"\r\n+                  }`}\r\n+                  disabled={selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"}\r\n+                >\r\n+                  Revive\r\n+                </button>\r\n+              </div>\r\n+\r\n+                    const basePlanPrice = useMemo(() => {\r\n+                      if (!selectedService) return null;\r\n+                      if (plan === \"revive\" && typeof selectedService.revivePrice === \"number\") {\r\n+                        return selectedService.revivePrice;\r\n+                      }\r\n+                      if (plan === \"base\" && typeof selectedService.basePrice === \"number\") {\r\n+                        return selectedService.basePrice;\r\n+                      }\r\n+                      return null;\r\n+                    }, [plan, selectedService]);\r\n+\r\n+                    const vehicleOption = useMemo(\r\n+                      () => VEHICLE_OPTIONS.find((option) => option.id === vehicleType) ?? VEHICLE_OPTIONS[0],\r\n+                      [vehicleType]\r\n+                    );\r\n+\r\n+                    const totalPrice = useMemo(() => {\r\n+                      if (typeof basePlanPrice !== \"number\") return null;\r\n+                      return basePlanPrice + vehicleOption.adjustment;\r\n+                    }, [basePlanPrice, vehicleOption.adjustment]);\r\n+              <div className=\"text-xl font-semibold text-blue-700\">\r\n+                {plan === \"revive\" && typeof selectedService.revivePrice === \"number\"\r\n+                  ? `$${selectedService.revivePrice}`\r\n+                  : typeof selectedService.basePrice === \"number\"\r\n+                  ? `$${selectedService.basePrice}`\r\n+                  : \"Contact us\"}\r\n+              </div>\r\n+              {planFeatures.length ? (\r\n+                <ul className=\"grid sm:grid-cols-2 gap-3 text-blue-800 text-sm sm:text-base\">\r\n+                  {planFeatures.map((feature) => (\r\n+                    <li key={feature.text} className=\"flex items-start gap-3\">\r\n+                      <span className=\"text-lg leading-none mt-[2px]\">{feature.status}</span>\r\n+                      <span>{feature.text}</span>\r\n+                    </li>\r\n+                  ))}\r\n+                </ul>\r\n+              ) : null}\r\n+              {!selectedService.comingSoon && (\r\n+                <div className=\"flex flex-col sm:flex-row gap-3 pt-4\">\r\n+                  <button\r\n+                    type=\"button\"\r\n+                    onClick={handleOpenBooking}\r\n+                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+                  >\r\n+                    Begin Booking\r\n+                  </button>\r\n+                  <a\r\n+                    href=\"tel:+17828275010\"\r\n+                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg border border-blue-300 text-blue-700 hover:bg-blue-100 font-semibold text-center\"\r\n+                  >\r\n+                    Call +1 (782) 827-5010\r\n+                  </a>\r\n+                </div>\r\n+              )}\r\n+              {selectedService.comingSoon && (\r\n+                <div className=\"rounded-xl border border-dashed border-blue-200 bg-blue-50/70 px-4 py-6 text-blue-700 text-sm\">\r\n+                  Subscriptions are almost here. We’ll share flexible plans that keep your vehicle spotless on your schedule.\r\n+                </div>\r\n+              )}\r\n+            </div>\r\n+          </div>\r\n+        ) : (\r\n+          <div className=\"bg-white border border-blue-100 rounded-3xl shadow-lg p-10 text-center space-y-6\">\r\n+            <h1 className=\"text-3xl font-bold\" style={{ color: \"#000\" }}>Select a service to get started</h1>\r\n+            <p className=\"text-blue-700\">\r\n+              We couldn’t find the package you were looking for. Choose one of our detailing options to continue.\r\n+            </p>\r\n+            {fallbackService && (\r\n+              <button\r\n+                type=\"button\"\r\n+                onClick={() => router.push({ pathname: \"/book\", query: { service: fallbackService.id } })}\r\n+                className=\"px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+              >\r\n+                View {fallbackService.title}\r\n+              </button>\r\n+            )}\r\n+          </div>\r\n+        )}\r\n+      </section>\r\n+      <Footer />\r\n+              <div className=\"flex flex-wrap gap-2 bg-blue-50 border border-blue-200 rounded-2xl p-1 w-full sm:w-auto\">\r\n+                {VEHICLE_OPTIONS.map((option) => {\r\n+                  const isSelected = vehicleType === option.id;\r\n+                  return (\r\n+                    <button\r\n+                      key={option.id}\r\n+                      type=\"button\"\r\n+                      onClick={() => setVehicleType(option.id)}\r\n+                      className={`px-4 py-2 text-sm font-semibold rounded-full transition-colors ${\r\n+                        isSelected\r\n+                          ? \"bg-white text-blue-700 shadow\"\r\n+                          : \"text-blue-500 hover:text-blue-600\"\r\n+                      }`}\r\n+                    >\r\n+                      {option.label}\r\n+                      {option.adjustment > 0 ? ` +$${option.adjustment}` : \"\"}\r\n+                    </button>\r\n+                  );\r\n+                })}\r\n+              </div>\r\n+      {showBooking && selectedService && !selectedService.comingSoon && (\r\n+                {totalPrice !== null ? `Total: $${totalPrice}` : \"Contact us\"}\r\n+\r\n+              {totalPrice !== null && (\r\n+                <div className=\"text-sm text-blue-500\">\r\n+                  {plan === \"revive\" ? \"Revive\" : \"Base\"} plan ${basePlanPrice}\r\n+                  {vehicleOption.adjustment ? ` + ${vehicleOption.label} add-on $${vehicleOption.adjustment}` : \"\"}\r\n+                </div>\r\n+              )}\r\n"
                },
                {
                    "date": 1761333116087,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,217 @@\n+import { useEffect, useMemo, useState } from \"react\";\r\n+import dynamic from \"next/dynamic\";\r\n+import { useRouter } from \"next/router\";\r\n+import Navigation from \"@/components/Navigation\";\r\n+import Footer from \"@/components/Footer\";\r\n+import { SERVICES, getServiceById } from \"@/data/services\";\r\n+\r\n+const Booking = dynamic(() => import(\"@/components/Booking\"), { ssr: false });\r\n+      {showBooking && selectedService && !selectedService.comingSoon && (\r\n+        <Booking service={selectedService} onClose={handleCloseBooking} />\r\n+      )}\r\n+      return selectedService.revivePrice;\r\n+    }\r\n+    if (plan === \"base\" && typeof selectedService.basePrice === \"number\") {\r\n+      return selectedService.basePrice;\r\n+    }\r\n+    return null;\r\n+  }, [plan, selectedService]);\r\n+\r\n+  const vehicleOption = useMemo(\r\n+    () => VEHICLE_OPTIONS.find((option) => option.id === vehicleType) ?? VEHICLE_OPTIONS[0],\r\n+    [vehicleType]\r\n+  );\r\n+\r\n+  const totalPrice = useMemo(() => {\r\n+    if (typeof basePlanPrice !== \"number\") return null;\r\n+    return basePlanPrice + vehicleOption.adjustment;\r\n+  }, [basePlanPrice, vehicleOption.adjustment]);\r\n+\r\n+  useEffect(() => {\r\n+    setPlan(\"base\");\r\n+    setVehicleType(VEHICLE_OPTIONS[0].id);\r\n+  }, [selectedService?.id]);\r\n+\r\n+  useEffect(() => {\r\n+    if (!router.isReady) return;\r\n+    window.scrollTo({ top: 0, behavior: \"auto\" });\r\n+  }, [router.isReady]);\r\n+\r\n+  useEffect(() => {\r\n+    document.body.style.overflow = showBooking ? \"hidden\" : \"auto\";\r\n+    return () => {\r\n+      document.body.style.overflow = \"auto\";\r\n+    };\r\n+  }, [showBooking]);\r\n+\r\n+  const handleOpenBooking = () => {\r\n+    if (selectedService && !selectedService.comingSoon) {\r\n+      setShowBooking(true);\r\n+    }\r\n+  };\r\n+\r\n+  const handleCloseBooking = () => {\r\n+    setShowBooking(false);\r\n+  };\r\n+\r\n+  const fallbackService = SERVICES.find((svc) => !svc.comingSoon);\r\n+\r\n+  return (\r\n+    <main className=\"min-h-screen bg-blue-50 text-blue-900\">\r\n+      <Navigation />\r\n+      <section className=\"max-w-4xl mx-auto px-4 py-20\">\r\n+        {selectedService ? (\r\n+          <div className=\"bg-white border border-blue-100 rounded-3xl shadow-xl overflow-hidden\">\r\n+            <div className=\"px-6 sm:px-10 py-10 space-y-6\">\r\n+              <span className=\"inline-flex px-4 py-1 rounded-full bg-blue-100 text-blue-700 text-sm font-semibold uppercase tracking-widest\">\r\n+                {selectedService.comingSoon ? \"Coming Soon\" : \"Book Now\"}\r\n+              </span>\r\n+              <h1 className=\"text-3xl sm:text-4xl font-bold\" style={{ color: \"#000\" }}>\r\n+                {selectedService.title}\r\n+              </h1>\r\n+              <div className=\"relative grid grid-cols-2 bg-blue-50 border border-blue-200 rounded-full overflow-hidden w-full sm:w-auto\">\r\n+                <div\r\n+                  className=\"absolute inset-y-0 w-1/2 rounded-full bg-white shadow transition-transform duration-300 ease-out\"\r\n+                  style={{ transform: plan === \"revive\" ? \"translateX(100%)\" : \"translateX(0%)\" }}\r\n+                  aria-hidden=\"true\"\r\n+                />\r\n+                <button\r\n+                  type=\"button\"\r\n+                  onClick={() => setPlan(\"base\")}\r\n+                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n+                    plan === \"base\" ? \"text-blue-700\" : \"text-blue-500 hover:text-blue-600\"\r\n+                  }`}\r\n+                >\r\n+                  Base\r\n+                </button>\r\n+                <button\r\n+                  type=\"button\"\r\n+                  onClick={() => {\r\n+                    if (selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\") return;\r\n+                    setPlan(\"revive\");\r\n+                  }}\r\n+                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n+                    plan === \"revive\" ? \"text-blue-700\" : \"text-blue-500 hover:text-blue-600\"\r\n+                  } ${\r\n+                    selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"\r\n+                      ? \"opacity-50 cursor-not-allowed\"\r\n+                      : \"\"\r\n+                  }`}\r\n+                  disabled={selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"}\r\n+                >\r\n+                  Revive\r\n+                </button>\r\n+              </div>\r\n+              <div className=\"flex flex-wrap gap-2 bg-blue-50 border border-blue-200 rounded-2xl p-1 w-full sm:w-auto\">\r\n+                {VEHICLE_OPTIONS.map((option) => {\r\n+                  const isSelected = vehicleType === option.id;\r\n+                  return (\r\n+                    <button\r\n+                      key={option.id}\r\n+                      type=\"button\"\r\n+                      onClick={() => setVehicleType(option.id)}\r\n+                      className={`px-4 py-2 text-sm font-semibold rounded-full transition-colors ${\r\n+                        isSelected\r\n+                          ? \"bg-white text-blue-700 shadow\"\r\n+                          : \"text-blue-500 hover:text-blue-600\"\r\n+                      }`}\r\n+                    >\r\n+                      {option.label}\r\n+                      {option.adjustment > 0 ? ` +$${option.adjustment}` : \"\"}\r\n+                    </button>\r\n+                  );\r\n+                })}\r\n+              </div>\r\n+              <div className=\"space-y-1\">\r\n+                <div className=\"text-xl font-semibold text-blue-700\">\r\n+                  {totalPrice !== null ? `Total: $${totalPrice}` : \"Contact us\"}\r\n+                </div>\r\n+                {totalPrice !== null && (\r\n+                  <div className=\"text-sm text-blue-500\">\r\n+                    {plan === \"revive\" ? \"Revive\" : \"Base\"} plan ${basePlanPrice}\r\n+                    {vehicleOption.adjustment ? ` + ${vehicleOption.label} add-on $${vehicleOption.adjustment}` : \" + $0\"}\r\n+                  </div>\r\n+                )}\r\n+              </div>\r\n+              {planFeatures.length ? (\r\n+                <ul className=\"grid sm:grid-cols-2 gap-3 text-blue-800 text-sm sm:text-base\">\r\n+                  {planFeatures.map((feature) => (\r\n+                    <li key={feature.text} className=\"flex items-start gap-3\">\r\n+                      <span className=\"text-lg leading-none mt-[2px]\">{feature.status}</span>\r\n+                      <span>{feature.text}</span>\r\n+                    </li>\r\n+                  ))}\r\n+                </ul>\r\n+              ) : null}\r\n+              {!selectedService.comingSoon && (\r\n+                <div className=\"flex flex-col sm:flex-row gap-3 pt-4\">\r\n+                  <button\r\n+                    type=\"button\"\r\n+                    onClick={handleOpenBooking}\r\n+                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+                  >\r\n+                    Begin Booking\r\n+                  </button>\r\n+                  <a\r\n+                    href=\"tel:+17828275010\"\r\n+                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg border border-blue-300 text-blue-700 hover:bg-blue-100 font-semibold text-center\"\r\n+                  >\r\n+                    Call +1 (782) 827-5010\r\n+                  </a>\r\n+                </div>\r\n+              )}\r\n+              {selectedService.comingSoon && (\r\n+                <div className=\"rounded-xl border border-dashed border-blue-200 bg-blue-50/70 px-4 py-6 text-blue-700 text-sm\">\r\n+                  Subscriptions are almost here. We’ll share flexible plans that keep your vehicle spotless on your schedule.\r\n+                </div>\r\n+              )}\r\n+            </div>\r\n+          </div>\r\n+        ) : (\r\n+          <div className=\"bg-white border border-blue-100 rounded-3xl shadow-lg p-10 text-center space-y-6\">\r\n+            <h1 className=\"text-3xl font-bold\" style={{ color: \"#000\" }}>Select a service to get started</h1>\r\n+            <p className=\"text-blue-700\">\r\n+              We couldn’t find the package you were looking for. Choose one of our detailing options to continue.\r\n+            </p>\r\n+            {fallbackService && (\r\n+              <button\r\n+                type=\"button\"\r\n+                onClick={() => router.push({ pathname: \"/book\", query: { service: fallbackService.id } })}\r\n+                className=\"px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+              >\r\n+                View {fallbackService.title}\r\n+              </button>\r\n+            )}\r\n+          </div>\r\n+        )}\r\n+      </section>\r\n+      <Footer />\r\n+              <div className=\"flex flex-wrap gap-2 bg-blue-50 border border-blue-200 rounded-2xl p-1 w-full sm:w-auto\">\r\n+                {VEHICLE_OPTIONS.map((option) => {\r\n+                  const isSelected = vehicleType === option.id;\r\n+                  return (\r\n+                    <button\r\n+                      key={option.id}\r\n+                      type=\"button\"\r\n+                      onClick={() => setVehicleType(option.id)}\r\n+                      className={`px-4 py-2 text-sm font-semibold rounded-full transition-colors ${\r\n+                        isSelected\r\n+                          ? \"bg-white text-blue-700 shadow\"\r\n+                          : \"text-blue-500 hover:text-blue-600\"\r\n+                      }`}\r\n+                    >\r\n+                      {option.label}\r\n+                      {option.adjustment > 0 ? ` +$${option.adjustment}` : \"\"}\r\n+                    </button>\r\n+                  );\r\n+                })}\r\n+              </div>\r\n+      {showBooking && selectedService && !selectedService.comingSoon && (\r\n+                {totalPrice !== null ? `Total: $${totalPrice}` : \"Contact us\"}\r\n+\r\n+              {totalPrice !== null && (\r\n+                <div className=\"text-sm text-blue-500\">\r\n+                  {plan === \"revive\" ? \"Revive\" : \"Base\"} plan ${basePlanPrice}\r\n+                  {vehicleOption.adjustment ? ` + ${vehicleOption.label} add-on $${vehicleOption.adjustment}` : \"\"}\r\n+                </div>\r\n+              )}\r\n"
                },
                {
                    "date": 1761333165270,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,37 @@\n import { useEffect, useMemo, useState } from \"react\";\r\n import dynamic from \"next/dynamic\";\r\n-import { useRouter } from \"next/router\";\r\n-import Navigation from \"@/components/Navigation\";\r\n-import Footer from \"@/components/Footer\";\r\n-import { SERVICES, getServiceById } from \"@/data/services\";\r\n+const Booking = dynamic(() => import(\"@/components/Booking\"), { ssr: false });\r\n \r\n-const Booking = dynamic(() => import(\"@/components/Booking\"), { ssr: false });\r\n-      {showBooking && selectedService && !selectedService.comingSoon && (\r\n-        <Booking service={selectedService} onClose={handleCloseBooking} />\r\n-      )}\r\n+const VEHICLE_OPTIONS = [\r\n+  { id: \"sedan\", label: \"Sedan\", adjustment: 0 },\r\n+  { id: \"suv\", label: \"SUV\", adjustment: 20 },\r\n+  { id: \"truck\", label: \"Truck\", adjustment: 40 },\r\n+];\r\n+\r\n+export default function BookPage() {\r\n+  const router = useRouter();\r\n+  const { service: serviceId } = router.query;\r\n+  const selectedService = useMemo(() => {\r\n+    if (typeof serviceId !== \"string\") return null;\r\n+    return getServiceById(serviceId) || null;\r\n+  }, [serviceId]);\r\n+\r\n+  const [showBooking, setShowBooking] = useState(false);\r\n+  const [plan, setPlan] = useState(\"base\");\r\n+  const [vehicleType, setVehicleType] = useState(VEHICLE_OPTIONS[0].id);\r\n+\r\n+  const planFeatures = useMemo(() => {\r\n+    if (!selectedService?.features) return [];\r\n+    const planKey = plan === \"revive\" ? \"revive\" : \"base\";\r\n+    return selectedService.features\r\n+      .filter((feature) => feature[planKey] === \"✅\")\r\n+      .map((feature) => ({ text: feature.text, status: feature[planKey] }));\r\n+  }, [selectedService, plan]);\r\n+\r\n+  const basePlanPrice = useMemo(() => {\r\n+    if (!selectedService) return null;\r\n+    if (plan === \"revive\" && typeof selectedService.revivePrice === \"number\") {\r\n       return selectedService.revivePrice;\r\n     }\r\n     if (plan === \"base\" && typeof selectedService.basePrice === \"number\") {\r\n       return selectedService.basePrice;\r\n@@ -185,229 +207,14 @@\n           </div>\r\n         )}\r\n       </section>\r\n       <Footer />\r\n-              <div className=\"flex flex-wrap gap-2 bg-blue-50 border border-blue-200 rounded-2xl p-1 w-full sm:w-auto\">\r\n-                {VEHICLE_OPTIONS.map((option) => {\r\n-                  const isSelected = vehicleType === option.id;\r\n-                  return (\r\n-                    <button\r\n-                      key={option.id}\r\n-                      type=\"button\"\r\n-                      onClick={() => setVehicleType(option.id)}\r\n-                      className={`px-4 py-2 text-sm font-semibold rounded-full transition-colors ${\r\n-                        isSelected\r\n-                          ? \"bg-white text-blue-700 shadow\"\r\n-                          : \"text-blue-500 hover:text-blue-600\"\r\n-                      }`}\r\n-                    >\r\n-                      {option.label}\r\n-                      {option.adjustment > 0 ? ` +$${option.adjustment}` : \"\"}\r\n-                    </button>\r\n-                  );\r\n-                })}\r\n-              </div>\r\n       {showBooking && selectedService && !selectedService.comingSoon && (\r\n-                {totalPrice !== null ? `Total: $${totalPrice}` : \"Contact us\"}\r\n-\r\n-              {totalPrice !== null && (\r\n-                <div className=\"text-sm text-blue-500\">\r\n-                  {plan === \"revive\" ? \"Revive\" : \"Base\"} plan ${basePlanPrice}\r\n-                  {vehicleOption.adjustment ? ` + ${vehicleOption.label} add-on $${vehicleOption.adjustment}` : \"\"}\r\n-                </div>\r\n-              )}\r\n-import { useEffect, useMemo, useState } from \"react\";\r\n-import dynamic from \"next/dynamic\";\r\n-import { useRouter } from \"next/router\";\r\n-import Navigation from \"@/components/Navigation\";\r\n-import Footer from \"@/components/Footer\";\r\n-import { SERVICES, getServiceById } from \"@/data/services\";\r\n-\r\n-const Booking = dynamic(() => import(\"@/components/Booking\"), { ssr: false });\r\n-\r\n-const VEHICLE_OPTIONS = [\r\n-  { id: \"sedan\", label: \"Sedan\", adjustment: 0 },\r\n-  { id: \"suv\", label: \"SUV\", adjustment: 20 },\r\n-  { id: \"truck\", label: \"Truck\", adjustment: 40 },\r\n-];\r\n-\r\n-export default function BookPage() {\r\n-  const router = useRouter();\r\n-  const { service: serviceId } = router.query;\r\n-  const selectedService = useMemo(() => {\r\n-    if (typeof serviceId !== \"string\") return null;\r\n-    return getServiceById(serviceId) || null;\r\n-  }, [serviceId]);\r\n-\r\n-  const [showBooking, setShowBooking] = useState(false);\r\n-  const [plan, setPlan] = useState(\"base\");\r\n-\r\n-  const planFeatures = useMemo(() => {\r\n-    if (!selectedService?.features) return [];\r\n-    const planKey = plan === \"revive\" ? \"revive\" : \"base\";\r\n-    return selectedService.features\r\n-      .filter((feature) => feature[planKey] === \"✅\")\r\n-      .map((feature) => ({ text: feature.text, status: feature[planKey] }));\r\n-  }, [selectedService, plan]);\r\n-\r\n-  useEffect(() => {\r\n-    setPlan(\"base\");\r\n-  }, [selectedService?.id]);\r\n-\r\n-  useEffect(() => {\r\n-    if (!router.isReady) return;\r\n-    window.scrollTo({ top: 0, behavior: \"auto\" });\r\n-  }, [router.isReady]);\r\n-\r\n-  useEffect(() => {\r\n-    document.body.style.overflow = showBooking ? \"hidden\" : \"auto\";\r\n-    return () => {\r\n-      document.body.style.overflow = \"auto\";\r\n-    };\r\n-  }, [showBooking]);\r\n-\r\n-  const handleOpenBooking = () => {\r\n-    if (selectedService && !selectedService.comingSoon) {\r\n-      setShowBooking(true);\r\n-    }\r\n-  };\r\n-\r\n-  const handleCloseBooking = () => {\r\n-    setShowBooking(false);\r\n-  };\r\n-\r\n-  const fallbackService = SERVICES.find((svc) => !svc.comingSoon);\r\n-\r\n-  return (\r\n-    <main className=\"min-h-screen bg-blue-50 text-blue-900\">\r\n-      <Navigation />\r\n-      <section className=\"max-w-4xl mx-auto px-4 py-20\">\r\n-        {selectedService ? (\r\n-          <div className=\"bg-white border border-blue-100 rounded-3xl shadow-xl overflow-hidden\">\r\n-            <div className=\"px-6 sm:px-10 py-10 space-y-6\">\r\n-              <span className=\"inline-flex px-4 py-1 rounded-full bg-blue-100 text-blue-700 text-sm font-semibold uppercase tracking-widest\">\r\n-                {selectedService.comingSoon ? \"Coming Soon\" : \"Book Now\"}\r\n-              </span>\r\n-              <h1 className=\"text-3xl sm:text-4xl font-bold\" style={{ color: \"#000\" }}>\r\n-                {selectedService.title}\r\n-              </h1>\r\n-              <div className=\"relative grid grid-cols-2 bg-blue-50 border border-blue-200 rounded-full overflow-hidden w-full sm:w-auto\">\r\n-                <div\r\n-                  className=\"absolute inset-y-0 w-1/2 rounded-full bg-white shadow transition-transform duration-300 ease-out\"\r\n-                  style={{ transform: plan === \"revive\" ? \"translateX(100%)\" : \"translateX(0%)\" }}\r\n-                  aria-hidden=\"true\"\r\n-                />\r\n-                <button\r\n-                  type=\"button\"\r\n-                  onClick={() => setPlan(\"base\")}\r\n-                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n-                    plan === \"base\" ? \"text-blue-700\" : \"text-blue-500 hover:text-blue-600\"\r\n-                  }`}\r\n-                >\r\n-                  Base\r\n-                    const [vehicleType, setVehicleType] = useState(VEHICLE_OPTIONS[0].id);\r\n-                </button>\r\n-                <button\r\n-                  type=\"button\"\r\n-                      setVehicleType(VEHICLE_OPTIONS[0].id);\r\n-                  onClick={() => {\r\n-                    if (selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\") return;\r\n-                    setPlan(\"revive\");\r\n-                  }}\r\n-                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n-                    plan === \"revive\" ? \"text-blue-700\" : \"text-blue-500 hover:text-blue-600\"\r\n-                  } ${\r\n-                    selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"\r\n-                      ? \"opacity-50 cursor-not-allowed\"\r\n-                      : \"\"\r\n-                  }`}\r\n-                  disabled={selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"}\r\n-                >\r\n-                  Revive\r\n-                </button>\r\n-              </div>\r\n-\r\n-                    const basePlanPrice = useMemo(() => {\r\n-                      if (!selectedService) return null;\r\n-                      if (plan === \"revive\" && typeof selectedService.revivePrice === \"number\") {\r\n-                        return selectedService.revivePrice;\r\n-                      }\r\n-                      if (plan === \"base\" && typeof selectedService.basePrice === \"number\") {\r\n-                        return selectedService.basePrice;\r\n-                      }\r\n-                      return null;\r\n-                    }, [plan, selectedService]);\r\n-\r\n-                    const vehicleOption = useMemo(\r\n-                      () => VEHICLE_OPTIONS.find((option) => option.id === vehicleType) ?? VEHICLE_OPTIONS[0],\r\n-                      [vehicleType]\r\n-                    );\r\n-\r\n-                    const totalPrice = useMemo(() => {\r\n-                      if (typeof basePlanPrice !== \"number\") return null;\r\n-                      return basePlanPrice + vehicleOption.adjustment;\r\n-                    }, [basePlanPrice, vehicleOption.adjustment]);\r\n-              <div className=\"text-xl font-semibold text-blue-700\">\r\n-                {plan === \"revive\" && typeof selectedService.revivePrice === \"number\"\r\n-                  ? `$${selectedService.revivePrice}`\r\n-                  : typeof selectedService.basePrice === \"number\"\r\n-                  ? `$${selectedService.basePrice}`\r\n-                  : \"Contact us\"}\r\n-              </div>\r\n-              {planFeatures.length ? (\r\n-                <ul className=\"grid sm:grid-cols-2 gap-3 text-blue-800 text-sm sm:text-base\">\r\n-                  {planFeatures.map((feature) => (\r\n-                    <li key={feature.text} className=\"flex items-start gap-3\">\r\n-                      <span className=\"text-lg leading-none mt-[2px]\">{feature.status}</span>\r\n-                      <span>{feature.text}</span>\r\n-                    </li>\r\n-                  ))}\r\n-                </ul>\r\n-              ) : null}\r\n-              {!selectedService.comingSoon && (\r\n-                <div className=\"flex flex-col sm:flex-row gap-3 pt-4\">\r\n-                  <button\r\n-                    type=\"button\"\r\n-                    onClick={handleOpenBooking}\r\n-                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-                  >\r\n-                    Begin Booking\r\n-                  </button>\r\n-                  <a\r\n-                    href=\"tel:+17828275010\"\r\n-                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg border border-blue-300 text-blue-700 hover:bg-blue-100 font-semibold text-center\"\r\n-                  >\r\n-                    Call +1 (782) 827-5010\r\n-                  </a>\r\n-                </div>\r\n-              )}\r\n-              {selectedService.comingSoon && (\r\n-                <div className=\"rounded-xl border border-dashed border-blue-200 bg-blue-50/70 px-4 py-6 text-blue-700 text-sm\">\r\n-                  Subscriptions are almost here. We’ll share flexible plans that keep your vehicle spotless on your schedule.\r\n-                </div>\r\n-              )}\r\n-            </div>\r\n-          </div>\r\n-        ) : (\r\n-          <div className=\"bg-white border border-blue-100 rounded-3xl shadow-lg p-10 text-center space-y-6\">\r\n-            <h1 className=\"text-3xl font-bold\" style={{ color: \"#000\" }}>Select a service to get started</h1>\r\n-            <p className=\"text-blue-700\">\r\n-              We couldn’t find the package you were looking for. Choose one of our detailing options to continue.\r\n-            </p>\r\n-            {fallbackService && (\r\n-              <button\r\n-                type=\"button\"\r\n-                onClick={() => router.push({ pathname: \"/book\", query: { service: fallbackService.id } })}\r\n-                className=\"px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-              >\r\n-                View {fallbackService.title}\r\n-              </button>\r\n-            )}\r\n-          </div>\r\n-        )}\r\n-      </section>\r\n-      <Footer />\r\n-              <div className=\"flex flex-wrap gap-2 bg-blue-50 border border-blue-200 rounded-2xl p-1 w-full sm:w-auto\">\r\n+        <Booking service={selectedService} onClose={handleCloseBooking} />\r\n+      )}\r\n+    </main>\r\n+  );\r\n+}\r\n                 {VEHICLE_OPTIONS.map((option) => {\r\n                   const isSelected = vehicleType === option.id;\r\n                   return (\r\n                     <button\r\n@@ -434,172 +241,4 @@\n                   {plan === \"revive\" ? \"Revive\" : \"Base\"} plan ${basePlanPrice}\r\n                   {vehicleOption.adjustment ? ` + ${vehicleOption.label} add-on $${vehicleOption.adjustment}` : \"\"}\r\n                 </div>\r\n               )}\r\n-import { useEffect, useMemo, useState } from \"react\";\r\n-import dynamic from \"next/dynamic\";\r\n-import { useRouter } from \"next/router\";\r\n-import Navigation from \"@/components/Navigation\";\r\n-import Footer from \"@/components/Footer\";\r\n-import { SERVICES, getServiceById } from \"@/data/services\";\r\n-\r\n-const Booking = dynamic(() => import(\"@/components/Booking\"), { ssr: false });\r\n-\r\n-export default function BookPage() {\r\n-  const router = useRouter();\r\n-  const { service: serviceId } = router.query;\r\n-  const selectedService = useMemo(() => {\r\n-    if (typeof serviceId !== \"string\") return null;\r\n-    return getServiceById(serviceId) || null;\r\n-  }, [serviceId]);\r\n-\r\n-  const [showBooking, setShowBooking] = useState(false);\r\n-  const [plan, setPlan] = useState(\"base\");\r\n-\r\n-  const planFeatures = useMemo(() => {\r\n-    if (!selectedService?.features) return [];\r\n-    const planKey = plan === \"revive\" ? \"revive\" : \"base\";\r\n-    return selectedService.features\r\n-      .filter((feature) => feature[planKey] === \"✅\")\r\n-      .map((feature) => ({ text: feature.text, status: feature[planKey] }));\r\n-  }, [selectedService, plan]);\r\n-\r\n-  useEffect(() => {\r\n-    setPlan(\"base\");\r\n-  }, [selectedService?.id]);\r\n-\r\n-  useEffect(() => {\r\n-    if (!router.isReady) return;\r\n-    window.scrollTo({ top: 0, behavior: \"auto\" });\r\n-  }, [router.isReady]);\r\n-\r\n-  useEffect(() => {\r\n-    document.body.style.overflow = showBooking ? \"hidden\" : \"auto\";\r\n-    return () => {\r\n-      document.body.style.overflow = \"auto\";\r\n-    };\r\n-  }, [showBooking]);\r\n-\r\n-  const handleOpenBooking = () => {\r\n-    if (selectedService && !selectedService.comingSoon) {\r\n-      setShowBooking(true);\r\n-    }\r\n-  };\r\n-\r\n-  const handleCloseBooking = () => {\r\n-    setShowBooking(false);\r\n-  };\r\n-\r\n-  const fallbackService = SERVICES.find((svc) => !svc.comingSoon);\r\n-\r\n-  return (\r\n-    <main className=\"min-h-screen bg-blue-50 text-blue-900\">\r\n-      <Navigation />\r\n-      <section className=\"max-w-4xl mx-auto px-4 py-20\">\r\n-        {selectedService ? (\r\n-          <div className=\"bg-white border border-blue-100 rounded-3xl shadow-xl overflow-hidden\">\r\n-            <div className=\"px-6 sm:px-10 py-10 space-y-6\">\r\n-              <span className=\"inline-flex px-4 py-1 rounded-full bg-blue-100 text-blue-700 text-sm font-semibold uppercase tracking-widest\">\r\n-                {selectedService.comingSoon ? \"Coming Soon\" : \"Book Now\"}\r\n-              </span>\r\n-              <h1 className=\"text-3xl sm:text-4xl font-bold\" style={{ color: \"#000\" }}>\r\n-                {selectedService.title}\r\n-              </h1>\r\n-              <div className=\"relative grid grid-cols-2 bg-blue-50 border border-blue-200 rounded-full overflow-hidden w-full sm:w-auto\">\r\n-                <div\r\n-                  className=\"absolute inset-y-0 w-1/2 rounded-full bg-white shadow transition-transform duration-300 ease-out\"\r\n-                  style={{ transform: plan === \"revive\" ? \"translateX(100%)\" : \"translateX(0%)\" }}\r\n-                  aria-hidden=\"true\"\r\n-                />\r\n-                <button\r\n-                  type=\"button\"\r\n-                  onClick={() => setPlan(\"base\")}\r\n-                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n-                    plan === \"base\" ? \"text-blue-700\" : \"text-blue-500 hover:text-blue-600\"\r\n-                  }`}\r\n-                >\r\n-                  Base\r\n-                </button>\r\n-                <button\r\n-                  type=\"button\"\r\n-                  onClick={() => {\r\n-                    if (selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\") return;\r\n-                    setPlan(\"revive\");\r\n-                  }}\r\n-                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n-                    plan === \"revive\" ? \"text-blue-700\" : \"text-blue-500 hover:text-blue-600\"\r\n-                  } ${\r\n-                    selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"\r\n-                      ? \"opacity-50 cursor-not-allowed\"\r\n-                      : \"\"\r\n-                  }`}\r\n-                  disabled={selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"}\r\n-                >\r\n-                  Revive\r\n-                </button>\r\n-              </div>\r\n-              <div className=\"text-xl font-semibold text-blue-700\">\r\n-                {plan === \"revive\" && typeof selectedService.revivePrice === \"number\"\r\n-                  ? `$${selectedService.revivePrice}`\r\n-                  : typeof selectedService.basePrice === \"number\"\r\n-                  ? `$${selectedService.basePrice}`\r\n-                  : \"Contact us\"}\r\n-              </div>\r\n-              {planFeatures.length ? (\r\n-                <ul className=\"grid sm:grid-cols-2 gap-3 text-blue-800 text-sm sm:text-base\">\r\n-                  {planFeatures.map((feature) => (\r\n-                    <li key={feature.text} className=\"flex items-start gap-3\">\r\n-                      <span className=\"text-lg leading-none mt-[2px]\">{feature.status}</span>\r\n-                      <span>{feature.text}</span>\r\n-                    </li>\r\n-                  ))}\r\n-                </ul>\r\n-              ) : null}\r\n-              {!selectedService.comingSoon && (\r\n-                <div className=\"flex flex-col sm:flex-row gap-3 pt-4\">\r\n-                  <button\r\n-                    type=\"button\"\r\n-                    onClick={handleOpenBooking}\r\n-                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-                  >\r\n-                    Begin Booking\r\n-                  </button>\r\n-                  <a\r\n-                    href=\"tel:+17828275010\"\r\n-                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg border border-blue-300 text-blue-700 hover:bg-blue-100 font-semibold text-center\"\r\n-                  >\r\n-                    Call +1 (782) 827-5010\r\n-                  </a>\r\n-                </div>\r\n-              )}\r\n-              {selectedService.comingSoon && (\r\n-                <div className=\"rounded-xl border border-dashed border-blue-200 bg-blue-50/70 px-4 py-6 text-blue-700 text-sm\">\r\n-                  Subscriptions are almost here. We’ll share flexible plans that keep your vehicle spotless on your schedule.\r\n-                </div>\r\n-              )}\r\n-            </div>\r\n-          </div>\r\n-        ) : (\r\n-          <div className=\"bg-white border border-blue-100 rounded-3xl shadow-lg p-10 text-center space-y-6\">\r\n-            <h1 className=\"text-3xl font-bold\" style={{ color: \"#000\" }}>Select a service to get started</h1>\r\n-            <p className=\"text-blue-700\">\r\n-              We couldn’t find the package you were looking for. Choose one of our detailing options to continue.\r\n-            </p>\r\n-            {fallbackService && (\r\n-              <button\r\n-                type=\"button\"\r\n-                onClick={() => router.push({ pathname: \"/book\", query: { service: fallbackService.id } })}\r\n-                className=\"px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-              >\r\n-                View {fallbackService.title}\r\n-              </button>\r\n-            )}\r\n-          </div>\r\n-        )}\r\n-      </section>\r\n-      <Footer />\r\n-      {showBooking && selectedService && !selectedService.comingSoon && (\r\n-        <Booking service={selectedService} onClose={handleCloseBooking} />\r\n-      )}\r\n-    </main>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1761333183007,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,249 @@\n+import { useEffect, useMemo, useState } from \"react\";\r\n+import dynamic from \"next/dynamic\";\r\n+import { useRouter } from \"next/router\";\r\n+import Navigation from \"@/components/Navigation\";\r\n+import Footer from \"@/components/Footer\";\r\n+import { SERVICES, getServiceById } from \"@/data/services\";\r\n+\r\n+const Booking = dynamic(() => import(\"@/components/Booking\"), { ssr: false });\r\n+\r\n+const VEHICLE_OPTIONS = [\r\n+  { id: \"sedan\", label: \"Sedan\", adjustment: 0 },\r\n+  { id: \"suv\", label: \"SUV\", adjustment: 20 },\r\n+  { id: \"truck\", label: \"Truck\", adjustment: 40 },\r\n+];\r\n+\r\n+export default function BookPage() {\r\n+  const router = useRouter();\r\n+  const { service: serviceId } = router.query;\r\n+  const selectedService = useMemo(() => {\r\n+    if (typeof serviceId !== \"string\") return null;\r\n+    return getServiceById(serviceId) || null;\r\n+  }, [serviceId]);\r\n+\r\n+  const [showBooking, setShowBooking] = useState(false);\r\n+  const [plan, setPlan] = useState(\"base\");\r\n+  const [vehicleType, setVehicleType] = useState(VEHICLE_OPTIONS[0].id);\r\n+\r\n+  const planFeatures = useMemo(() => {\r\n+    if (!selectedService?.features) return [];\r\n+    const planKey = plan === \"revive\" ? \"revive\" : \"base\";\r\n+    return selectedService.features\r\n+      .filter((feature) => feature[planKey] === \"✅\")\r\n+      .map((feature) => ({ text: feature.text, status: feature[planKey] }));\r\n+  }, [selectedService, plan]);\r\n+\r\n+  const basePlanPrice = useMemo(() => {\r\n+    if (!selectedService) return null;\r\n+    if (plan === \"revive\" && typeof selectedService.revivePrice === \"number\") {\r\n+      return selectedService.revivePrice;\r\n+    }\r\n+    if (plan === \"base\" && typeof selectedService.basePrice === \"number\") {\r\n+      return selectedService.basePrice;\r\n+    }\r\n+    return null;\r\n+  }, [plan, selectedService]);\r\n+\r\n+  const vehicleOption = useMemo(\r\n+    () => VEHICLE_OPTIONS.find((option) => option.id === vehicleType) ?? VEHICLE_OPTIONS[0],\r\n+    [vehicleType]\r\n+  );\r\n+\r\n+  const totalPrice = useMemo(() => {\r\n+    if (typeof basePlanPrice !== \"number\") return null;\r\n+    return basePlanPrice + vehicleOption.adjustment;\r\n+  }, [basePlanPrice, vehicleOption.adjustment]);\r\n+\r\n+  useEffect(() => {\r\n+    setPlan(\"base\");\r\n+    setVehicleType(VEHICLE_OPTIONS[0].id);\r\n+  }, [selectedService?.id]);\r\n+\r\n+  useEffect(() => {\r\n+    if (!router.isReady) return;\r\n+    window.scrollTo({ top: 0, behavior: \"auto\" });\r\n+  }, [router.isReady]);\r\n+\r\n+  useEffect(() => {\r\n+    document.body.style.overflow = showBooking ? \"hidden\" : \"auto\";\r\n+    return () => {\r\n+      document.body.style.overflow = \"auto\";\r\n+    };\r\n+  }, [showBooking]);\r\n+\r\n+  const handleOpenBooking = () => {\r\n+    if (selectedService && !selectedService.comingSoon) {\r\n+      setShowBooking(true);\r\n+    }\r\n+  };\r\n+\r\n+  const handleCloseBooking = () => {\r\n+    setShowBooking(false);\r\n+  };\r\n+\r\n+  const fallbackService = SERVICES.find((svc) => !svc.comingSoon);\r\n+\r\n+  return (\r\n+    <main className=\"min-h-screen bg-blue-50 text-blue-900\">\r\n+      <Navigation />\r\n+      <section className=\"max-w-4xl mx-auto px-4 py-20\">\r\n+        {selectedService ? (\r\n+          <div className=\"bg-white border border-blue-100 rounded-3xl shadow-xl overflow-hidden\">\r\n+            <div className=\"px-6 sm:px-10 py-10 space-y-6\">\r\n+              <span className=\"inline-flex px-4 py-1 rounded-full bg-blue-100 text-blue-700 text-sm font-semibold uppercase tracking-widest\">\r\n+                {selectedService.comingSoon ? \"Coming Soon\" : \"Book Now\"}\r\n+              </span>\r\n+              <h1 className=\"text-3xl sm:text-4xl font-bold\" style={{ color: \"#000\" }}>\r\n+                {selectedService.title}\r\n+              </h1>\r\n+              <div className=\"relative grid grid-cols-2 bg-blue-50 border border-blue-200 rounded-full overflow-hidden w-full sm:w-auto\">\r\n+                <div\r\n+                  className=\"absolute inset-y-0 w-1/2 rounded-full bg-white shadow transition-transform duration-300 ease-out\"\r\n+                  style={{ transform: plan === \"revive\" ? \"translateX(100%)\" : \"translateX(0%)\" }}\r\n+                  aria-hidden=\"true\"\r\n+                />\r\n+                <button\r\n+                  type=\"button\"\r\n+                  onClick={() => setPlan(\"base\")}\r\n+                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n+                    plan === \"base\" ? \"text-blue-700\" : \"text-blue-500 hover:text-blue-600\"\r\n+                  }`}\r\n+                >\r\n+                  Base\r\n+                </button>\r\n+                <button\r\n+                  type=\"button\"\r\n+                  onClick={() => {\r\n+                    if (selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\") return;\r\n+                    setPlan(\"revive\");\r\n+                  }}\r\n+                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n+                    plan === \"revive\" ? \"text-blue-700\" : \"text-blue-500 hover:text-blue-600\"\r\n+                  } ${\r\n+                    selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"\r\n+                      ? \"opacity-50 cursor-not-allowed\"\r\n+                      : \"\"\r\n+                  }`}\r\n+                  disabled={selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"}\r\n+                >\r\n+                  Revive\r\n+                </button>\r\n+              </div>\r\n+              <div className=\"flex flex-wrap gap-2 bg-blue-50 border border-blue-200 rounded-2xl p-1 w-full sm:w-auto\">\r\n+                {VEHICLE_OPTIONS.map((option) => {\r\n+                  const isSelected = vehicleType === option.id;\r\n+                  return (\r\n+                    <button\r\n+                      key={option.id}\r\n+                      type=\"button\"\r\n+                      onClick={() => setVehicleType(option.id)}\r\n+                      className={`px-4 py-2 text-sm font-semibold rounded-full transition-colors ${\r\n+                        isSelected\r\n+                          ? \"bg-white text-blue-700 shadow\"\r\n+                          : \"text-blue-500 hover:text-blue-600\"\r\n+                      }`}\r\n+                    >\r\n+                      {option.label}\r\n+                      {option.adjustment > 0 ? ` +$${option.adjustment}` : \"\"}\r\n+                    </button>\r\n+                  );\r\n+                })}\r\n+              </div>\r\n+              <div className=\"space-y-1\">\r\n+                <div className=\"text-xl font-semibold text-blue-700\">\r\n+                  {totalPrice !== null ? `Total: $${totalPrice}` : \"Contact us\"}\r\n+                </div>\r\n+                {totalPrice !== null && (\r\n+                  <div className=\"text-sm text-blue-500\">\r\n+                    {plan === \"revive\" ? \"Revive\" : \"Base\"} plan ${basePlanPrice}\r\n+                    {vehicleOption.adjustment ? ` + ${vehicleOption.label} add-on $${vehicleOption.adjustment}` : \" + $0\"}\r\n+                  </div>\r\n+                )}\r\n+              </div>\r\n+              {planFeatures.length ? (\r\n+                <ul className=\"grid sm:grid-cols-2 gap-3 text-blue-800 text-sm sm:text-base\">\r\n+                  {planFeatures.map((feature) => (\r\n+                    <li key={feature.text} className=\"flex items-start gap-3\">\r\n+                      <span className=\"text-lg leading-none mt-[2px]\">{feature.status}</span>\r\n+                      <span>{feature.text}</span>\r\n+                    </li>\r\n+                  ))}\r\n+                </ul>\r\n+              ) : null}\r\n+              {!selectedService.comingSoon && (\r\n+                <div className=\"flex flex-col sm:flex-row gap-3 pt-4\">\r\n+                  <button\r\n+                    type=\"button\"\r\n+                    onClick={handleOpenBooking}\r\n+                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+                  >\r\n+                    Begin Booking\r\n+                  </button>\r\n+                  <a\r\n+                    href=\"tel:+17828275010\"\r\n+                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg border border-blue-300 text-blue-700 hover:bg-blue-100 font-semibold text-center\"\r\n+                  >\r\n+                    Call +1 (782) 827-5010\r\n+                  </a>\r\n+                </div>\r\n+              )}\r\n+              {selectedService.comingSoon && (\r\n+                <div className=\"rounded-xl border border-dashed border-blue-200 bg-blue-50/70 px-4 py-6 text-blue-700 text-sm\">\r\n+                  Subscriptions are almost here. We’ll share flexible plans that keep your vehicle spotless on your schedule.\r\n+                </div>\r\n+              )}\r\n+            </div>\r\n+          </div>\r\n+        ) : (\r\n+          <div className=\"bg-white border border-blue-100 rounded-3xl shadow-lg p-10 text-center space-y-6\">\r\n+            <h1 className=\"text-3xl font-bold\" style={{ color: \"#000\" }}>Select a service to get started</h1>\r\n+            <p className=\"text-blue-700\">\r\n+              We couldn’t find the package you were looking for. Choose one of our detailing options to continue.\r\n+            </p>\r\n+            {fallbackService && (\r\n+              <button\r\n+                type=\"button\"\r\n+                onClick={() => router.push({ pathname: \"/book\", query: { service: fallbackService.id } })}\r\n+                className=\"px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+              >\r\n+                View {fallbackService.title}\r\n+              </button>\r\n+            )}\r\n+          </div>\r\n+        )}\r\n+      </section>\r\n+      <Footer />\r\n+      {showBooking && selectedService && !selectedService.comingSoon && (\r\n+        <Booking service={selectedService} onClose={handleCloseBooking} />\r\n+      )}\r\n+    </main>\r\n+  );\r\n+}\r\n+                {VEHICLE_OPTIONS.map((option) => {\r\n+                  const isSelected = vehicleType === option.id;\r\n+                  return (\r\n+                    <button\r\n+                      key={option.id}\r\n+                      type=\"button\"\r\n+                      onClick={() => setVehicleType(option.id)}\r\n+                      className={`px-4 py-2 text-sm font-semibold rounded-full transition-colors ${\r\n+                        isSelected\r\n+                          ? \"bg-white text-blue-700 shadow\"\r\n+                          : \"text-blue-500 hover:text-blue-600\"\r\n+                      }`}\r\n+                    >\r\n+                      {option.label}\r\n+                      {option.adjustment > 0 ? ` +$${option.adjustment}` : \"\"}\r\n+                    </button>\r\n+                  );\r\n+                })}\r\n+              </div>\r\n+      {showBooking && selectedService && !selectedService.comingSoon && (\r\n+                {totalPrice !== null ? `Total: $${totalPrice}` : \"Contact us\"}\r\n+\r\n+              {totalPrice !== null && (\r\n+                <div className=\"text-sm text-blue-500\">\r\n+                  {plan === \"revive\" ? \"Revive\" : \"Base\"} plan ${basePlanPrice}\r\n+                  {vehicleOption.adjustment ? ` + ${vehicleOption.label} add-on $${vehicleOption.adjustment}` : \"\"}\r\n+                </div>\r\n+              )}\r\n"
                },
                {
                    "date": 1761333191242,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,276 +218,5 @@\n       )}\r\n     </main>\r\n   );\r\n }\r\n-                {VEHICLE_OPTIONS.map((option) => {\r\n-                  const isSelected = vehicleType === option.id;\r\n-                  return (\r\n-                    <button\r\n-                      key={option.id}\r\n-                      type=\"button\"\r\n-                      onClick={() => setVehicleType(option.id)}\r\n-                      className={`px-4 py-2 text-sm font-semibold rounded-full transition-colors ${\r\n-                        isSelected\r\n-                          ? \"bg-white text-blue-700 shadow\"\r\n-                          : \"text-blue-500 hover:text-blue-600\"\r\n-                      }`}\r\n-                    >\r\n-                      {option.label}\r\n-                      {option.adjustment > 0 ? ` +$${option.adjustment}` : \"\"}\r\n-                    </button>\r\n-                  );\r\n-                })}\r\n-              </div>\r\n-      {showBooking && selectedService && !selectedService.comingSoon && (\r\n-                {totalPrice !== null ? `Total: $${totalPrice}` : \"Contact us\"}\r\n-\r\n-              {totalPrice !== null && (\r\n-                <div className=\"text-sm text-blue-500\">\r\n-                  {plan === \"revive\" ? \"Revive\" : \"Base\"} plan ${basePlanPrice}\r\n-                  {vehicleOption.adjustment ? ` + ${vehicleOption.label} add-on $${vehicleOption.adjustment}` : \"\"}\r\n-                </div>\r\n-              )}\r\n-import { useEffect, useMemo, useState } from \"react\";\r\n-import dynamic from \"next/dynamic\";\r\n-const Booking = dynamic(() => import(\"@/components/Booking\"), { ssr: false });\r\n-\r\n-const VEHICLE_OPTIONS = [\r\n-  { id: \"sedan\", label: \"Sedan\", adjustment: 0 },\r\n-  { id: \"suv\", label: \"SUV\", adjustment: 20 },\r\n-  { id: \"truck\", label: \"Truck\", adjustment: 40 },\r\n-];\r\n-\r\n-export default function BookPage() {\r\n-  const router = useRouter();\r\n-  const { service: serviceId } = router.query;\r\n-  const selectedService = useMemo(() => {\r\n-    if (typeof serviceId !== \"string\") return null;\r\n-    return getServiceById(serviceId) || null;\r\n-  }, [serviceId]);\r\n-\r\n-  const [showBooking, setShowBooking] = useState(false);\r\n-  const [plan, setPlan] = useState(\"base\");\r\n-  const [vehicleType, setVehicleType] = useState(VEHICLE_OPTIONS[0].id);\r\n-\r\n-  const planFeatures = useMemo(() => {\r\n-    if (!selectedService?.features) return [];\r\n-    const planKey = plan === \"revive\" ? \"revive\" : \"base\";\r\n-    return selectedService.features\r\n-      .filter((feature) => feature[planKey] === \"✅\")\r\n-      .map((feature) => ({ text: feature.text, status: feature[planKey] }));\r\n-  }, [selectedService, plan]);\r\n-\r\n-  const basePlanPrice = useMemo(() => {\r\n-    if (!selectedService) return null;\r\n-    if (plan === \"revive\" && typeof selectedService.revivePrice === \"number\") {\r\n-      return selectedService.revivePrice;\r\n-    }\r\n-    if (plan === \"base\" && typeof selectedService.basePrice === \"number\") {\r\n-      return selectedService.basePrice;\r\n-    }\r\n-    return null;\r\n-  }, [plan, selectedService]);\r\n-\r\n-  const vehicleOption = useMemo(\r\n-    () => VEHICLE_OPTIONS.find((option) => option.id === vehicleType) ?? VEHICLE_OPTIONS[0],\r\n-    [vehicleType]\r\n-  );\r\n-\r\n-  const totalPrice = useMemo(() => {\r\n-    if (typeof basePlanPrice !== \"number\") return null;\r\n-    return basePlanPrice + vehicleOption.adjustment;\r\n-  }, [basePlanPrice, vehicleOption.adjustment]);\r\n-\r\n-  useEffect(() => {\r\n-    setPlan(\"base\");\r\n-    setVehicleType(VEHICLE_OPTIONS[0].id);\r\n-  }, [selectedService?.id]);\r\n-\r\n-  useEffect(() => {\r\n-    if (!router.isReady) return;\r\n-    window.scrollTo({ top: 0, behavior: \"auto\" });\r\n-  }, [router.isReady]);\r\n-\r\n-  useEffect(() => {\r\n-    document.body.style.overflow = showBooking ? \"hidden\" : \"auto\";\r\n-    return () => {\r\n-      document.body.style.overflow = \"auto\";\r\n-    };\r\n-  }, [showBooking]);\r\n-\r\n-  const handleOpenBooking = () => {\r\n-    if (selectedService && !selectedService.comingSoon) {\r\n-      setShowBooking(true);\r\n-    }\r\n-  };\r\n-\r\n-  const handleCloseBooking = () => {\r\n-    setShowBooking(false);\r\n-  };\r\n-\r\n-  const fallbackService = SERVICES.find((svc) => !svc.comingSoon);\r\n-\r\n-  return (\r\n-    <main className=\"min-h-screen bg-blue-50 text-blue-900\">\r\n-      <Navigation />\r\n-      <section className=\"max-w-4xl mx-auto px-4 py-20\">\r\n-        {selectedService ? (\r\n-          <div className=\"bg-white border border-blue-100 rounded-3xl shadow-xl overflow-hidden\">\r\n-            <div className=\"px-6 sm:px-10 py-10 space-y-6\">\r\n-              <span className=\"inline-flex px-4 py-1 rounded-full bg-blue-100 text-blue-700 text-sm font-semibold uppercase tracking-widest\">\r\n-                {selectedService.comingSoon ? \"Coming Soon\" : \"Book Now\"}\r\n-              </span>\r\n-              <h1 className=\"text-3xl sm:text-4xl font-bold\" style={{ color: \"#000\" }}>\r\n-                {selectedService.title}\r\n-              </h1>\r\n-              <div className=\"relative grid grid-cols-2 bg-blue-50 border border-blue-200 rounded-full overflow-hidden w-full sm:w-auto\">\r\n-                <div\r\n-                  className=\"absolute inset-y-0 w-1/2 rounded-full bg-white shadow transition-transform duration-300 ease-out\"\r\n-                  style={{ transform: plan === \"revive\" ? \"translateX(100%)\" : \"translateX(0%)\" }}\r\n-                  aria-hidden=\"true\"\r\n-                />\r\n-                <button\r\n-                  type=\"button\"\r\n-                  onClick={() => setPlan(\"base\")}\r\n-                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n-                    plan === \"base\" ? \"text-blue-700\" : \"text-blue-500 hover:text-blue-600\"\r\n-                  }`}\r\n-                >\r\n-                  Base\r\n-                </button>\r\n-                <button\r\n-                  type=\"button\"\r\n-                  onClick={() => {\r\n-                    if (selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\") return;\r\n-                    setPlan(\"revive\");\r\n-                  }}\r\n-                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n-                    plan === \"revive\" ? \"text-blue-700\" : \"text-blue-500 hover:text-blue-600\"\r\n-                  } ${\r\n-                    selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"\r\n-                      ? \"opacity-50 cursor-not-allowed\"\r\n-                      : \"\"\r\n-                  }`}\r\n-                  disabled={selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"}\r\n-                >\r\n-                  Revive\r\n-                </button>\r\n-              </div>\r\n-              <div className=\"flex flex-wrap gap-2 bg-blue-50 border border-blue-200 rounded-2xl p-1 w-full sm:w-auto\">\r\n-                {VEHICLE_OPTIONS.map((option) => {\r\n-                  const isSelected = vehicleType === option.id;\r\n-                  return (\r\n-                    <button\r\n-                      key={option.id}\r\n-                      type=\"button\"\r\n-                      onClick={() => setVehicleType(option.id)}\r\n-                      className={`px-4 py-2 text-sm font-semibold rounded-full transition-colors ${\r\n-                        isSelected\r\n-                          ? \"bg-white text-blue-700 shadow\"\r\n-                          : \"text-blue-500 hover:text-blue-600\"\r\n-                      }`}\r\n-                    >\r\n-                      {option.label}\r\n-                      {option.adjustment > 0 ? ` +$${option.adjustment}` : \"\"}\r\n-                    </button>\r\n-                  );\r\n-                })}\r\n-              </div>\r\n-              <div className=\"space-y-1\">\r\n-                <div className=\"text-xl font-semibold text-blue-700\">\r\n-                  {totalPrice !== null ? `Total: $${totalPrice}` : \"Contact us\"}\r\n-                </div>\r\n-                {totalPrice !== null && (\r\n-                  <div className=\"text-sm text-blue-500\">\r\n-                    {plan === \"revive\" ? \"Revive\" : \"Base\"} plan ${basePlanPrice}\r\n-                    {vehicleOption.adjustment ? ` + ${vehicleOption.label} add-on $${vehicleOption.adjustment}` : \" + $0\"}\r\n-                  </div>\r\n-                )}\r\n-              </div>\r\n-              {planFeatures.length ? (\r\n-                <ul className=\"grid sm:grid-cols-2 gap-3 text-blue-800 text-sm sm:text-base\">\r\n-                  {planFeatures.map((feature) => (\r\n-                    <li key={feature.text} className=\"flex items-start gap-3\">\r\n-                      <span className=\"text-lg leading-none mt-[2px]\">{feature.status}</span>\r\n-                      <span>{feature.text}</span>\r\n-                    </li>\r\n-                  ))}\r\n-                </ul>\r\n-              ) : null}\r\n-              {!selectedService.comingSoon && (\r\n-                <div className=\"flex flex-col sm:flex-row gap-3 pt-4\">\r\n-                  <button\r\n-                    type=\"button\"\r\n-                    onClick={handleOpenBooking}\r\n-                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-                  >\r\n-                    Begin Booking\r\n-                  </button>\r\n-                  <a\r\n-                    href=\"tel:+17828275010\"\r\n-                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg border border-blue-300 text-blue-700 hover:bg-blue-100 font-semibold text-center\"\r\n-                  >\r\n-                    Call +1 (782) 827-5010\r\n-                  </a>\r\n-                </div>\r\n-              )}\r\n-              {selectedService.comingSoon && (\r\n-                <div className=\"rounded-xl border border-dashed border-blue-200 bg-blue-50/70 px-4 py-6 text-blue-700 text-sm\">\r\n-                  Subscriptions are almost here. We’ll share flexible plans that keep your vehicle spotless on your schedule.\r\n-                </div>\r\n-              )}\r\n-            </div>\r\n-          </div>\r\n-        ) : (\r\n-          <div className=\"bg-white border border-blue-100 rounded-3xl shadow-lg p-10 text-center space-y-6\">\r\n-            <h1 className=\"text-3xl font-bold\" style={{ color: \"#000\" }}>Select a service to get started</h1>\r\n-            <p className=\"text-blue-700\">\r\n-              We couldn’t find the package you were looking for. Choose one of our detailing options to continue.\r\n-            </p>\r\n-            {fallbackService && (\r\n-              <button\r\n-                type=\"button\"\r\n-                onClick={() => router.push({ pathname: \"/book\", query: { service: fallbackService.id } })}\r\n-                className=\"px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-              >\r\n-                View {fallbackService.title}\r\n-              </button>\r\n-            )}\r\n-          </div>\r\n-        )}\r\n-      </section>\r\n-      <Footer />\r\n-      {showBooking && selectedService && !selectedService.comingSoon && (\r\n-        <Booking service={selectedService} onClose={handleCloseBooking} />\r\n-      )}\r\n-    </main>\r\n-  );\r\n-}\r\n-                {VEHICLE_OPTIONS.map((option) => {\r\n-                  const isSelected = vehicleType === option.id;\r\n-                  return (\r\n-                    <button\r\n-                      key={option.id}\r\n-                      type=\"button\"\r\n-                      onClick={() => setVehicleType(option.id)}\r\n-                      className={`px-4 py-2 text-sm font-semibold rounded-full transition-colors ${\r\n-                        isSelected\r\n-                          ? \"bg-white text-blue-700 shadow\"\r\n-                          : \"text-blue-500 hover:text-blue-600\"\r\n-                      }`}\r\n-                    >\r\n-                      {option.label}\r\n-                      {option.adjustment > 0 ? ` +$${option.adjustment}` : \"\"}\r\n-                    </button>\r\n-                  );\r\n-                })}\r\n-              </div>\r\n-      {showBooking && selectedService && !selectedService.comingSoon && (\r\n-                {totalPrice !== null ? `Total: $${totalPrice}` : \"Contact us\"}\r\n-\r\n-              {totalPrice !== null && (\r\n-                <div className=\"text-sm text-blue-500\">\r\n-                  {plan === \"revive\" ? \"Revive\" : \"Base\"} plan ${basePlanPrice}\r\n-                  {vehicleOption.adjustment ? ` + ${vehicleOption.label} add-on $${vehicleOption.adjustment}` : \"\"}\r\n-                </div>\r\n-              )}\r\n+       \n\\ No newline at end of file\n"
                },
                {
                    "date": 1761333221273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,222 @@\n+import { useEffect, useMemo, useState } from \"react\";\r\n+import dynamic from \"next/dynamic\";\r\n+import { useRouter } from \"next/router\";\r\n+import Navigation from \"@/components/Navigation\";\r\n+import Footer from \"@/components/Footer\";\r\n+import { SERVICES, getServiceById } from \"@/data/services\";\r\n+\r\n+const Booking = dynamic(() => import(\"@/components/Booking\"), { ssr: false });\r\n+\r\n+const VEHICLE_OPTIONS = [\r\n+  { id: \"sedan\", label: \"Sedan\", adjustment: 0 },\r\n+  { id: \"suv\", label: \"SUV\", adjustment: 20 },\r\n+  { id: \"truck\", label: \"Truck\", adjustment: 40 },\r\n+];\r\n+\r\n+export default function BookPage() {\r\n+  const router = useRouter();\r\n+  const { service: serviceId } = router.query;\r\n+  const selectedService = useMemo(() => {\r\n+    if (typeof serviceId !== \"string\") return null;\r\n+    return getServiceById(serviceId) || null;\r\n+  }, [serviceId]);\r\n+\r\n+  const [showBooking, setShowBooking] = useState(false);\r\n+  const [plan, setPlan] = useState(\"base\");\r\n+  const [vehicleType, setVehicleType] = useState(VEHICLE_OPTIONS[0].id);\r\n+\r\n+  const planFeatures = useMemo(() => {\r\n+    if (!selectedService?.features) return [];\r\n+    const planKey = plan === \"revive\" ? \"revive\" : \"base\";\r\n+    return selectedService.features\r\n+      .filter((feature) => feature[planKey] === \"✅\")\r\n+      .map((feature) => ({ text: feature.text, status: feature[planKey] }));\r\n+  }, [selectedService, plan]);\r\n+\r\n+  const basePlanPrice = useMemo(() => {\r\n+    if (!selectedService) return null;\r\n+    if (plan === \"revive\" && typeof selectedService.revivePrice === \"number\") {\r\n+      return selectedService.revivePrice;\r\n+    }\r\n+    if (plan === \"base\" && typeof selectedService.basePrice === \"number\") {\r\n+      return selectedService.basePrice;\r\n+    }\r\n+    return null;\r\n+  }, [plan, selectedService]);\r\n+\r\n+  const vehicleOption = useMemo(\r\n+    () => VEHICLE_OPTIONS.find((option) => option.id === vehicleType) ?? VEHICLE_OPTIONS[0],\r\n+    [vehicleType]\r\n+  );\r\n+\r\n+  const totalPrice = useMemo(() => {\r\n+    if (typeof basePlanPrice !== \"number\") return null;\r\n+    return basePlanPrice + vehicleOption.adjustment;\r\n+  }, [basePlanPrice, vehicleOption.adjustment]);\r\n+\r\n+  useEffect(() => {\r\n+    setPlan(\"base\");\r\n+    setVehicleType(VEHICLE_OPTIONS[0].id);\r\n+  }, [selectedService?.id]);\r\n+\r\n+  useEffect(() => {\r\n+    if (!router.isReady) return;\r\n+    window.scrollTo({ top: 0, behavior: \"auto\" });\r\n+  }, [router.isReady]);\r\n+\r\n+  useEffect(() => {\r\n+    document.body.style.overflow = showBooking ? \"hidden\" : \"auto\";\r\n+    return () => {\r\n+      document.body.style.overflow = \"auto\";\r\n+    };\r\n+  }, [showBooking]);\r\n+\r\n+  const handleOpenBooking = () => {\r\n+    if (selectedService && !selectedService.comingSoon) {\r\n+      setShowBooking(true);\r\n+    }\r\n+  };\r\n+\r\n+  const handleCloseBooking = () => {\r\n+    setShowBooking(false);\r\n+  };\r\n+\r\n+  const fallbackService = SERVICES.find((svc) => !svc.comingSoon);\r\n+\r\n+  return (\r\n+    <main className=\"min-h-screen bg-blue-50 text-blue-900\">\r\n+      <Navigation />\r\n+      <section className=\"max-w-4xl mx-auto px-4 py-20\">\r\n+        {selectedService ? (\r\n+          <div className=\"bg-white border border-blue-100 rounded-3xl shadow-xl overflow-hidden\">\r\n+            <div className=\"px-6 sm:px-10 py-10 space-y-6\">\r\n+              <span className=\"inline-flex px-4 py-1 rounded-full bg-blue-100 text-blue-700 text-sm font-semibold uppercase tracking-widest\">\r\n+                {selectedService.comingSoon ? \"Coming Soon\" : \"Book Now\"}\r\n+              </span>\r\n+              <h1 className=\"text-3xl sm:text-4xl font-bold\" style={{ color: \"#000\" }}>\r\n+                {selectedService.title}\r\n+              </h1>\r\n+              <div className=\"relative grid grid-cols-2 bg-blue-50 border border-blue-200 rounded-full overflow-hidden w-full sm:w-auto\">\r\n+                <div\r\n+                  className=\"absolute inset-y-0 w-1/2 rounded-full bg-white shadow transition-transform duration-300 ease-out\"\r\n+                  style={{ transform: plan === \"revive\" ? \"translateX(100%)\" : \"translateX(0%)\" }}\r\n+                  aria-hidden=\"true\"\r\n+                />\r\n+                <button\r\n+                  type=\"button\"\r\n+                  onClick={() => setPlan(\"base\")}\r\n+                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n+                    plan === \"base\" ? \"text-blue-700\" : \"text-blue-500 hover:text-blue-600\"\r\n+                  }`}\r\n+                >\r\n+                  Base\r\n+                </button>\r\n+                <button\r\n+                  type=\"button\"\r\n+                  onClick={() => {\r\n+                    if (selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\") return;\r\n+                    setPlan(\"revive\");\r\n+                  }}\r\n+                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n+                    plan === \"revive\" ? \"text-blue-700\" : \"text-blue-500 hover:text-blue-600\"\r\n+                  } ${\r\n+                    selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"\r\n+                      ? \"opacity-50 cursor-not-allowed\"\r\n+                      : \"\"\r\n+                  }`}\r\n+                  disabled={selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"}\r\n+                >\r\n+                  Revive\r\n+                </button>\r\n+              </div>\r\n+              <div className=\"flex flex-wrap gap-2 bg-blue-50 border border-blue-200 rounded-2xl p-1 w-full sm:w-auto\">\r\n+                {VEHICLE_OPTIONS.map((option) => {\r\n+                  const isSelected = vehicleType === option.id;\r\n+                  return (\r\n+                    <button\r\n+                      key={option.id}\r\n+                      type=\"button\"\r\n+                      onClick={() => setVehicleType(option.id)}\r\n+                      className={`px-4 py-2 text-sm font-semibold rounded-full transition-colors ${\r\n+                        isSelected\r\n+                          ? \"bg-white text-blue-700 shadow\"\r\n+                          : \"text-blue-500 hover:text-blue-600\"\r\n+                      }`}\r\n+                    >\r\n+                      {option.label}\r\n+                      {option.adjustment > 0 ? ` +$${option.adjustment}` : \"\"}\r\n+                    </button>\r\n+                  );\r\n+                })}\r\n+              </div>\r\n+              <div className=\"space-y-1\">\r\n+                <div className=\"text-xl font-semibold text-blue-700\">\r\n+                  {totalPrice !== null ? `Total: $${totalPrice}` : \"Contact us\"}\r\n+                </div>\r\n+                {totalPrice !== null && (\r\n+                  <div className=\"text-sm text-blue-500\">\r\n+                    {plan === \"revive\" ? \"Revive\" : \"Base\"} plan ${basePlanPrice}\r\n+                    {vehicleOption.adjustment ? ` + ${vehicleOption.label} add-on $${vehicleOption.adjustment}` : \" + $0\"}\r\n+                  </div>\r\n+                )}\r\n+              </div>\r\n+              {planFeatures.length ? (\r\n+                <ul className=\"grid sm:grid-cols-2 gap-3 text-blue-800 text-sm sm:text-base\">\r\n+                  {planFeatures.map((feature) => (\r\n+                    <li key={feature.text} className=\"flex items-start gap-3\">\r\n+                      <span className=\"text-lg leading-none mt-[2px]\">{feature.status}</span>\r\n+                      <span>{feature.text}</span>\r\n+                    </li>\r\n+                  ))}\r\n+                </ul>\r\n+              ) : null}\r\n+              {!selectedService.comingSoon && (\r\n+                <div className=\"flex flex-col sm:flex-row gap-3 pt-4\">\r\n+                  <button\r\n+                    type=\"button\"\r\n+                    onClick={handleOpenBooking}\r\n+                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+                  >\r\n+                    Begin Booking\r\n+                  </button>\r\n+                  <a\r\n+                    href=\"tel:+17828275010\"\r\n+                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg border border-blue-300 text-blue-700 hover:bg-blue-100 font-semibold text-center\"\r\n+                  >\r\n+                    Call +1 (782) 827-5010\r\n+                  </a>\r\n+                </div>\r\n+              )}\r\n+              {selectedService.comingSoon && (\r\n+                <div className=\"rounded-xl border border-dashed border-blue-200 bg-blue-50/70 px-4 py-6 text-blue-700 text-sm\">\r\n+                  Subscriptions are almost here. We’ll share flexible plans that keep your vehicle spotless on your schedule.\r\n+                </div>\r\n+              )}\r\n+            </div>\r\n+          </div>\r\n+        ) : (\r\n+          <div className=\"bg-white border border-blue-100 rounded-3xl shadow-lg p-10 text-center space-y-6\">\r\n+            <h1 className=\"text-3xl font-bold\" style={{ color: \"#000\" }}>Select a service to get started</h1>\r\n+            <p className=\"text-blue-700\">\r\n+              We couldn’t find the package you were looking for. Choose one of our detailing options to continue.\r\n+            </p>\r\n+            {fallbackService && (\r\n+              <button\r\n+                type=\"button\"\r\n+                onClick={() => router.push({ pathname: \"/book\", query: { service: fallbackService.id } })}\r\n+                className=\"px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+              >\r\n+                View {fallbackService.title}\r\n+              </button>\r\n+            )}\r\n+          </div>\r\n+        )}\r\n+      </section>\r\n+      <Footer />\r\n+      {showBooking && selectedService && !selectedService.comingSoon && (\r\n+        <Booking service={selectedService} onClose={handleCloseBooking} />\r\n+      )}\r\n+    </main>\r\n+  );\r\n+}\r\n+       \n\\ No newline at end of file\n"
                },
                {
                    "date": 1761333230544,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,222 @@\n+import { useEffect, useMemo, useState } from \"react\";\r\n+import dynamic from \"next/dynamic\";\r\n+import { useRouter } from \"next/router\";\r\n+import Navigation from \"@/components/Navigation\";\r\n+import Footer from \"@/components/Footer\";\r\n+import { SERVICES, getServiceById } from \"@/data/services\";\r\n+\r\n+const Booking = dynamic(() => import(\"@/components/Booking\"), { ssr: false });\r\n+\r\n+const VEHICLE_OPTIONS = [\r\n+  { id: \"sedan\", label: \"Sedan\", adjustment: 0 },\r\n+  { id: \"suv\", label: \"SUV\", adjustment: 20 },\r\n+  { id: \"truck\", label: \"Truck\", adjustment: 40 },\r\n+];\r\n+\r\n+export default function BookPage() {\r\n+  const router = useRouter();\r\n+  const { service: serviceId } = router.query;\r\n+  const selectedService = useMemo(() => {\r\n+    if (typeof serviceId !== \"string\") return null;\r\n+    return getServiceById(serviceId) || null;\r\n+  }, [serviceId]);\r\n+\r\n+  const [showBooking, setShowBooking] = useState(false);\r\n+  const [plan, setPlan] = useState(\"base\");\r\n+  const [vehicleType, setVehicleType] = useState(VEHICLE_OPTIONS[0].id);\r\n+\r\n+  const planFeatures = useMemo(() => {\r\n+    if (!selectedService?.features) return [];\r\n+    const planKey = plan === \"revive\" ? \"revive\" : \"base\";\r\n+    return selectedService.features\r\n+      .filter((feature) => feature[planKey] === \"✅\")\r\n+      .map((feature) => ({ text: feature.text, status: feature[planKey] }));\r\n+  }, [selectedService, plan]);\r\n+\r\n+  const basePlanPrice = useMemo(() => {\r\n+    if (!selectedService) return null;\r\n+    if (plan === \"revive\" && typeof selectedService.revivePrice === \"number\") {\r\n+      return selectedService.revivePrice;\r\n+    }\r\n+    if (plan === \"base\" && typeof selectedService.basePrice === \"number\") {\r\n+      return selectedService.basePrice;\r\n+    }\r\n+    return null;\r\n+  }, [plan, selectedService]);\r\n+\r\n+  const vehicleOption = useMemo(\r\n+    () => VEHICLE_OPTIONS.find((option) => option.id === vehicleType) ?? VEHICLE_OPTIONS[0],\r\n+    [vehicleType]\r\n+  );\r\n+\r\n+  const totalPrice = useMemo(() => {\r\n+    if (typeof basePlanPrice !== \"number\") return null;\r\n+    return basePlanPrice + vehicleOption.adjustment;\r\n+  }, [basePlanPrice, vehicleOption.adjustment]);\r\n+\r\n+  useEffect(() => {\r\n+    setPlan(\"base\");\r\n+    setVehicleType(VEHICLE_OPTIONS[0].id);\r\n+  }, [selectedService?.id]);\r\n+\r\n+  useEffect(() => {\r\n+    if (!router.isReady) return;\r\n+    window.scrollTo({ top: 0, behavior: \"auto\" });\r\n+  }, [router.isReady]);\r\n+\r\n+  useEffect(() => {\r\n+    document.body.style.overflow = showBooking ? \"hidden\" : \"auto\";\r\n+    return () => {\r\n+      document.body.style.overflow = \"auto\";\r\n+    };\r\n+  }, [showBooking]);\r\n+\r\n+  const handleOpenBooking = () => {\r\n+    if (selectedService && !selectedService.comingSoon) {\r\n+      setShowBooking(true);\r\n+    }\r\n+  };\r\n+\r\n+  const handleCloseBooking = () => {\r\n+    setShowBooking(false);\r\n+  };\r\n+\r\n+  const fallbackService = SERVICES.find((svc) => !svc.comingSoon);\r\n+\r\n+  return (\r\n+    <main className=\"min-h-screen bg-blue-50 text-blue-900\">\r\n+      <Navigation />\r\n+      <section className=\"max-w-4xl mx-auto px-4 py-20\">\r\n+        {selectedService ? (\r\n+          <div className=\"bg-white border border-blue-100 rounded-3xl shadow-xl overflow-hidden\">\r\n+            <div className=\"px-6 sm:px-10 py-10 space-y-6\">\r\n+              <span className=\"inline-flex px-4 py-1 rounded-full bg-blue-100 text-blue-700 text-sm font-semibold uppercase tracking-widest\">\r\n+                {selectedService.comingSoon ? \"Coming Soon\" : \"Book Now\"}\r\n+              </span>\r\n+              <h1 className=\"text-3xl sm:text-4xl font-bold\" style={{ color: \"#000\" }}>\r\n+                {selectedService.title}\r\n+              </h1>\r\n+              <div className=\"relative grid grid-cols-2 bg-blue-50 border border-blue-200 rounded-full overflow-hidden w-full sm:w-auto\">\r\n+                <div\r\n+                  className=\"absolute inset-y-0 w-1/2 rounded-full bg-white shadow transition-transform duration-300 ease-out\"\r\n+                  style={{ transform: plan === \"revive\" ? \"translateX(100%)\" : \"translateX(0%)\" }}\r\n+                  aria-hidden=\"true\"\r\n+                />\r\n+                <button\r\n+                  type=\"button\"\r\n+                  onClick={() => setPlan(\"base\")}\r\n+                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n+                    plan === \"base\" ? \"text-blue-700\" : \"text-blue-500 hover:text-blue-600\"\r\n+                  }`}\r\n+                >\r\n+                  Base\r\n+                </button>\r\n+                <button\r\n+                  type=\"button\"\r\n+                  onClick={() => {\r\n+                    if (selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\") return;\r\n+                    setPlan(\"revive\");\r\n+                  }}\r\n+                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n+                    plan === \"revive\" ? \"text-blue-700\" : \"text-blue-500 hover:text-blue-600\"\r\n+                  } ${\r\n+                    selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"\r\n+                      ? \"opacity-50 cursor-not-allowed\"\r\n+                      : \"\"\r\n+                  }`}\r\n+                  disabled={selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"}\r\n+                >\r\n+                  Revive\r\n+                </button>\r\n+              </div>\r\n+              <div className=\"flex flex-wrap gap-2 bg-blue-50 border border-blue-200 rounded-2xl p-1 w-full sm:w-auto\">\r\n+                {VEHICLE_OPTIONS.map((option) => {\r\n+                  const isSelected = vehicleType === option.id;\r\n+                  return (\r\n+                    <button\r\n+                      key={option.id}\r\n+                      type=\"button\"\r\n+                      onClick={() => setVehicleType(option.id)}\r\n+                      className={`px-4 py-2 text-sm font-semibold rounded-full transition-colors ${\r\n+                        isSelected\r\n+                          ? \"bg-white text-blue-700 shadow\"\r\n+                          : \"text-blue-500 hover:text-blue-600\"\r\n+                      }`}\r\n+                    >\r\n+                      {option.label}\r\n+                      {option.adjustment > 0 ? ` +$${option.adjustment}` : \"\"}\r\n+                    </button>\r\n+                  );\r\n+                })}\r\n+              </div>\r\n+              <div className=\"space-y-1\">\r\n+                <div className=\"text-xl font-semibold text-blue-700\">\r\n+                  {totalPrice !== null ? `Total: $${totalPrice}` : \"Contact us\"}\r\n+                </div>\r\n+                {totalPrice !== null && (\r\n+                  <div className=\"text-sm text-blue-500\">\r\n+                    {plan === \"revive\" ? \"Revive\" : \"Base\"} plan ${basePlanPrice}\r\n+                    {vehicleOption.adjustment ? ` + ${vehicleOption.label} add-on $${vehicleOption.adjustment}` : \" + $0\"}\r\n+                  </div>\r\n+                )}\r\n+              </div>\r\n+              {planFeatures.length ? (\r\n+                <ul className=\"grid sm:grid-cols-2 gap-3 text-blue-800 text-sm sm:text-base\">\r\n+                  {planFeatures.map((feature) => (\r\n+                    <li key={feature.text} className=\"flex items-start gap-3\">\r\n+                      <span className=\"text-lg leading-none mt-[2px]\">{feature.status}</span>\r\n+                      <span>{feature.text}</span>\r\n+                    </li>\r\n+                  ))}\r\n+                </ul>\r\n+              ) : null}\r\n+              {!selectedService.comingSoon && (\r\n+                <div className=\"flex flex-col sm:flex-row gap-3 pt-4\">\r\n+                  <button\r\n+                    type=\"button\"\r\n+                    onClick={handleOpenBooking}\r\n+                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+                  >\r\n+                    Begin Booking\r\n+                  </button>\r\n+                  <a\r\n+                    href=\"tel:+17828275010\"\r\n+                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg border border-blue-300 text-blue-700 hover:bg-blue-100 font-semibold text-center\"\r\n+                  >\r\n+                    Call +1 (782) 827-5010\r\n+                  </a>\r\n+                </div>\r\n+              )}\r\n+              {selectedService.comingSoon && (\r\n+                <div className=\"rounded-xl border border-dashed border-blue-200 bg-blue-50/70 px-4 py-6 text-blue-700 text-sm\">\r\n+                  Subscriptions are almost here. We’ll share flexible plans that keep your vehicle spotless on your schedule.\r\n+                </div>\r\n+              )}\r\n+            </div>\r\n+          </div>\r\n+        ) : (\r\n+          <div className=\"bg-white border border-blue-100 rounded-3xl shadow-lg p-10 text-center space-y-6\">\r\n+            <h1 className=\"text-3xl font-bold\" style={{ color: \"#000\" }}>Select a service to get started</h1>\r\n+            <p className=\"text-blue-700\">\r\n+              We couldn’t find the package you were looking for. Choose one of our detailing options to continue.\r\n+            </p>\r\n+            {fallbackService && (\r\n+              <button\r\n+                type=\"button\"\r\n+                onClick={() => router.push({ pathname: \"/book\", query: { service: fallbackService.id } })}\r\n+                className=\"px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+              >\r\n+                View {fallbackService.title}\r\n+              </button>\r\n+            )}\r\n+          </div>\r\n+        )}\r\n+      </section>\r\n+      <Footer />\r\n+      {showBooking && selectedService && !selectedService.comingSoon && (\r\n+        <Booking service={selectedService} onClose={handleCloseBooking} />\r\n+      )}\r\n+    </main>\r\n+  );\r\n+}\r\n+       \n\\ No newline at end of file\n"
                },
                {
                    "date": 1761333483907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,234 +26,24 @@\n   const [vehicleType, setVehicleType] = useState(VEHICLE_OPTIONS[0].id);\r\n \r\n   const planFeatures = useMemo(() => {\r\n     if (!selectedService?.features) return [];\r\n-    const planKey = plan === \"revive\" ? \"revive\" : \"base\";\r\n-    return selectedService.features\r\n-      .filter((feature) => feature[planKey] === \"✅\")\r\n-      .map((feature) => ({ text: feature.text, status: feature[planKey] }));\r\n-  }, [selectedService, plan]);\r\n \r\n-  const basePlanPrice = useMemo(() => {\r\n-    if (!selectedService) return null;\r\n-    if (plan === \"revive\" && typeof selectedService.revivePrice === \"number\") {\r\n-      return selectedService.revivePrice;\r\n+    if (plan === \"revive\") {\r\n+      return selectedService.features\r\n+        .filter((feature) => feature.revive === \"✅\")\r\n+        .map((feature) => ({ text: feature.text, status: \"✅\" }));\r\n     }\r\n-    if (plan === \"base\" && typeof selectedService.basePrice === \"number\") {\r\n-      return selectedService.basePrice;\r\n-    }\r\n-    return null;\r\n-  }, [plan, selectedService]);\r\n \r\n-  const vehicleOption = useMemo(\r\n-    () => VEHICLE_OPTIONS.find((option) => option.id === vehicleType) ?? VEHICLE_OPTIONS[0],\r\n-    [vehicleType]\r\n-  );\r\n+    const baseIncluded = selectedService.features\r\n+      .filter((feature) => feature.base === \"✅\")\r\n+      .map((feature) => ({ text: feature.text, status: \"✅\" }));\r\n \r\n-  const totalPrice = useMemo(() => {\r\n-    if (typeof basePlanPrice !== \"number\") return null;\r\n-    return basePlanPrice + vehicleOption.adjustment;\r\n-  }, [basePlanPrice, vehicleOption.adjustment]);\r\n+    const reviveExtras = selectedService.features\r\n+      .filter((feature) => feature.base !== \"✅\" && feature.revive === \"✅\")\r\n+      .map((feature) => ({ text: feature.text, status: \"X\" }));\r\n \r\n-  useEffect(() => {\r\n-    setPlan(\"base\");\r\n-    setVehicleType(VEHICLE_OPTIONS[0].id);\r\n-  }, [selectedService?.id]);\r\n-\r\n-  useEffect(() => {\r\n-    if (!router.isReady) return;\r\n-    window.scrollTo({ top: 0, behavior: \"auto\" });\r\n-  }, [router.isReady]);\r\n-\r\n-  useEffect(() => {\r\n-    document.body.style.overflow = showBooking ? \"hidden\" : \"auto\";\r\n-    return () => {\r\n-      document.body.style.overflow = \"auto\";\r\n-    };\r\n-  }, [showBooking]);\r\n-\r\n-  const handleOpenBooking = () => {\r\n-    if (selectedService && !selectedService.comingSoon) {\r\n-      setShowBooking(true);\r\n-    }\r\n-  };\r\n-\r\n-  const handleCloseBooking = () => {\r\n-    setShowBooking(false);\r\n-  };\r\n-\r\n-  const fallbackService = SERVICES.find((svc) => !svc.comingSoon);\r\n-\r\n-  return (\r\n-    <main className=\"min-h-screen bg-blue-50 text-blue-900\">\r\n-      <Navigation />\r\n-      <section className=\"max-w-4xl mx-auto px-4 py-20\">\r\n-        {selectedService ? (\r\n-          <div className=\"bg-white border border-blue-100 rounded-3xl shadow-xl overflow-hidden\">\r\n-            <div className=\"px-6 sm:px-10 py-10 space-y-6\">\r\n-              <span className=\"inline-flex px-4 py-1 rounded-full bg-blue-100 text-blue-700 text-sm font-semibold uppercase tracking-widest\">\r\n-                {selectedService.comingSoon ? \"Coming Soon\" : \"Book Now\"}\r\n-              </span>\r\n-              <h1 className=\"text-3xl sm:text-4xl font-bold\" style={{ color: \"#000\" }}>\r\n-                {selectedService.title}\r\n-              </h1>\r\n-              <div className=\"relative grid grid-cols-2 bg-blue-50 border border-blue-200 rounded-full overflow-hidden w-full sm:w-auto\">\r\n-                <div\r\n-                  className=\"absolute inset-y-0 w-1/2 rounded-full bg-white shadow transition-transform duration-300 ease-out\"\r\n-                  style={{ transform: plan === \"revive\" ? \"translateX(100%)\" : \"translateX(0%)\" }}\r\n-                  aria-hidden=\"true\"\r\n-                />\r\n-                <button\r\n-                  type=\"button\"\r\n-                  onClick={() => setPlan(\"base\")}\r\n-                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n-                    plan === \"base\" ? \"text-blue-700\" : \"text-blue-500 hover:text-blue-600\"\r\n-                  }`}\r\n-                >\r\n-                  Base\r\n-                </button>\r\n-                <button\r\n-                  type=\"button\"\r\n-                  onClick={() => {\r\n-                    if (selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\") return;\r\n-                    setPlan(\"revive\");\r\n-                  }}\r\n-                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n-                    plan === \"revive\" ? \"text-blue-700\" : \"text-blue-500 hover:text-blue-600\"\r\n-                  } ${\r\n-                    selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"\r\n-                      ? \"opacity-50 cursor-not-allowed\"\r\n-                      : \"\"\r\n-                  }`}\r\n-                  disabled={selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"}\r\n-                >\r\n-                  Revive\r\n-                </button>\r\n-              </div>\r\n-              <div className=\"flex flex-wrap gap-2 bg-blue-50 border border-blue-200 rounded-2xl p-1 w-full sm:w-auto\">\r\n-                {VEHICLE_OPTIONS.map((option) => {\r\n-                  const isSelected = vehicleType === option.id;\r\n-                  return (\r\n-                    <button\r\n-                      key={option.id}\r\n-                      type=\"button\"\r\n-                      onClick={() => setVehicleType(option.id)}\r\n-                      className={`px-4 py-2 text-sm font-semibold rounded-full transition-colors ${\r\n-                        isSelected\r\n-                          ? \"bg-white text-blue-700 shadow\"\r\n-                          : \"text-blue-500 hover:text-blue-600\"\r\n-                      }`}\r\n-                    >\r\n-                      {option.label}\r\n-                      {option.adjustment > 0 ? ` +$${option.adjustment}` : \"\"}\r\n-                    </button>\r\n-                  );\r\n-                })}\r\n-              </div>\r\n-              <div className=\"space-y-1\">\r\n-                <div className=\"text-xl font-semibold text-blue-700\">\r\n-                  {totalPrice !== null ? `Total: $${totalPrice}` : \"Contact us\"}\r\n-                </div>\r\n-                {totalPrice !== null && (\r\n-                  <div className=\"text-sm text-blue-500\">\r\n-                    {plan === \"revive\" ? \"Revive\" : \"Base\"} plan ${basePlanPrice}\r\n-                    {vehicleOption.adjustment ? ` + ${vehicleOption.label} add-on $${vehicleOption.adjustment}` : \" + $0\"}\r\n-                  </div>\r\n-                )}\r\n-              </div>\r\n-              {planFeatures.length ? (\r\n-                <ul className=\"grid sm:grid-cols-2 gap-3 text-blue-800 text-sm sm:text-base\">\r\n-                  {planFeatures.map((feature) => (\r\n-                    <li key={feature.text} className=\"flex items-start gap-3\">\r\n-                      <span className=\"text-lg leading-none mt-[2px]\">{feature.status}</span>\r\n-                      <span>{feature.text}</span>\r\n-                    </li>\r\n-                  ))}\r\n-                </ul>\r\n-              ) : null}\r\n-              {!selectedService.comingSoon && (\r\n-                <div className=\"flex flex-col sm:flex-row gap-3 pt-4\">\r\n-                  <button\r\n-                    type=\"button\"\r\n-                    onClick={handleOpenBooking}\r\n-                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-                  >\r\n-                    Begin Booking\r\n-                  </button>\r\n-                  <a\r\n-                    href=\"tel:+17828275010\"\r\n-                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg border border-blue-300 text-blue-700 hover:bg-blue-100 font-semibold text-center\"\r\n-                  >\r\n-                    Call +1 (782) 827-5010\r\n-                  </a>\r\n-                </div>\r\n-              )}\r\n-              {selectedService.comingSoon && (\r\n-                <div className=\"rounded-xl border border-dashed border-blue-200 bg-blue-50/70 px-4 py-6 text-blue-700 text-sm\">\r\n-                  Subscriptions are almost here. We’ll share flexible plans that keep your vehicle spotless on your schedule.\r\n-                </div>\r\n-              )}\r\n-            </div>\r\n-          </div>\r\n-        ) : (\r\n-          <div className=\"bg-white border border-blue-100 rounded-3xl shadow-lg p-10 text-center space-y-6\">\r\n-            <h1 className=\"text-3xl font-bold\" style={{ color: \"#000\" }}>Select a service to get started</h1>\r\n-            <p className=\"text-blue-700\">\r\n-              We couldn’t find the package you were looking for. Choose one of our detailing options to continue.\r\n-            </p>\r\n-            {fallbackService && (\r\n-              <button\r\n-                type=\"button\"\r\n-                onClick={() => router.push({ pathname: \"/book\", query: { service: fallbackService.id } })}\r\n-                className=\"px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-              >\r\n-                View {fallbackService.title}\r\n-              </button>\r\n-            )}\r\n-          </div>\r\n-        )}\r\n-      </section>\r\n-      <Footer />\r\n-      {showBooking && selectedService && !selectedService.comingSoon && (\r\n-        <Booking service={selectedService} onClose={handleCloseBooking} />\r\n-      )}\r\n-    </main>\r\n-  );\r\n-}\r\n-       \n-import { useEffect, useMemo, useState } from \"react\";\r\n-import dynamic from \"next/dynamic\";\r\n-import { useRouter } from \"next/router\";\r\n-import Navigation from \"@/components/Navigation\";\r\n-import Footer from \"@/components/Footer\";\r\n-import { SERVICES, getServiceById } from \"@/data/services\";\r\n-\r\n-const Booking = dynamic(() => import(\"@/components/Booking\"), { ssr: false });\r\n-\r\n-const VEHICLE_OPTIONS = [\r\n-  { id: \"sedan\", label: \"Sedan\", adjustment: 0 },\r\n-  { id: \"suv\", label: \"SUV\", adjustment: 20 },\r\n-  { id: \"truck\", label: \"Truck\", adjustment: 40 },\r\n-];\r\n-\r\n-export default function BookPage() {\r\n-  const router = useRouter();\r\n-  const { service: serviceId } = router.query;\r\n-  const selectedService = useMemo(() => {\r\n-    if (typeof serviceId !== \"string\") return null;\r\n-    return getServiceById(serviceId) || null;\r\n-  }, [serviceId]);\r\n-\r\n-  const [showBooking, setShowBooking] = useState(false);\r\n-  const [plan, setPlan] = useState(\"base\");\r\n-  const [vehicleType, setVehicleType] = useState(VEHICLE_OPTIONS[0].id);\r\n-\r\n-  const planFeatures = useMemo(() => {\r\n-    if (!selectedService?.features) return [];\r\n-    const planKey = plan === \"revive\" ? \"revive\" : \"base\";\r\n-    return selectedService.features\r\n-      .filter((feature) => feature[planKey] === \"✅\")\r\n-      .map((feature) => ({ text: feature.text, status: feature[planKey] }));\r\n+    return [...baseIncluded, ...reviveExtras];\r\n   }, [selectedService, plan]);\r\n \r\n   const basePlanPrice = useMemo(() => {\r\n     if (!selectedService) return null;\r\n@@ -350,260 +140,35 @@\n                 >\r\n                   Revive\r\n                 </button>\r\n               </div>\r\n-              <div className=\"flex flex-wrap gap-2 bg-blue-50 border border-blue-200 rounded-2xl p-1 w-full sm:w-auto\">\r\n-                {VEHICLE_OPTIONS.map((option) => {\r\n-                  const isSelected = vehicleType === option.id;\r\n-                  return (\r\n-                    <button\r\n-                      key={option.id}\r\n-                      type=\"button\"\r\n-                      onClick={() => setVehicleType(option.id)}\r\n-                      className={`px-4 py-2 text-sm font-semibold rounded-full transition-colors ${\r\n-                        isSelected\r\n-                          ? \"bg-white text-blue-700 shadow\"\r\n-                          : \"text-blue-500 hover:text-blue-600\"\r\n-                      }`}\r\n-                    >\r\n-                      {option.label}\r\n-                      {option.adjustment > 0 ? ` +$${option.adjustment}` : \"\"}\r\n-                    </button>\r\n-                  );\r\n-                })}\r\n-              </div>\r\n-              <div className=\"space-y-1\">\r\n-                <div className=\"text-xl font-semibold text-blue-700\">\r\n-                  {totalPrice !== null ? `Total: $${totalPrice}` : \"Contact us\"}\r\n+              <div className=\"bg-blue-50 border border-blue-200 rounded-2xl p-1\">\r\n+                <div className=\"grid grid-cols-3 gap-2\">\r\n+                  {VEHICLE_OPTIONS.map((option, index) => {\r\n+                    const isSelected = vehicleType === option.id;\r\n+                    const alignment = index === 0 ? \"justify-start\" : index === 1 ? \"justify-center\" : \"justify-end\";\r\n+                    return (\r\n+                      <div key={option.id} className={`flex ${alignment}`}>\r\n+                        <button\r\n+                          type=\"button\"\r\n+                          onClick={() => setVehicleType(option.id)}\r\n+                          className={`px-4 py-2 text-sm font-semibold rounded-full transition-colors ${\r\n+                            isSelected\r\n+                              ? \"bg-white text-blue-700 shadow\"\r\n+                              : \"text-blue-500 hover:text-blue-600\"\r\n+                          }`}\r\n+                        >\r\n+                          {option.label}\r\n+                        </button>\r\n+                      </div>\r\n+                    );\r\n+                  })}\r\n                 </div>\r\n-                {totalPrice !== null && (\r\n-                  <div className=\"text-sm text-blue-500\">\r\n-                    {plan === \"revive\" ? \"Revive\" : \"Base\"} plan ${basePlanPrice}\r\n-                    {vehicleOption.adjustment ? ` + ${vehicleOption.label} add-on $${vehicleOption.adjustment}` : \" + $0\"}\r\n-                  </div>\r\n-                )}\r\n               </div>\r\n-              {planFeatures.length ? (\r\n-                <ul className=\"grid sm:grid-cols-2 gap-3 text-blue-800 text-sm sm:text-base\">\r\n-                  {planFeatures.map((feature) => (\r\n-                    <li key={feature.text} className=\"flex items-start gap-3\">\r\n-                      <span className=\"text-lg leading-none mt-[2px]\">{feature.status}</span>\r\n-                      <span>{feature.text}</span>\r\n-                    </li>\r\n-                  ))}\r\n-                </ul>\r\n-              ) : null}\r\n-              {!selectedService.comingSoon && (\r\n-                <div className=\"flex flex-col sm:flex-row gap-3 pt-4\">\r\n-                  <button\r\n-                    type=\"button\"\r\n-                    onClick={handleOpenBooking}\r\n-                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-                  >\r\n-                    Begin Booking\r\n-                  </button>\r\n-                  <a\r\n-                    href=\"tel:+17828275010\"\r\n-                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg border border-blue-300 text-blue-700 hover:bg-blue-100 font-semibold text-center\"\r\n-                  >\r\n-                    Call +1 (782) 827-5010\r\n-                  </a>\r\n-                </div>\r\n-              )}\r\n-              {selectedService.comingSoon && (\r\n-                <div className=\"rounded-xl border border-dashed border-blue-200 bg-blue-50/70 px-4 py-6 text-blue-700 text-sm\">\r\n-                  Subscriptions are almost here. We’ll share flexible plans that keep your vehicle spotless on your schedule.\r\n-                </div>\r\n-              )}\r\n-            </div>\r\n-          </div>\r\n-        ) : (\r\n-          <div className=\"bg-white border border-blue-100 rounded-3xl shadow-lg p-10 text-center space-y-6\">\r\n-            <h1 className=\"text-3xl font-bold\" style={{ color: \"#000\" }}>Select a service to get started</h1>\r\n-            <p className=\"text-blue-700\">\r\n-              We couldn’t find the package you were looking for. Choose one of our detailing options to continue.\r\n-            </p>\r\n-            {fallbackService && (\r\n-              <button\r\n-                type=\"button\"\r\n-                onClick={() => router.push({ pathname: \"/book\", query: { service: fallbackService.id } })}\r\n-                className=\"px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-              >\r\n-                View {fallbackService.title}\r\n-              </button>\r\n-            )}\r\n-          </div>\r\n-        )}\r\n-      </section>\r\n-      <Footer />\r\n-      {showBooking && selectedService && !selectedService.comingSoon && (\r\n-        <Booking service={selectedService} onClose={handleCloseBooking} />\r\n-      )}\r\n-    </main>\r\n-  );\r\n-}\r\n-       \n-import { useEffect, useMemo, useState } from \"react\";\r\n-import dynamic from \"next/dynamic\";\r\n-import { useRouter } from \"next/router\";\r\n-import Navigation from \"@/components/Navigation\";\r\n-import Footer from \"@/components/Footer\";\r\n-import { SERVICES, getServiceById } from \"@/data/services\";\r\n-\r\n-const Booking = dynamic(() => import(\"@/components/Booking\"), { ssr: false });\r\n-\r\n-const VEHICLE_OPTIONS = [\r\n-  { id: \"sedan\", label: \"Sedan\", adjustment: 0 },\r\n-  { id: \"suv\", label: \"SUV\", adjustment: 20 },\r\n-  { id: \"truck\", label: \"Truck\", adjustment: 40 },\r\n-];\r\n-\r\n-export default function BookPage() {\r\n-  const router = useRouter();\r\n-  const { service: serviceId } = router.query;\r\n-  const selectedService = useMemo(() => {\r\n-    if (typeof serviceId !== \"string\") return null;\r\n-    return getServiceById(serviceId) || null;\r\n-  }, [serviceId]);\r\n-\r\n-  const [showBooking, setShowBooking] = useState(false);\r\n-  const [plan, setPlan] = useState(\"base\");\r\n-  const [vehicleType, setVehicleType] = useState(VEHICLE_OPTIONS[0].id);\r\n-\r\n-  const planFeatures = useMemo(() => {\r\n-    if (!selectedService?.features) return [];\r\n-    const planKey = plan === \"revive\" ? \"revive\" : \"base\";\r\n-    return selectedService.features\r\n-      .filter((feature) => feature[planKey] === \"✅\")\r\n-      .map((feature) => ({ text: feature.text, status: feature[planKey] }));\r\n-  }, [selectedService, plan]);\r\n-\r\n-  const basePlanPrice = useMemo(() => {\r\n-    if (!selectedService) return null;\r\n-    if (plan === \"revive\" && typeof selectedService.revivePrice === \"number\") {\r\n-      return selectedService.revivePrice;\r\n-    }\r\n-    if (plan === \"base\" && typeof selectedService.basePrice === \"number\") {\r\n-      return selectedService.basePrice;\r\n-    }\r\n-    return null;\r\n-  }, [plan, selectedService]);\r\n-\r\n-  const vehicleOption = useMemo(\r\n-    () => VEHICLE_OPTIONS.find((option) => option.id === vehicleType) ?? VEHICLE_OPTIONS[0],\r\n-    [vehicleType]\r\n-  );\r\n-\r\n-  const totalPrice = useMemo(() => {\r\n-    if (typeof basePlanPrice !== \"number\") return null;\r\n-    return basePlanPrice + vehicleOption.adjustment;\r\n-  }, [basePlanPrice, vehicleOption.adjustment]);\r\n-\r\n-  useEffect(() => {\r\n-    setPlan(\"base\");\r\n-    setVehicleType(VEHICLE_OPTIONS[0].id);\r\n-  }, [selectedService?.id]);\r\n-\r\n-  useEffect(() => {\r\n-    if (!router.isReady) return;\r\n-    window.scrollTo({ top: 0, behavior: \"auto\" });\r\n-  }, [router.isReady]);\r\n-\r\n-  useEffect(() => {\r\n-    document.body.style.overflow = showBooking ? \"hidden\" : \"auto\";\r\n-    return () => {\r\n-      document.body.style.overflow = \"auto\";\r\n-    };\r\n-  }, [showBooking]);\r\n-\r\n-  const handleOpenBooking = () => {\r\n-    if (selectedService && !selectedService.comingSoon) {\r\n-      setShowBooking(true);\r\n-    }\r\n-  };\r\n-\r\n-  const handleCloseBooking = () => {\r\n-    setShowBooking(false);\r\n-  };\r\n-\r\n-  const fallbackService = SERVICES.find((svc) => !svc.comingSoon);\r\n-\r\n-  return (\r\n-    <main className=\"min-h-screen bg-blue-50 text-blue-900\">\r\n-      <Navigation />\r\n-      <section className=\"max-w-4xl mx-auto px-4 py-20\">\r\n-        {selectedService ? (\r\n-          <div className=\"bg-white border border-blue-100 rounded-3xl shadow-xl overflow-hidden\">\r\n-            <div className=\"px-6 sm:px-10 py-10 space-y-6\">\r\n-              <span className=\"inline-flex px-4 py-1 rounded-full bg-blue-100 text-blue-700 text-sm font-semibold uppercase tracking-widest\">\r\n-                {selectedService.comingSoon ? \"Coming Soon\" : \"Book Now\"}\r\n-              </span>\r\n-              <h1 className=\"text-3xl sm:text-4xl font-bold\" style={{ color: \"#000\" }}>\r\n-                {selectedService.title}\r\n-              </h1>\r\n-              <div className=\"relative grid grid-cols-2 bg-blue-50 border border-blue-200 rounded-full overflow-hidden w-full sm:w-auto\">\r\n-                <div\r\n-                  className=\"absolute inset-y-0 w-1/2 rounded-full bg-white shadow transition-transform duration-300 ease-out\"\r\n-                  style={{ transform: plan === \"revive\" ? \"translateX(100%)\" : \"translateX(0%)\" }}\r\n-                  aria-hidden=\"true\"\r\n-                />\r\n-                <button\r\n-                  type=\"button\"\r\n-                  onClick={() => setPlan(\"base\")}\r\n-                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n-                    plan === \"base\" ? \"text-blue-700\" : \"text-blue-500 hover:text-blue-600\"\r\n-                  }`}\r\n-                >\r\n-                  Base\r\n-                </button>\r\n-                <button\r\n-                  type=\"button\"\r\n-                  onClick={() => {\r\n-                    if (selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\") return;\r\n-                    setPlan(\"revive\");\r\n-                  }}\r\n-                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n-                    plan === \"revive\" ? \"text-blue-700\" : \"text-blue-500 hover:text-blue-600\"\r\n-                  } ${\r\n-                    selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"\r\n-                      ? \"opacity-50 cursor-not-allowed\"\r\n-                      : \"\"\r\n-                  }`}\r\n-                  disabled={selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"}\r\n-                >\r\n-                  Revive\r\n-                </button>\r\n-              </div>\r\n-              <div className=\"flex flex-wrap gap-2 bg-blue-50 border border-blue-200 rounded-2xl p-1 w-full sm:w-auto\">\r\n-                {VEHICLE_OPTIONS.map((option) => {\r\n-                  const isSelected = vehicleType === option.id;\r\n-                  return (\r\n-                    <button\r\n-                      key={option.id}\r\n-                      type=\"button\"\r\n-                      onClick={() => setVehicleType(option.id)}\r\n-                      className={`px-4 py-2 text-sm font-semibold rounded-full transition-colors ${\r\n-                        isSelected\r\n-                          ? \"bg-white text-blue-700 shadow\"\r\n-                          : \"text-blue-500 hover:text-blue-600\"\r\n-                      }`}\r\n-                    >\r\n-                      {option.label}\r\n-                      {option.adjustment > 0 ? ` +$${option.adjustment}` : \"\"}\r\n-                    </button>\r\n-                  );\r\n-                })}\r\n-              </div>\r\n               <div className=\"space-y-1\">\r\n                 <div className=\"text-xl font-semibold text-blue-700\">\r\n                   {totalPrice !== null ? `Total: $${totalPrice}` : \"Contact us\"}\r\n                 </div>\r\n-                {totalPrice !== null && (\r\n-                  <div className=\"text-sm text-blue-500\">\r\n-                    {plan === \"revive\" ? \"Revive\" : \"Base\"} plan ${basePlanPrice}\r\n-                    {vehicleOption.adjustment ? ` + ${vehicleOption.label} add-on $${vehicleOption.adjustment}` : \" + $0\"}\r\n-                  </div>\r\n-                )}\r\n               </div>\r\n               {planFeatures.length ? (\r\n                 <ul className=\"grid sm:grid-cols-2 gap-3 text-blue-800 text-sm sm:text-base\">\r\n                   {planFeatures.map((feature) => (\r\n"
                },
                {
                    "date": 1761334546452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,227 @@\n+import { useEffect, useMemo, useState } from \"react\";\r\n+import dynamic from \"next/dynamic\";\r\n+import { useRouter } from \"next/router\";\r\n+import Navigation from \"@/components/Navigation\";\r\n+import Footer from \"@/components/Footer\";\r\n+import { SERVICES, getServiceById } from \"@/data/services\";\r\n+\r\n+const Booking = dynamic(() => import(\"@/components/Booking\"), { ssr: false });\r\n+\r\n+const VEHICLE_OPTIONS = [\r\n+  { id: \"sedan\", label: \"Sedan\", adjustment: 0 },\r\n+  { id: \"suv\", label: \"SUV\", adjustment: 20 },\r\n+  { id: \"truck\", label: \"Truck\", adjustment: 40 },\r\n+];\r\n+\r\n+export default function BookPage() {\r\n+  const router = useRouter();\r\n+  const { service: serviceId } = router.query;\r\n+  const selectedService = useMemo(() => {\r\n+    if (typeof serviceId !== \"string\") return null;\r\n+    return getServiceById(serviceId) || null;\r\n+  }, [serviceId]);\r\n+\r\n+  const [showBooking, setShowBooking] = useState(false);\r\n+  const [plan, setPlan] = useState(\"base\");\r\n+  const [vehicleType, setVehicleType] = useState(VEHICLE_OPTIONS[0].id);\r\n+\r\n+  const planFeatures = useMemo(() => {\r\n+    if (!selectedService) return [];\r\n+\r\n+    const baseFeatures = selectedService.baseFeatures ?? [];\r\n+    const reviveFeatures = selectedService.reviveFeatures ?? [];\r\n+\r\n+    if (plan === \"revive\") {\r\n+      return [...baseFeatures, ...reviveFeatures].map((feature) => ({ text: feature, status: \"✅\" }));\r\n+    }\r\n+\r\n+    const baseIncluded = baseFeatures.map((feature) => ({ text: feature, status: \"✅\" }));\r\n+    const reviveExtras = reviveFeatures.map((feature) => ({ text: feature, status: \"❌\" }));\r\n+\r\n+    return [...baseIncluded, ...reviveExtras];\r\n+  }, [selectedService, plan]);\r\n+\r\n+  const basePlanPrice = useMemo(() => {\r\n+    if (!selectedService) return null;\r\n+    if (plan === \"revive\" && typeof selectedService.revivePrice === \"number\") {\r\n+      return selectedService.revivePrice;\r\n+    }\r\n+    if (plan === \"base\" && typeof selectedService.basePrice === \"number\") {\r\n+      return selectedService.basePrice;\r\n+    }\r\n+    return null;\r\n+  }, [plan, selectedService]);\r\n+\r\n+  const vehicleOption = useMemo(\r\n+    () => VEHICLE_OPTIONS.find((option) => option.id === vehicleType) ?? VEHICLE_OPTIONS[0],\r\n+    [vehicleType]\r\n+  );\r\n+\r\n+  const totalPrice = useMemo(() => {\r\n+    if (typeof basePlanPrice !== \"number\") return null;\r\n+    return basePlanPrice + vehicleOption.adjustment;\r\n+  }, [basePlanPrice, vehicleOption.adjustment]);\r\n+\r\n+  useEffect(() => {\r\n+    setPlan(\"base\");\r\n+    setVehicleType(VEHICLE_OPTIONS[0].id);\r\n+  }, [selectedService?.id]);\r\n+\r\n+  useEffect(() => {\r\n+    if (!router.isReady) return;\r\n+    window.scrollTo({ top: 0, behavior: \"auto\" });\r\n+  }, [router.isReady]);\r\n+\r\n+  useEffect(() => {\r\n+    document.body.style.overflow = showBooking ? \"hidden\" : \"auto\";\r\n+    return () => {\r\n+      document.body.style.overflow = \"auto\";\r\n+    };\r\n+  }, [showBooking]);\r\n+\r\n+  const handleOpenBooking = () => {\r\n+    if (selectedService && !selectedService.comingSoon) {\r\n+      setShowBooking(true);\r\n+    }\r\n+  };\r\n+\r\n+  const handleCloseBooking = () => {\r\n+    setShowBooking(false);\r\n+  };\r\n+\r\n+  const fallbackService = SERVICES.find((svc) => !svc.comingSoon);\r\n+\r\n+  return (\r\n+    <main className=\"min-h-screen bg-blue-50 text-blue-900\">\r\n+      <Navigation />\r\n+      <section className=\"max-w-4xl mx-auto px-4 py-20\">\r\n+        {selectedService ? (\r\n+          <div className=\"bg-white border border-blue-100 rounded-3xl shadow-xl overflow-hidden\">\r\n+            <div className=\"px-6 sm:px-10 py-10 space-y-6\">\r\n+              <span className=\"inline-flex px-4 py-1 rounded-full bg-blue-100 text-blue-700 text-sm font-semibold uppercase tracking-widest\">\r\n+                {selectedService.comingSoon ? \"Coming Soon\" : \"Book Now\"}\r\n+              </span>\r\n+              <h1 className=\"text-3xl sm:text-4xl font-bold\" style={{ color: \"#000\" }}>\r\n+                {selectedService.title}\r\n+              </h1>\r\n+              <div className=\"relative grid grid-cols-2 bg-blue-50 border border-blue-200 rounded-full overflow-hidden w-full sm:w-auto\">\r\n+                <div\r\n+                  className=\"absolute inset-y-0 w-1/2 rounded-full bg-white shadow transition-transform duration-300 ease-out\"\r\n+                  style={{ transform: plan === \"revive\" ? \"translateX(100%)\" : \"translateX(0%)\" }}\r\n+                  aria-hidden=\"true\"\r\n+                />\r\n+                <button\r\n+                  type=\"button\"\r\n+                  onClick={() => setPlan(\"base\")}\r\n+                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n+                    plan === \"base\" ? \"text-blue-700\" : \"text-blue-500 hover:text-blue-600\"\r\n+                  }`}\r\n+                >\r\n+                  Base\r\n+                </button>\r\n+                <button\r\n+                  type=\"button\"\r\n+                  onClick={() => {\r\n+                    if (selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\") return;\r\n+                    setPlan(\"revive\");\r\n+                  }}\r\n+                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n+                    plan === \"revive\" ? \"text-blue-700\" : \"text-blue-500 hover:text-blue-600\"\r\n+                  } ${\r\n+                    selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"\r\n+                      ? \"opacity-50 cursor-not-allowed\"\r\n+                      : \"\"\r\n+                  }`}\r\n+                  disabled={selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"}\r\n+                >\r\n+                  Revive\r\n+                </button>\r\n+              </div>\r\n+              <div className=\"bg-blue-50 border border-blue-200 rounded-2xl p-1\">\r\n+                <div className=\"grid grid-cols-3 gap-2\">\r\n+                  {VEHICLE_OPTIONS.map((option, index) => {\r\n+                    const isSelected = vehicleType === option.id;\r\n+                    const alignment = index === 0 ? \"justify-start\" : index === 1 ? \"justify-center\" : \"justify-end\";\r\n+                    return (\r\n+                      <div key={option.id} className={`flex ${alignment}`}>\r\n+                        <button\r\n+                          type=\"button\"\r\n+                          onClick={() => setVehicleType(option.id)}\r\n+                          className={`px-4 py-2 text-sm font-semibold rounded-full transition-colors ${\r\n+                            isSelected\r\n+                              ? \"bg-white text-blue-700 shadow\"\r\n+                              : \"text-blue-500 hover:text-blue-600\"\r\n+                          }`}\r\n+                        >\r\n+                          {option.label}\r\n+                        </button>\r\n+                      </div>\r\n+                    );\r\n+                  })}\r\n+                </div>\r\n+              </div>\r\n+              <div className=\"space-y-1\">\r\n+                <div className=\"text-xl font-semibold text-blue-700\">\r\n+                  {totalPrice !== null ? `Total: $${totalPrice}` : \"Contact us\"}\r\n+                </div>\r\n+              </div>\r\n+              {planFeatures.length ? (\r\n+                <ul className=\"grid sm:grid-cols-2 gap-3 text-blue-800 text-sm sm:text-base\">\r\n+                  {planFeatures.map((feature) => (\r\n+                    <li key={feature.text} className=\"flex items-start gap-3\">\r\n+                      <span className=\"text-lg leading-none mt-[2px]\">{feature.status}</span>\r\n+                      <span>{feature.text}</span>\r\n+                    </li>\r\n+                  ))}\r\n+                </ul>\r\n+              ) : null}\r\n+              {!selectedService.comingSoon && (\r\n+                <div className=\"flex flex-col sm:flex-row gap-3 pt-4\">\r\n+                  <button\r\n+                    type=\"button\"\r\n+                    onClick={handleOpenBooking}\r\n+                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+                  >\r\n+                    Begin Booking\r\n+                  </button>\r\n+                  <a\r\n+                    href=\"tel:+17828275010\"\r\n+                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg border border-blue-300 text-blue-700 hover:bg-blue-100 font-semibold text-center\"\r\n+                  >\r\n+                    Call +1 (782) 827-5010\r\n+                  </a>\r\n+                </div>\r\n+              )}\r\n+              {selectedService.comingSoon && (\r\n+                <div className=\"rounded-xl border border-dashed border-blue-200 bg-blue-50/70 px-4 py-6 text-blue-700 text-sm\">\r\n+                  Subscriptions are almost here. We’ll share flexible plans that keep your vehicle spotless on your schedule.\r\n+                </div>\r\n+              )}\r\n+            </div>\r\n+          </div>\r\n+        ) : (\r\n+          <div className=\"bg-white border border-blue-100 rounded-3xl shadow-lg p-10 text-center space-y-6\">\r\n+            <h1 className=\"text-3xl font-bold\" style={{ color: \"#000\" }}>Select a service to get started</h1>\r\n+            <p className=\"text-blue-700\">\r\n+              We couldn’t find the package you were looking for. Choose one of our detailing options to continue.\r\n+            </p>\r\n+            {fallbackService && (\r\n+              <button\r\n+                type=\"button\"\r\n+                onClick={() => router.push({ pathname: \"/book\", query: { service: fallbackService.id } })}\r\n+                className=\"px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+              >\r\n+                View {fallbackService.title}\r\n+              </button>\r\n+            )}\r\n+          </div>\r\n+        )}\r\n+      </section>\r\n+      <Footer />\r\n+      {showBooking && selectedService && !selectedService.comingSoon && (\r\n+        <Booking service={selectedService} onClose={handleCloseBooking} />\r\n+      )}\r\n+    </main>\r\n+  );\r\n+}\r\n+       \n\\ No newline at end of file\n"
                },
                {
                    "date": 1761435445768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,232 @@\n+import { useEffect, useMemo, useState } from \"react\";\r\n+import dynamic from \"next/dynamic\";\r\n+import { useRouter } from \"next/router\";\r\n+import Navigation from \"@/components/Navigation\";\r\n+import Footer from \"@/components/Footer\";\r\n+import { SERVICES, getServiceById } from \"@/data/services\";\r\n+import { FiCheck, FiX } from \"react-icons/fi\";\r\n+\r\n+const Booking = dynamic(() => import(\"@/components/Booking\"), { ssr: false });\r\n+\r\n+const VEHICLE_OPTIONS = [\r\n+  { id: \"sedan\", label: \"Sedan\", adjustment: 0 },\r\n+  { id: \"suv\", label: \"SUV\", adjustment: 20 },\r\n+  { id: \"truck\", label: \"Truck\", adjustment: 40 },\r\n+];\r\n+\r\n+export default function BookPage() {\r\n+  const router = useRouter();\r\n+  const { service: serviceId } = router.query;\r\n+  const selectedService = useMemo(() => {\r\n+    if (typeof serviceId !== \"string\") return null;\r\n+    return getServiceById(serviceId) || null;\r\n+  }, [serviceId]);\r\n+\r\n+  const [showBooking, setShowBooking] = useState(false);\r\n+  const [plan, setPlan] = useState(\"base\");\r\n+  const [vehicleType, setVehicleType] = useState(VEHICLE_OPTIONS[0].id);\r\n+\r\n+  const planFeatures = useMemo(() => {\r\n+    if (!selectedService) return [];\r\n+\r\n+    const baseFeatures = selectedService.baseFeatures ?? [];\r\n+    const reviveFeatures = selectedService.reviveFeatures ?? [];\r\n+\r\n+    if (plan === \"revive\") {\r\n+      return [...baseFeatures, ...reviveFeatures].map((feature) => ({ text: feature, status: \"✅\" }));\r\n+    }\r\n+\r\n+    const baseIncluded = baseFeatures.map((feature) => ({ text: feature, status: \"✅\" }));\r\n+    const reviveExtras = reviveFeatures.map((feature) => ({ text: feature, status: \"❌\" }));\r\n+\r\n+    return [...baseIncluded, ...reviveExtras];\r\n+  }, [selectedService, plan]);\r\n+\r\n+  const basePlanPrice = useMemo(() => {\r\n+    if (!selectedService) return null;\r\n+    if (plan === \"revive\" && typeof selectedService.revivePrice === \"number\") {\r\n+      return selectedService.revivePrice;\r\n+    }\r\n+    if (plan === \"base\" && typeof selectedService.basePrice === \"number\") {\r\n+      return selectedService.basePrice;\r\n+    }\r\n+    return null;\r\n+  }, [plan, selectedService]);\r\n+\r\n+  const vehicleOption = useMemo(\r\n+    () => VEHICLE_OPTIONS.find((option) => option.id === vehicleType) ?? VEHICLE_OPTIONS[0],\r\n+    [vehicleType]\r\n+  );\r\n+\r\n+  const totalPrice = useMemo(() => {\r\n+    if (typeof basePlanPrice !== \"number\") return null;\r\n+    return basePlanPrice + vehicleOption.adjustment;\r\n+  }, [basePlanPrice, vehicleOption.adjustment]);\r\n+\r\n+  useEffect(() => {\r\n+    setPlan(\"base\");\r\n+    setVehicleType(VEHICLE_OPTIONS[0].id);\r\n+  }, [selectedService?.id]);\r\n+\r\n+  useEffect(() => {\r\n+    if (!router.isReady) return;\r\n+    window.scrollTo({ top: 0, behavior: \"auto\" });\r\n+  }, [router.isReady]);\r\n+\r\n+  useEffect(() => {\r\n+    document.body.style.overflow = showBooking ? \"hidden\" : \"auto\";\r\n+    return () => {\r\n+      document.body.style.overflow = \"auto\";\r\n+    };\r\n+  }, [showBooking]);\r\n+\r\n+  const handleOpenBooking = () => {\r\n+    if (selectedService && !selectedService.comingSoon) {\r\n+      setShowBooking(true);\r\n+    }\r\n+  };\r\n+\r\n+  const handleCloseBooking = () => {\r\n+    setShowBooking(false);\r\n+  };\r\n+\r\n+  const fallbackService = SERVICES.find((svc) => !svc.comingSoon);\r\n+\r\n+  return (\r\n+    <main className=\"min-h-screen bg-gradient-to-b from-slate-50 via-white to-slate-50 text-slate-900\">\r\n+      <Navigation />\r\n+      <section className=\"max-w-4xl mx-auto px-4 py-20\">\r\n+        {selectedService ? (\r\n+          <div className=\"bg-white/95 border border-slate-200 rounded-3xl shadow-xl overflow-hidden\">\r\n+            <div className=\"px-6 sm:px-10 py-10 space-y-6\">\r\n+              <span className=\"inline-flex px-4 py-1 rounded-full bg-blue-100 text-blue-700 text-xs font-semibold uppercase tracking-widest\">\r\n+                {selectedService.comingSoon ? \"Coming Soon\" : \"Book Now\"}\r\n+              </span>\r\n+              <h1 className=\"text-3xl sm:text-4xl font-bold text-slate-900\">\r\n+                {selectedService.title}\r\n+              </h1>\r\n+              <div className=\"relative grid grid-cols-2 bg-slate-100 border border-slate-200 rounded-full overflow-hidden w-full sm:w-auto\">\r\n+                <div\r\n+                  className=\"absolute inset-y-0 w-1/2 rounded-full bg-white shadow transition-transform duration-300 ease-out\"\r\n+                  style={{ transform: plan === \"revive\" ? \"translateX(100%)\" : \"translateX(0%)\" }}\r\n+                  aria-hidden=\"true\"\r\n+                />\r\n+                <button\r\n+                  type=\"button\"\r\n+                  onClick={() => setPlan(\"base\")}\r\n+                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n+                    plan === \"base\" ? \"text-slate-900\" : \"text-slate-500 hover:text-slate-700\"\r\n+                  }`}\r\n+                >\r\n+                  Base\r\n+                </button>\r\n+                <button\r\n+                  type=\"button\"\r\n+                  onClick={() => {\r\n+                    if (selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\") return;\r\n+                    setPlan(\"revive\");\r\n+                  }}\r\n+                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n+                    plan === \"revive\" ? \"text-slate-900\" : \"text-slate-500 hover:text-slate-700\"\r\n+                  } ${\r\n+                    selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"\r\n+                      ? \"opacity-50 cursor-not-allowed\"\r\n+                      : \"\"\r\n+                  }`}\r\n+                  disabled={selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"}\r\n+                >\r\n+                  Revive\r\n+                </button>\r\n+              </div>\r\n+              <div className=\"bg-slate-100 border border-slate-200 rounded-2xl p-1\">\r\n+                <div className=\"grid grid-cols-3 gap-2\">\r\n+                  {VEHICLE_OPTIONS.map((option, index) => {\r\n+                    const isSelected = vehicleType === option.id;\r\n+                    const alignment = index === 0 ? \"justify-start\" : index === 1 ? \"justify-center\" : \"justify-end\";\r\n+                    return (\r\n+                      <div key={option.id} className={`flex ${alignment}`}>\r\n+                        <button\r\n+                          type=\"button\"\r\n+                          onClick={() => setVehicleType(option.id)}\r\n+                          className={`px-4 py-2 text-sm font-semibold rounded-full transition-colors ${\r\n+                            isSelected\r\n+                              ? \"bg-white text-slate-900 shadow\"\r\n+                              : \"text-slate-600 hover:text-slate-800\"\r\n+                          }`}\r\n+                        >\r\n+                          {option.label}\r\n+                        </button>\r\n+                      </div>\r\n+                    );\r\n+                  })}\r\n+                </div>\r\n+              </div>\r\n+              <div className=\"space-y-1\">\r\n+                <div className=\"text-xl font-semibold text-slate-900\">\r\n+                  {totalPrice !== null ? `Total: $${totalPrice}` : \"Contact us\"}\r\n+                </div>\r\n+              </div>\r\n+              {planFeatures.length ? (\r\n+                <ul className=\"grid sm:grid-cols-2 gap-3 text-slate-800 text-sm sm:text-base\">\r\n+                  {planFeatures.map((feature) => (\r\n+                    <li key={feature.text} className=\"flex items-start gap-3\">\r\n+                      {feature.status === \"✅\" ? (\r\n+                        <FiCheck className=\"mt-0.5 text-green-600\" aria-hidden=\"true\" />\r\n+                      ) : (\r\n+                        <FiX className=\"mt-0.5 text-slate-400\" aria-hidden=\"true\" />\r\n+                      )}\r\n+                      <span className=\"text-slate-800\">{feature.text}</span>\r\n+                    </li>\r\n+                  ))}\r\n+                </ul>\r\n+              ) : null}\r\n+              {!selectedService.comingSoon && (\r\n+                <div className=\"flex flex-col sm:flex-row gap-3 pt-4\">\r\n+                  <button\r\n+                    type=\"button\"\r\n+                    onClick={handleOpenBooking}\r\n+                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+                  >\r\n+                    Begin Booking\r\n+                  </button>\r\n+                  <a\r\n+                    href=\"tel:+17828275010\"\r\n+                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg border border-blue-300 text-blue-700 hover:bg-blue-100 font-semibold text-center\"\r\n+                  >\r\n+                    Call +1 (782) 827-5010\r\n+                  </a>\r\n+                </div>\r\n+              )}\r\n+              {selectedService.comingSoon && (\r\n+                <div className=\"rounded-xl border border-dashed border-blue-200 bg-blue-50/70 px-4 py-6 text-blue-700 text-sm\">\r\n+                  Subscriptions are almost here. We’ll share flexible plans that keep your vehicle spotless on your schedule.\r\n+                </div>\r\n+              )}\r\n+            </div>\r\n+          </div>\r\n+        ) : (\r\n+          <div className=\"bg-white border border-slate-200 rounded-3xl shadow-lg p-10 text-center space-y-6\">\r\n+            <h1 className=\"text-3xl font-bold text-slate-900\">Select a service to get started</h1>\r\n+            <p className=\"text-slate-700\">\r\n+              We couldn’t find the package you were looking for. Choose one of our detailing options to continue.\r\n+            </p>\r\n+            {fallbackService && (\r\n+              <button\r\n+                type=\"button\"\r\n+                onClick={() => router.push({ pathname: \"/book\", query: { service: fallbackService.id } })}\r\n+                className=\"px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+              >\r\n+                View {fallbackService.title}\r\n+              </button>\r\n+            )}\r\n+          </div>\r\n+        )}\r\n+      </section>\r\n+      <Footer />\r\n+      {showBooking && selectedService && !selectedService.comingSoon && (\r\n+        <Booking service={selectedService} onClose={handleCloseBooking} />\r\n+      )}\r\n+    </main>\r\n+  );\r\n+}\r\n+       \n\\ No newline at end of file\n"
                },
                {
                    "date": 1761435837284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,232 @@\n+import { useEffect, useMemo, useState } from \"react\";\r\n+import dynamic from \"next/dynamic\";\r\n+import { useRouter } from \"next/router\";\r\n+import Navigation from \"@/components/Navigation\";\r\n+import Footer from \"@/components/Footer\";\r\n+import { SERVICES, getServiceById } from \"@/data/services\";\r\n+import { FiCheck, FiX } from \"react-icons/fi\";\r\n+\r\n+const Booking = dynamic(() => import(\"@/components/Booking\"), { ssr: false });\r\n+\r\n+const VEHICLE_OPTIONS = [\r\n+  { id: \"sedan\", label: \"Sedan\", adjustment: 0 },\r\n+  { id: \"suv\", label: \"SUV\", adjustment: 20 },\r\n+  { id: \"truck\", label: \"Truck\", adjustment: 40 },\r\n+];\r\n+\r\n+export default function BookPage() {\r\n+  const router = useRouter();\r\n+  const { service: serviceId } = router.query;\r\n+  const selectedService = useMemo(() => {\r\n+    if (typeof serviceId !== \"string\") return null;\r\n+    return getServiceById(serviceId) || null;\r\n+  }, [serviceId]);\r\n+\r\n+  const [showBooking, setShowBooking] = useState(false);\r\n+  const [plan, setPlan] = useState(\"base\");\r\n+  const [vehicleType, setVehicleType] = useState(VEHICLE_OPTIONS[0].id);\r\n+\r\n+  const planFeatures = useMemo(() => {\r\n+    if (!selectedService) return [];\r\n+\r\n+    const baseFeatures = selectedService.baseFeatures ?? [];\r\n+    const reviveFeatures = selectedService.reviveFeatures ?? [];\r\n+\r\n+    if (plan === \"revive\") {\r\n+      return [...baseFeatures, ...reviveFeatures].map((feature) => ({ text: feature, status: \"✅\" }));\r\n+    }\r\n+\r\n+    const baseIncluded = baseFeatures.map((feature) => ({ text: feature, status: \"✅\" }));\r\n+    const reviveExtras = reviveFeatures.map((feature) => ({ text: feature, status: \"❌\" }));\r\n+\r\n+    return [...baseIncluded, ...reviveExtras];\r\n+  }, [selectedService, plan]);\r\n+\r\n+  const basePlanPrice = useMemo(() => {\r\n+    if (!selectedService) return null;\r\n+    if (plan === \"revive\" && typeof selectedService.revivePrice === \"number\") {\r\n+      return selectedService.revivePrice;\r\n+    }\r\n+    if (plan === \"base\" && typeof selectedService.basePrice === \"number\") {\r\n+      return selectedService.basePrice;\r\n+    }\r\n+    return null;\r\n+  }, [plan, selectedService]);\r\n+\r\n+  const vehicleOption = useMemo(\r\n+    () => VEHICLE_OPTIONS.find((option) => option.id === vehicleType) ?? VEHICLE_OPTIONS[0],\r\n+    [vehicleType]\r\n+  );\r\n+\r\n+  const totalPrice = useMemo(() => {\r\n+    if (typeof basePlanPrice !== \"number\") return null;\r\n+    return basePlanPrice + vehicleOption.adjustment;\r\n+  }, [basePlanPrice, vehicleOption.adjustment]);\r\n+\r\n+  useEffect(() => {\r\n+    setPlan(\"base\");\r\n+    setVehicleType(VEHICLE_OPTIONS[0].id);\r\n+  }, [selectedService?.id]);\r\n+\r\n+  useEffect(() => {\r\n+    if (!router.isReady) return;\r\n+    window.scrollTo({ top: 0, behavior: \"auto\" });\r\n+  }, [router.isReady]);\r\n+\r\n+  useEffect(() => {\r\n+    document.body.style.overflow = showBooking ? \"hidden\" : \"auto\";\r\n+    return () => {\r\n+      document.body.style.overflow = \"auto\";\r\n+    };\r\n+  }, [showBooking]);\r\n+\r\n+  const handleOpenBooking = () => {\r\n+    if (selectedService && !selectedService.comingSoon) {\r\n+      setShowBooking(true);\r\n+    }\r\n+  };\r\n+\r\n+  const handleCloseBooking = () => {\r\n+    setShowBooking(false);\r\n+  };\r\n+\r\n+  const fallbackService = SERVICES.find((svc) => !svc.comingSoon);\r\n+\r\n+  return (\r\n+  <main className=\"min-h-screen bg-gradient-to-b from-slate-50 via-white to-slate-50 text-[#0A0A0A]\">\r\n+      <Navigation />\r\n+      <section className=\"max-w-4xl mx-auto px-4 py-20\">\r\n+        {selectedService ? (\r\n+          <div className=\"bg-white/95 border border-slate-200 rounded-3xl shadow-xl overflow-hidden\">\r\n+            <div className=\"px-6 sm:px-10 py-10 space-y-6\">\r\n+              <span className=\"inline-flex px-4 py-1 rounded-full bg-blue-100 text-blue-700 text-xs font-semibold uppercase tracking-widest\">\r\n+                {selectedService.comingSoon ? \"Coming Soon\" : \"Book Now\"}\r\n+              </span>\r\n+              <h1 className=\"text-3xl sm:text-4xl font-bold text-[#0A0A0A]\">\r\n+                {selectedService.title}\r\n+              </h1>\r\n+              <div className=\"relative grid grid-cols-2 bg-slate-100 border border-slate-200 rounded-full overflow-hidden w-full sm:w-auto\">\r\n+                <div\r\n+                  className=\"absolute inset-y-0 w-1/2 rounded-full bg-white shadow transition-transform duration-300 ease-out\"\r\n+                  style={{ transform: plan === \"revive\" ? \"translateX(100%)\" : \"translateX(0%)\" }}\r\n+                  aria-hidden=\"true\"\r\n+                />\r\n+                <button\r\n+                  type=\"button\"\r\n+                  onClick={() => setPlan(\"base\")}\r\n+                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n+                    plan === \"base\" ? \"text-[#0A0A0A]\" : \"text-gray-700 hover:text-gray-900\"\r\n+                  }`}\r\n+                >\r\n+                  Base\r\n+                </button>\r\n+                <button\r\n+                  type=\"button\"\r\n+                  onClick={() => {\r\n+                    if (selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\") return;\r\n+                    setPlan(\"revive\");\r\n+                  }}\r\n+                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n+                    plan === \"revive\" ? \"text-[#0A0A0A]\" : \"text-gray-700 hover:text-gray-900\"\r\n+                  } ${\r\n+                    selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"\r\n+                      ? \"opacity-50 cursor-not-allowed\"\r\n+                      : \"\"\r\n+                  }`}\r\n+                  disabled={selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"}\r\n+                >\r\n+                  Revive\r\n+                </button>\r\n+              </div>\r\n+              <div className=\"bg-slate-100 border border-slate-200 rounded-2xl p-1\">\r\n+                <div className=\"grid grid-cols-3 gap-2\">\r\n+                  {VEHICLE_OPTIONS.map((option, index) => {\r\n+                    const isSelected = vehicleType === option.id;\r\n+                    const alignment = index === 0 ? \"justify-start\" : index === 1 ? \"justify-center\" : \"justify-end\";\r\n+                    return (\r\n+                      <div key={option.id} className={`flex ${alignment}`}>\r\n+                        <button\r\n+                          type=\"button\"\r\n+                          onClick={() => setVehicleType(option.id)}\r\n+                          className={`px-4 py-2 text-sm font-semibold rounded-full transition-colors ${\r\n+                            isSelected\r\n+                              ? \"bg-white text-[#0A0A0A] shadow\"\r\n+                              : \"text-gray-800 hover:text-gray-900\"\r\n+                          }`}\r\n+                        >\r\n+                          {option.label}\r\n+                        </button>\r\n+                      </div>\r\n+                    );\r\n+                  })}\r\n+                </div>\r\n+              </div>\r\n+              <div className=\"space-y-1\">\r\n+                <div className=\"text-xl font-semibold text-[#0A0A0A]\">\r\n+                  {totalPrice !== null ? `Total: $${totalPrice}` : \"Contact us\"}\r\n+                </div>\r\n+              </div>\r\n+              {planFeatures.length ? (\r\n+                <ul className=\"grid sm:grid-cols-2 gap-3 text-gray-900 text-sm sm:text-base\">\r\n+                  {planFeatures.map((feature) => (\r\n+                    <li key={feature.text} className=\"flex items-start gap-3\">\r\n+                      {feature.status === \"✅\" ? (\r\n+                        <FiCheck className=\"mt-0.5 text-green-600\" aria-hidden=\"true\" />\r\n+                      ) : (\r\n+                        <FiX className=\"mt-0.5 text-slate-400\" aria-hidden=\"true\" />\r\n+                      )}\r\n+                      <span className=\"text-gray-900\">{feature.text}</span>\r\n+                    </li>\r\n+                  ))}\r\n+                </ul>\r\n+              ) : null}\r\n+              {!selectedService.comingSoon && (\r\n+                <div className=\"flex flex-col sm:flex-row gap-3 pt-4\">\r\n+                  <button\r\n+                    type=\"button\"\r\n+                    onClick={handleOpenBooking}\r\n+                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+                  >\r\n+                    Begin Booking\r\n+                  </button>\r\n+                  <a\r\n+                    href=\"tel:+17828275010\"\r\n+                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg border border-blue-300 text-blue-700 hover:bg-blue-100 font-semibold text-center\"\r\n+                  >\r\n+                    Call +1 (782) 827-5010\r\n+                  </a>\r\n+                </div>\r\n+              )}\r\n+              {selectedService.comingSoon && (\r\n+                <div className=\"rounded-xl border border-dashed border-blue-200 bg-blue-50/70 px-4 py-6 text-blue-700 text-sm\">\r\n+                  Subscriptions are almost here. We’ll share flexible plans that keep your vehicle spotless on your schedule.\r\n+                </div>\r\n+              )}\r\n+            </div>\r\n+          </div>\r\n+        ) : (\r\n+          <div className=\"bg-white border border-slate-200 rounded-3xl shadow-lg p-10 text-center space-y-6\">\r\n+            <h1 className=\"text-3xl font-bold text-[#0A0A0A]\">Select a service to get started</h1>\r\n+            <p className=\"text-gray-800\">\r\n+              We couldn’t find the package you were looking for. Choose one of our detailing options to continue.\r\n+            </p>\r\n+            {fallbackService && (\r\n+              <button\r\n+                type=\"button\"\r\n+                onClick={() => router.push({ pathname: \"/book\", query: { service: fallbackService.id } })}\r\n+                className=\"px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+              >\r\n+                View {fallbackService.title}\r\n+              </button>\r\n+            )}\r\n+          </div>\r\n+        )}\r\n+      </section>\r\n+      <Footer />\r\n+      {showBooking && selectedService && !selectedService.comingSoon && (\r\n+        <Booking service={selectedService} onClose={handleCloseBooking} />\r\n+      )}\r\n+    </main>\r\n+  );\r\n+}\r\n+       \n\\ No newline at end of file\n"
                },
                {
                    "date": 1761436956253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,18 +92,18 @@\n \r\n   const fallbackService = SERVICES.find((svc) => !svc.comingSoon);\r\n \r\n   return (\r\n-  <main className=\"min-h-screen bg-gradient-to-b from-slate-50 via-white to-slate-50 text-[#0A0A0A]\">\r\n+  <main className=\"min-h-screen bg-gradient-to-b from-slate-50 via-white to-slate-50\" style={{ color: '#0A0A0A' }}>\r\n       <Navigation />\r\n       <section className=\"max-w-4xl mx-auto px-4 py-20\">\r\n         {selectedService ? (\r\n-          <div className=\"bg-white/95 border border-slate-200 rounded-3xl shadow-xl overflow-hidden\">\r\n+          <div className=\"bg-white/95 border rounded-3xl shadow-xl overflow-hidden\" style={{ backgroundColor: 'rgba(255,255,255,0.95)', borderColor: '#e5e7eb' }}>\r\n             <div className=\"px-6 sm:px-10 py-10 space-y-6\">\r\n               <span className=\"inline-flex px-4 py-1 rounded-full bg-blue-100 text-blue-700 text-xs font-semibold uppercase tracking-widest\">\r\n                 {selectedService.comingSoon ? \"Coming Soon\" : \"Book Now\"}\r\n               </span>\r\n-              <h1 className=\"text-3xl sm:text-4xl font-bold text-[#0A0A0A]\">\r\n+              <h1 className=\"text-3xl sm:text-4xl font-bold\" style={{ color: '#0A0A0A' }}>\r\n                 {selectedService.title}\r\n               </h1>\r\n               <div className=\"relative grid grid-cols-2 bg-slate-100 border border-slate-200 rounded-full overflow-hidden w-full sm:w-auto\">\r\n                 <div\r\n@@ -113,11 +113,10 @@\n                 />\r\n                 <button\r\n                   type=\"button\"\r\n                   onClick={() => setPlan(\"base\")}\r\n-                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n-                    plan === \"base\" ? \"text-[#0A0A0A]\" : \"text-gray-700 hover:text-gray-900\"\r\n-                  }`}\r\n+                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors`}\r\n+                  style={{ color: plan === 'base' ? '#0A0A0A' : '#111827' }}\r\n                 >\r\n                   Base\r\n                 </button>\r\n                 <button\r\n@@ -126,14 +125,13 @@\n                     if (selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\") return;\r\n                     setPlan(\"revive\");\r\n                   }}\r\n                   className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n-                    plan === \"revive\" ? \"text-[#0A0A0A]\" : \"text-gray-700 hover:text-gray-900\"\r\n-                  } ${\r\n                     selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"\r\n                       ? \"opacity-50 cursor-not-allowed\"\r\n                       : \"\"\r\n                   }`}\r\n+                  style={{ color: plan === 'revive' ? '#0A0A0A' : '#111827' }}\r\n                   disabled={selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"}\r\n                 >\r\n                   Revive\r\n                 </button>\r\n@@ -147,13 +145,10 @@\n                       <div key={option.id} className={`flex ${alignment}`}>\r\n                         <button\r\n                           type=\"button\"\r\n                           onClick={() => setVehicleType(option.id)}\r\n-                          className={`px-4 py-2 text-sm font-semibold rounded-full transition-colors ${\r\n-                            isSelected\r\n-                              ? \"bg-white text-[#0A0A0A] shadow\"\r\n-                              : \"text-gray-800 hover:text-gray-900\"\r\n-                          }`}\r\n+                          className={`px-4 py-2 text-sm font-semibold rounded-full transition-colors ${isSelected ? 'bg-white shadow' : ''}`}\r\n+                          style={{ color: isSelected ? '#0A0A0A' : '#111827' }}\r\n                         >\r\n                           {option.label}\r\n                         </button>\r\n                       </div>\r\n@@ -161,22 +156,22 @@\n                   })}\r\n                 </div>\r\n               </div>\r\n               <div className=\"space-y-1\">\r\n-                <div className=\"text-xl font-semibold text-[#0A0A0A]\">\r\n+                <div className=\"text-xl font-semibold\" style={{ color: '#0A0A0A' }}>\r\n                   {totalPrice !== null ? `Total: $${totalPrice}` : \"Contact us\"}\r\n                 </div>\r\n               </div>\r\n               {planFeatures.length ? (\r\n-                <ul className=\"grid sm:grid-cols-2 gap-3 text-gray-900 text-sm sm:text-base\">\r\n+                <ul className=\"grid sm:grid-cols-2 gap-3 text-sm sm:text-base\" style={{ color: '#111827' }}>\r\n                   {planFeatures.map((feature) => (\r\n                     <li key={feature.text} className=\"flex items-start gap-3\">\r\n                       {feature.status === \"✅\" ? (\r\n-                        <FiCheck className=\"mt-0.5 text-green-600\" aria-hidden=\"true\" />\r\n+                        <FiCheck className=\"mt-0.5\" style={{ color: '#16A34A' }} aria-hidden=\"true\" />\r\n                       ) : (\r\n-                        <FiX className=\"mt-0.5 text-slate-400\" aria-hidden=\"true\" />\r\n+                        <FiX className=\"mt-0.5\" style={{ color: '#9CA3AF' }} aria-hidden=\"true\" />\r\n                       )}\r\n-                      <span className=\"text-gray-900\">{feature.text}</span>\r\n+                      <span>{feature.text}</span>\r\n                     </li>\r\n                   ))}\r\n                 </ul>\r\n               ) : null}\r\n@@ -205,10 +200,10 @@\n             </div>\r\n           </div>\r\n         ) : (\r\n           <div className=\"bg-white border border-slate-200 rounded-3xl shadow-lg p-10 text-center space-y-6\">\r\n-            <h1 className=\"text-3xl font-bold text-[#0A0A0A]\">Select a service to get started</h1>\r\n-            <p className=\"text-gray-800\">\r\n+            <h1 className=\"text-3xl font-bold\" style={{ color: '#0A0A0A' }}>Select a service to get started</h1>\r\n+            <p style={{ color: '#1F2937' }}>\r\n               We couldn’t find the package you were looking for. Choose one of our detailing options to continue.\r\n             </p>\r\n             {fallbackService && (\r\n               <button\r\n@@ -228,695 +223,5 @@\n       )}\r\n     </main>\r\n   );\r\n }\r\n-       \n-import { useEffect, useMemo, useState } from \"react\";\r\n-import dynamic from \"next/dynamic\";\r\n-import { useRouter } from \"next/router\";\r\n-import Navigation from \"@/components/Navigation\";\r\n-import Footer from \"@/components/Footer\";\r\n-import { SERVICES, getServiceById } from \"@/data/services\";\r\n-import { FiCheck, FiX } from \"react-icons/fi\";\r\n-\r\n-const Booking = dynamic(() => import(\"@/components/Booking\"), { ssr: false });\r\n-\r\n-const VEHICLE_OPTIONS = [\r\n-  { id: \"sedan\", label: \"Sedan\", adjustment: 0 },\r\n-  { id: \"suv\", label: \"SUV\", adjustment: 20 },\r\n-  { id: \"truck\", label: \"Truck\", adjustment: 40 },\r\n-];\r\n-\r\n-export default function BookPage() {\r\n-  const router = useRouter();\r\n-  const { service: serviceId } = router.query;\r\n-  const selectedService = useMemo(() => {\r\n-    if (typeof serviceId !== \"string\") return null;\r\n-    return getServiceById(serviceId) || null;\r\n-  }, [serviceId]);\r\n-\r\n-  const [showBooking, setShowBooking] = useState(false);\r\n-  const [plan, setPlan] = useState(\"base\");\r\n-  const [vehicleType, setVehicleType] = useState(VEHICLE_OPTIONS[0].id);\r\n-\r\n-  const planFeatures = useMemo(() => {\r\n-    if (!selectedService) return [];\r\n-\r\n-    const baseFeatures = selectedService.baseFeatures ?? [];\r\n-    const reviveFeatures = selectedService.reviveFeatures ?? [];\r\n-\r\n-    if (plan === \"revive\") {\r\n-      return [...baseFeatures, ...reviveFeatures].map((feature) => ({ text: feature, status: \"✅\" }));\r\n-    }\r\n-\r\n-    const baseIncluded = baseFeatures.map((feature) => ({ text: feature, status: \"✅\" }));\r\n-    const reviveExtras = reviveFeatures.map((feature) => ({ text: feature, status: \"❌\" }));\r\n-\r\n-    return [...baseIncluded, ...reviveExtras];\r\n-  }, [selectedService, plan]);\r\n-\r\n-  const basePlanPrice = useMemo(() => {\r\n-    if (!selectedService) return null;\r\n-    if (plan === \"revive\" && typeof selectedService.revivePrice === \"number\") {\r\n-      return selectedService.revivePrice;\r\n-    }\r\n-    if (plan === \"base\" && typeof selectedService.basePrice === \"number\") {\r\n-      return selectedService.basePrice;\r\n-    }\r\n-    return null;\r\n-  }, [plan, selectedService]);\r\n-\r\n-  const vehicleOption = useMemo(\r\n-    () => VEHICLE_OPTIONS.find((option) => option.id === vehicleType) ?? VEHICLE_OPTIONS[0],\r\n-    [vehicleType]\r\n-  );\r\n-\r\n-  const totalPrice = useMemo(() => {\r\n-    if (typeof basePlanPrice !== \"number\") return null;\r\n-    return basePlanPrice + vehicleOption.adjustment;\r\n-  }, [basePlanPrice, vehicleOption.adjustment]);\r\n-\r\n-  useEffect(() => {\r\n-    setPlan(\"base\");\r\n-    setVehicleType(VEHICLE_OPTIONS[0].id);\r\n-  }, [selectedService?.id]);\r\n-\r\n-  useEffect(() => {\r\n-    if (!router.isReady) return;\r\n-    window.scrollTo({ top: 0, behavior: \"auto\" });\r\n-  }, [router.isReady]);\r\n-\r\n-  useEffect(() => {\r\n-    document.body.style.overflow = showBooking ? \"hidden\" : \"auto\";\r\n-    return () => {\r\n-      document.body.style.overflow = \"auto\";\r\n-    };\r\n-  }, [showBooking]);\r\n-\r\n-  const handleOpenBooking = () => {\r\n-    if (selectedService && !selectedService.comingSoon) {\r\n-      setShowBooking(true);\r\n-    }\r\n-  };\r\n-\r\n-  const handleCloseBooking = () => {\r\n-    setShowBooking(false);\r\n-  };\r\n-\r\n-  const fallbackService = SERVICES.find((svc) => !svc.comingSoon);\r\n-\r\n-  return (\r\n-    <main className=\"min-h-screen bg-gradient-to-b from-slate-50 via-white to-slate-50 text-slate-900\">\r\n-      <Navigation />\r\n-      <section className=\"max-w-4xl mx-auto px-4 py-20\">\r\n-        {selectedService ? (\r\n-          <div className=\"bg-white/95 border border-slate-200 rounded-3xl shadow-xl overflow-hidden\">\r\n-            <div className=\"px-6 sm:px-10 py-10 space-y-6\">\r\n-              <span className=\"inline-flex px-4 py-1 rounded-full bg-blue-100 text-blue-700 text-xs font-semibold uppercase tracking-widest\">\r\n-                {selectedService.comingSoon ? \"Coming Soon\" : \"Book Now\"}\r\n-              </span>\r\n-              <h1 className=\"text-3xl sm:text-4xl font-bold text-slate-900\">\r\n-                {selectedService.title}\r\n-              </h1>\r\n-              <div className=\"relative grid grid-cols-2 bg-slate-100 border border-slate-200 rounded-full overflow-hidden w-full sm:w-auto\">\r\n-                <div\r\n-                  className=\"absolute inset-y-0 w-1/2 rounded-full bg-white shadow transition-transform duration-300 ease-out\"\r\n-                  style={{ transform: plan === \"revive\" ? \"translateX(100%)\" : \"translateX(0%)\" }}\r\n-                  aria-hidden=\"true\"\r\n-                />\r\n-                <button\r\n-                  type=\"button\"\r\n-                  onClick={() => setPlan(\"base\")}\r\n-                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n-                    plan === \"base\" ? \"text-slate-900\" : \"text-slate-500 hover:text-slate-700\"\r\n-                  }`}\r\n-                >\r\n-                  Base\r\n-                </button>\r\n-                <button\r\n-                  type=\"button\"\r\n-                  onClick={() => {\r\n-                    if (selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\") return;\r\n-                    setPlan(\"revive\");\r\n-                  }}\r\n-                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n-                    plan === \"revive\" ? \"text-slate-900\" : \"text-slate-500 hover:text-slate-700\"\r\n-                  } ${\r\n-                    selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"\r\n-                      ? \"opacity-50 cursor-not-allowed\"\r\n-                      : \"\"\r\n-                  }`}\r\n-                  disabled={selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"}\r\n-                >\r\n-                  Revive\r\n-                </button>\r\n-              </div>\r\n-              <div className=\"bg-slate-100 border border-slate-200 rounded-2xl p-1\">\r\n-                <div className=\"grid grid-cols-3 gap-2\">\r\n-                  {VEHICLE_OPTIONS.map((option, index) => {\r\n-                    const isSelected = vehicleType === option.id;\r\n-                    const alignment = index === 0 ? \"justify-start\" : index === 1 ? \"justify-center\" : \"justify-end\";\r\n-                    return (\r\n-                      <div key={option.id} className={`flex ${alignment}`}>\r\n-                        <button\r\n-                          type=\"button\"\r\n-                          onClick={() => setVehicleType(option.id)}\r\n-                          className={`px-4 py-2 text-sm font-semibold rounded-full transition-colors ${\r\n-                            isSelected\r\n-                              ? \"bg-white text-slate-900 shadow\"\r\n-                              : \"text-slate-600 hover:text-slate-800\"\r\n-                          }`}\r\n-                        >\r\n-                          {option.label}\r\n-                        </button>\r\n-                      </div>\r\n-                    );\r\n-                  })}\r\n-                </div>\r\n-              </div>\r\n-              <div className=\"space-y-1\">\r\n-                <div className=\"text-xl font-semibold text-slate-900\">\r\n-                  {totalPrice !== null ? `Total: $${totalPrice}` : \"Contact us\"}\r\n-                </div>\r\n-              </div>\r\n-              {planFeatures.length ? (\r\n-                <ul className=\"grid sm:grid-cols-2 gap-3 text-slate-800 text-sm sm:text-base\">\r\n-                  {planFeatures.map((feature) => (\r\n-                    <li key={feature.text} className=\"flex items-start gap-3\">\r\n-                      {feature.status === \"✅\" ? (\r\n-                        <FiCheck className=\"mt-0.5 text-green-600\" aria-hidden=\"true\" />\r\n-                      ) : (\r\n-                        <FiX className=\"mt-0.5 text-slate-400\" aria-hidden=\"true\" />\r\n-                      )}\r\n-                      <span className=\"text-slate-800\">{feature.text}</span>\r\n-                    </li>\r\n-                  ))}\r\n-                </ul>\r\n-              ) : null}\r\n-              {!selectedService.comingSoon && (\r\n-                <div className=\"flex flex-col sm:flex-row gap-3 pt-4\">\r\n-                  <button\r\n-                    type=\"button\"\r\n-                    onClick={handleOpenBooking}\r\n-                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-                  >\r\n-                    Begin Booking\r\n-                  </button>\r\n-                  <a\r\n-                    href=\"tel:+17828275010\"\r\n-                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg border border-blue-300 text-blue-700 hover:bg-blue-100 font-semibold text-center\"\r\n-                  >\r\n-                    Call +1 (782) 827-5010\r\n-                  </a>\r\n-                </div>\r\n-              )}\r\n-              {selectedService.comingSoon && (\r\n-                <div className=\"rounded-xl border border-dashed border-blue-200 bg-blue-50/70 px-4 py-6 text-blue-700 text-sm\">\r\n-                  Subscriptions are almost here. We’ll share flexible plans that keep your vehicle spotless on your schedule.\r\n-                </div>\r\n-              )}\r\n-            </div>\r\n-          </div>\r\n-        ) : (\r\n-          <div className=\"bg-white border border-slate-200 rounded-3xl shadow-lg p-10 text-center space-y-6\">\r\n-            <h1 className=\"text-3xl font-bold text-slate-900\">Select a service to get started</h1>\r\n-            <p className=\"text-slate-700\">\r\n-              We couldn’t find the package you were looking for. Choose one of our detailing options to continue.\r\n-            </p>\r\n-            {fallbackService && (\r\n-              <button\r\n-                type=\"button\"\r\n-                onClick={() => router.push({ pathname: \"/book\", query: { service: fallbackService.id } })}\r\n-                className=\"px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-              >\r\n-                View {fallbackService.title}\r\n-              </button>\r\n-            )}\r\n-          </div>\r\n-        )}\r\n-      </section>\r\n-      <Footer />\r\n-      {showBooking && selectedService && !selectedService.comingSoon && (\r\n-        <Booking service={selectedService} onClose={handleCloseBooking} />\r\n-      )}\r\n-    </main>\r\n-  );\r\n-}\r\n-       \n-import { useEffect, useMemo, useState } from \"react\";\r\n-import dynamic from \"next/dynamic\";\r\n-import { useRouter } from \"next/router\";\r\n-import Navigation from \"@/components/Navigation\";\r\n-import Footer from \"@/components/Footer\";\r\n-import { SERVICES, getServiceById } from \"@/data/services\";\r\n-\r\n-const Booking = dynamic(() => import(\"@/components/Booking\"), { ssr: false });\r\n-\r\n-const VEHICLE_OPTIONS = [\r\n-  { id: \"sedan\", label: \"Sedan\", adjustment: 0 },\r\n-  { id: \"suv\", label: \"SUV\", adjustment: 20 },\r\n-  { id: \"truck\", label: \"Truck\", adjustment: 40 },\r\n-];\r\n-\r\n-export default function BookPage() {\r\n-  const router = useRouter();\r\n-  const { service: serviceId } = router.query;\r\n-  const selectedService = useMemo(() => {\r\n-    if (typeof serviceId !== \"string\") return null;\r\n-    return getServiceById(serviceId) || null;\r\n-  }, [serviceId]);\r\n-\r\n-  const [showBooking, setShowBooking] = useState(false);\r\n-  const [plan, setPlan] = useState(\"base\");\r\n-  const [vehicleType, setVehicleType] = useState(VEHICLE_OPTIONS[0].id);\r\n-\r\n-  const planFeatures = useMemo(() => {\r\n-    if (!selectedService) return [];\r\n-\r\n-    const baseFeatures = selectedService.baseFeatures ?? [];\r\n-    const reviveFeatures = selectedService.reviveFeatures ?? [];\r\n-\r\n-    if (plan === \"revive\") {\r\n-      return [...baseFeatures, ...reviveFeatures].map((feature) => ({ text: feature, status: \"✅\" }));\r\n-    }\r\n-\r\n-    const baseIncluded = baseFeatures.map((feature) => ({ text: feature, status: \"✅\" }));\r\n-    const reviveExtras = reviveFeatures.map((feature) => ({ text: feature, status: \"❌\" }));\r\n-\r\n-    return [...baseIncluded, ...reviveExtras];\r\n-  }, [selectedService, plan]);\r\n-\r\n-  const basePlanPrice = useMemo(() => {\r\n-    if (!selectedService) return null;\r\n-    if (plan === \"revive\" && typeof selectedService.revivePrice === \"number\") {\r\n-      return selectedService.revivePrice;\r\n-    }\r\n-    if (plan === \"base\" && typeof selectedService.basePrice === \"number\") {\r\n-      return selectedService.basePrice;\r\n-    }\r\n-    return null;\r\n-  }, [plan, selectedService]);\r\n-\r\n-  const vehicleOption = useMemo(\r\n-    () => VEHICLE_OPTIONS.find((option) => option.id === vehicleType) ?? VEHICLE_OPTIONS[0],\r\n-    [vehicleType]\r\n-  );\r\n-\r\n-  const totalPrice = useMemo(() => {\r\n-    if (typeof basePlanPrice !== \"number\") return null;\r\n-    return basePlanPrice + vehicleOption.adjustment;\r\n-  }, [basePlanPrice, vehicleOption.adjustment]);\r\n-\r\n-  useEffect(() => {\r\n-    setPlan(\"base\");\r\n-    setVehicleType(VEHICLE_OPTIONS[0].id);\r\n-  }, [selectedService?.id]);\r\n-\r\n-  useEffect(() => {\r\n-    if (!router.isReady) return;\r\n-    window.scrollTo({ top: 0, behavior: \"auto\" });\r\n-  }, [router.isReady]);\r\n-\r\n-  useEffect(() => {\r\n-    document.body.style.overflow = showBooking ? \"hidden\" : \"auto\";\r\n-    return () => {\r\n-      document.body.style.overflow = \"auto\";\r\n-    };\r\n-  }, [showBooking]);\r\n-\r\n-  const handleOpenBooking = () => {\r\n-    if (selectedService && !selectedService.comingSoon) {\r\n-      setShowBooking(true);\r\n-    }\r\n-  };\r\n-\r\n-  const handleCloseBooking = () => {\r\n-    setShowBooking(false);\r\n-  };\r\n-\r\n-  const fallbackService = SERVICES.find((svc) => !svc.comingSoon);\r\n-\r\n-  return (\r\n-    <main className=\"min-h-screen bg-blue-50 text-blue-900\">\r\n-      <Navigation />\r\n-      <section className=\"max-w-4xl mx-auto px-4 py-20\">\r\n-        {selectedService ? (\r\n-          <div className=\"bg-white border border-blue-100 rounded-3xl shadow-xl overflow-hidden\">\r\n-            <div className=\"px-6 sm:px-10 py-10 space-y-6\">\r\n-              <span className=\"inline-flex px-4 py-1 rounded-full bg-blue-100 text-blue-700 text-sm font-semibold uppercase tracking-widest\">\r\n-                {selectedService.comingSoon ? \"Coming Soon\" : \"Book Now\"}\r\n-              </span>\r\n-              <h1 className=\"text-3xl sm:text-4xl font-bold\" style={{ color: \"#000\" }}>\r\n-                {selectedService.title}\r\n-              </h1>\r\n-              <div className=\"relative grid grid-cols-2 bg-blue-50 border border-blue-200 rounded-full overflow-hidden w-full sm:w-auto\">\r\n-                <div\r\n-                  className=\"absolute inset-y-0 w-1/2 rounded-full bg-white shadow transition-transform duration-300 ease-out\"\r\n-                  style={{ transform: plan === \"revive\" ? \"translateX(100%)\" : \"translateX(0%)\" }}\r\n-                  aria-hidden=\"true\"\r\n-                />\r\n-                <button\r\n-                  type=\"button\"\r\n-                  onClick={() => setPlan(\"base\")}\r\n-                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n-                    plan === \"base\" ? \"text-blue-700\" : \"text-blue-500 hover:text-blue-600\"\r\n-                  }`}\r\n-                >\r\n-                  Base\r\n-                </button>\r\n-                <button\r\n-                  type=\"button\"\r\n-                  onClick={() => {\r\n-                    if (selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\") return;\r\n-                    setPlan(\"revive\");\r\n-                  }}\r\n-                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n-                    plan === \"revive\" ? \"text-blue-700\" : \"text-blue-500 hover:text-blue-600\"\r\n-                  } ${\r\n-                    selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"\r\n-                      ? \"opacity-50 cursor-not-allowed\"\r\n-                      : \"\"\r\n-                  }`}\r\n-                  disabled={selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"}\r\n-                >\r\n-                  Revive\r\n-                </button>\r\n-              </div>\r\n-              <div className=\"bg-blue-50 border border-blue-200 rounded-2xl p-1\">\r\n-                <div className=\"grid grid-cols-3 gap-2\">\r\n-                  {VEHICLE_OPTIONS.map((option, index) => {\r\n-                    const isSelected = vehicleType === option.id;\r\n-                    const alignment = index === 0 ? \"justify-start\" : index === 1 ? \"justify-center\" : \"justify-end\";\r\n-                    return (\r\n-                      <div key={option.id} className={`flex ${alignment}`}>\r\n-                        <button\r\n-                          type=\"button\"\r\n-                          onClick={() => setVehicleType(option.id)}\r\n-                          className={`px-4 py-2 text-sm font-semibold rounded-full transition-colors ${\r\n-                            isSelected\r\n-                              ? \"bg-white text-blue-700 shadow\"\r\n-                              : \"text-blue-500 hover:text-blue-600\"\r\n-                          }`}\r\n-                        >\r\n-                          {option.label}\r\n-                        </button>\r\n-                      </div>\r\n-                    );\r\n-                  })}\r\n-                </div>\r\n-              </div>\r\n-              <div className=\"space-y-1\">\r\n-                <div className=\"text-xl font-semibold text-blue-700\">\r\n-                  {totalPrice !== null ? `Total: $${totalPrice}` : \"Contact us\"}\r\n-                </div>\r\n-              </div>\r\n-              {planFeatures.length ? (\r\n-                <ul className=\"grid sm:grid-cols-2 gap-3 text-blue-800 text-sm sm:text-base\">\r\n-                  {planFeatures.map((feature) => (\r\n-                    <li key={feature.text} className=\"flex items-start gap-3\">\r\n-                      <span className=\"text-lg leading-none mt-[2px]\">{feature.status}</span>\r\n-                      <span>{feature.text}</span>\r\n-                    </li>\r\n-                  ))}\r\n-                </ul>\r\n-              ) : null}\r\n-              {!selectedService.comingSoon && (\r\n-                <div className=\"flex flex-col sm:flex-row gap-3 pt-4\">\r\n-                  <button\r\n-                    type=\"button\"\r\n-                    onClick={handleOpenBooking}\r\n-                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-                  >\r\n-                    Begin Booking\r\n-                  </button>\r\n-                  <a\r\n-                    href=\"tel:+17828275010\"\r\n-                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg border border-blue-300 text-blue-700 hover:bg-blue-100 font-semibold text-center\"\r\n-                  >\r\n-                    Call +1 (782) 827-5010\r\n-                  </a>\r\n-                </div>\r\n-              )}\r\n-              {selectedService.comingSoon && (\r\n-                <div className=\"rounded-xl border border-dashed border-blue-200 bg-blue-50/70 px-4 py-6 text-blue-700 text-sm\">\r\n-                  Subscriptions are almost here. We’ll share flexible plans that keep your vehicle spotless on your schedule.\r\n-                </div>\r\n-              )}\r\n-            </div>\r\n-          </div>\r\n-        ) : (\r\n-          <div className=\"bg-white border border-blue-100 rounded-3xl shadow-lg p-10 text-center space-y-6\">\r\n-            <h1 className=\"text-3xl font-bold\" style={{ color: \"#000\" }}>Select a service to get started</h1>\r\n-            <p className=\"text-blue-700\">\r\n-              We couldn’t find the package you were looking for. Choose one of our detailing options to continue.\r\n-            </p>\r\n-            {fallbackService && (\r\n-              <button\r\n-                type=\"button\"\r\n-                onClick={() => router.push({ pathname: \"/book\", query: { service: fallbackService.id } })}\r\n-                className=\"px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-              >\r\n-                View {fallbackService.title}\r\n-              </button>\r\n-            )}\r\n-          </div>\r\n-        )}\r\n-      </section>\r\n-      <Footer />\r\n-      {showBooking && selectedService && !selectedService.comingSoon && (\r\n-        <Booking service={selectedService} onClose={handleCloseBooking} />\r\n-      )}\r\n-    </main>\r\n-  );\r\n-}\r\n-       \n-import { useEffect, useMemo, useState } from \"react\";\r\n-import dynamic from \"next/dynamic\";\r\n-import { useRouter } from \"next/router\";\r\n-import Navigation from \"@/components/Navigation\";\r\n-import Footer from \"@/components/Footer\";\r\n-import { SERVICES, getServiceById } from \"@/data/services\";\r\n-\r\n-const Booking = dynamic(() => import(\"@/components/Booking\"), { ssr: false });\r\n-\r\n-const VEHICLE_OPTIONS = [\r\n-  { id: \"sedan\", label: \"Sedan\", adjustment: 0 },\r\n-  { id: \"suv\", label: \"SUV\", adjustment: 20 },\r\n-  { id: \"truck\", label: \"Truck\", adjustment: 40 },\r\n-];\r\n-\r\n-export default function BookPage() {\r\n-  const router = useRouter();\r\n-  const { service: serviceId } = router.query;\r\n-  const selectedService = useMemo(() => {\r\n-    if (typeof serviceId !== \"string\") return null;\r\n-    return getServiceById(serviceId) || null;\r\n-  }, [serviceId]);\r\n-\r\n-  const [showBooking, setShowBooking] = useState(false);\r\n-  const [plan, setPlan] = useState(\"base\");\r\n-  const [vehicleType, setVehicleType] = useState(VEHICLE_OPTIONS[0].id);\r\n-\r\n-  const planFeatures = useMemo(() => {\r\n-    if (!selectedService?.features) return [];\r\n-\r\n-    if (plan === \"revive\") {\r\n-      return selectedService.features\r\n-        .filter((feature) => feature.revive === \"✅\")\r\n-        .map((feature) => ({ text: feature.text, status: \"✅\" }));\r\n-    }\r\n-\r\n-    const baseIncluded = selectedService.features\r\n-      .filter((feature) => feature.base === \"✅\")\r\n-      .map((feature) => ({ text: feature.text, status: \"✅\" }));\r\n-\r\n-    const reviveExtras = selectedService.features\r\n-      .filter((feature) => feature.base !== \"✅\" && feature.revive === \"✅\")\r\n-      .map((feature) => ({ text: feature.text, status: \"X\" }));\r\n-\r\n-    return [...baseIncluded, ...reviveExtras];\r\n-  }, [selectedService, plan]);\r\n-\r\n-  const basePlanPrice = useMemo(() => {\r\n-    if (!selectedService) return null;\r\n-    if (plan === \"revive\" && typeof selectedService.revivePrice === \"number\") {\r\n-      return selectedService.revivePrice;\r\n-    }\r\n-    if (plan === \"base\" && typeof selectedService.basePrice === \"number\") {\r\n-      return selectedService.basePrice;\r\n-    }\r\n-    return null;\r\n-  }, [plan, selectedService]);\r\n-\r\n-  const vehicleOption = useMemo(\r\n-    () => VEHICLE_OPTIONS.find((option) => option.id === vehicleType) ?? VEHICLE_OPTIONS[0],\r\n-    [vehicleType]\r\n-  );\r\n-\r\n-  const totalPrice = useMemo(() => {\r\n-    if (typeof basePlanPrice !== \"number\") return null;\r\n-    return basePlanPrice + vehicleOption.adjustment;\r\n-  }, [basePlanPrice, vehicleOption.adjustment]);\r\n-\r\n-  useEffect(() => {\r\n-    setPlan(\"base\");\r\n-    setVehicleType(VEHICLE_OPTIONS[0].id);\r\n-  }, [selectedService?.id]);\r\n-\r\n-  useEffect(() => {\r\n-    if (!router.isReady) return;\r\n-    window.scrollTo({ top: 0, behavior: \"auto\" });\r\n-  }, [router.isReady]);\r\n-\r\n-  useEffect(() => {\r\n-    document.body.style.overflow = showBooking ? \"hidden\" : \"auto\";\r\n-    return () => {\r\n-      document.body.style.overflow = \"auto\";\r\n-    };\r\n-  }, [showBooking]);\r\n-\r\n-  const handleOpenBooking = () => {\r\n-    if (selectedService && !selectedService.comingSoon) {\r\n-      setShowBooking(true);\r\n-    }\r\n-  };\r\n-\r\n-  const handleCloseBooking = () => {\r\n-    setShowBooking(false);\r\n-  };\r\n-\r\n-  const fallbackService = SERVICES.find((svc) => !svc.comingSoon);\r\n-\r\n-  return (\r\n-    <main className=\"min-h-screen bg-blue-50 text-blue-900\">\r\n-      <Navigation />\r\n-      <section className=\"max-w-4xl mx-auto px-4 py-20\">\r\n-        {selectedService ? (\r\n-          <div className=\"bg-white border border-blue-100 rounded-3xl shadow-xl overflow-hidden\">\r\n-            <div className=\"px-6 sm:px-10 py-10 space-y-6\">\r\n-              <span className=\"inline-flex px-4 py-1 rounded-full bg-blue-100 text-blue-700 text-sm font-semibold uppercase tracking-widest\">\r\n-                {selectedService.comingSoon ? \"Coming Soon\" : \"Book Now\"}\r\n-              </span>\r\n-              <h1 className=\"text-3xl sm:text-4xl font-bold\" style={{ color: \"#000\" }}>\r\n-                {selectedService.title}\r\n-              </h1>\r\n-              <div className=\"relative grid grid-cols-2 bg-blue-50 border border-blue-200 rounded-full overflow-hidden w-full sm:w-auto\">\r\n-                <div\r\n-                  className=\"absolute inset-y-0 w-1/2 rounded-full bg-white shadow transition-transform duration-300 ease-out\"\r\n-                  style={{ transform: plan === \"revive\" ? \"translateX(100%)\" : \"translateX(0%)\" }}\r\n-                  aria-hidden=\"true\"\r\n-                />\r\n-                <button\r\n-                  type=\"button\"\r\n-                  onClick={() => setPlan(\"base\")}\r\n-                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n-                    plan === \"base\" ? \"text-blue-700\" : \"text-blue-500 hover:text-blue-600\"\r\n-                  }`}\r\n-                >\r\n-                  Base\r\n-                </button>\r\n-                <button\r\n-                  type=\"button\"\r\n-                  onClick={() => {\r\n-                    if (selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\") return;\r\n-                    setPlan(\"revive\");\r\n-                  }}\r\n-                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n-                    plan === \"revive\" ? \"text-blue-700\" : \"text-blue-500 hover:text-blue-600\"\r\n-                  } ${\r\n-                    selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"\r\n-                      ? \"opacity-50 cursor-not-allowed\"\r\n-                      : \"\"\r\n-                  }`}\r\n-                  disabled={selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"}\r\n-                >\r\n-                  Revive\r\n-                </button>\r\n-              </div>\r\n-              <div className=\"bg-blue-50 border border-blue-200 rounded-2xl p-1\">\r\n-                <div className=\"grid grid-cols-3 gap-2\">\r\n-                  {VEHICLE_OPTIONS.map((option, index) => {\r\n-                    const isSelected = vehicleType === option.id;\r\n-                    const alignment = index === 0 ? \"justify-start\" : index === 1 ? \"justify-center\" : \"justify-end\";\r\n-                    return (\r\n-                      <div key={option.id} className={`flex ${alignment}`}>\r\n-                        <button\r\n-                          type=\"button\"\r\n-                          onClick={() => setVehicleType(option.id)}\r\n-                          className={`px-4 py-2 text-sm font-semibold rounded-full transition-colors ${\r\n-                            isSelected\r\n-                              ? \"bg-white text-blue-700 shadow\"\r\n-                              : \"text-blue-500 hover:text-blue-600\"\r\n-                          }`}\r\n-                        >\r\n-                          {option.label}\r\n-                        </button>\r\n-                      </div>\r\n-                    );\r\n-                  })}\r\n-                </div>\r\n-              </div>\r\n-              <div className=\"space-y-1\">\r\n-                <div className=\"text-xl font-semibold text-blue-700\">\r\n-                  {totalPrice !== null ? `Total: $${totalPrice}` : \"Contact us\"}\r\n-                </div>\r\n-              </div>\r\n-              {planFeatures.length ? (\r\n-                <ul className=\"grid sm:grid-cols-2 gap-3 text-blue-800 text-sm sm:text-base\">\r\n-                  {planFeatures.map((feature) => (\r\n-                    <li key={feature.text} className=\"flex items-start gap-3\">\r\n-                      <span className=\"text-lg leading-none mt-[2px]\">{feature.status}</span>\r\n-                      <span>{feature.text}</span>\r\n-                    </li>\r\n-                  ))}\r\n-                </ul>\r\n-              ) : null}\r\n-              {!selectedService.comingSoon && (\r\n-                <div className=\"flex flex-col sm:flex-row gap-3 pt-4\">\r\n-                  <button\r\n-                    type=\"button\"\r\n-                    onClick={handleOpenBooking}\r\n-                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-                  >\r\n-                    Begin Booking\r\n-                  </button>\r\n-                  <a\r\n-                    href=\"tel:+17828275010\"\r\n-                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg border border-blue-300 text-blue-700 hover:bg-blue-100 font-semibold text-center\"\r\n-                  >\r\n-                    Call +1 (782) 827-5010\r\n-                  </a>\r\n-                </div>\r\n-              )}\r\n-              {selectedService.comingSoon && (\r\n-                <div className=\"rounded-xl border border-dashed border-blue-200 bg-blue-50/70 px-4 py-6 text-blue-700 text-sm\">\r\n-                  Subscriptions are almost here. We’ll share flexible plans that keep your vehicle spotless on your schedule.\r\n-                </div>\r\n-              )}\r\n-            </div>\r\n-          </div>\r\n-        ) : (\r\n-          <div className=\"bg-white border border-blue-100 rounded-3xl shadow-lg p-10 text-center space-y-6\">\r\n-            <h1 className=\"text-3xl font-bold\" style={{ color: \"#000\" }}>Select a service to get started</h1>\r\n-            <p className=\"text-blue-700\">\r\n-              We couldn’t find the package you were looking for. Choose one of our detailing options to continue.\r\n-            </p>\r\n-            {fallbackService && (\r\n-              <button\r\n-                type=\"button\"\r\n-                onClick={() => router.push({ pathname: \"/book\", query: { service: fallbackService.id } })}\r\n-                className=\"px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-              >\r\n-                View {fallbackService.title}\r\n-              </button>\r\n-            )}\r\n-          </div>\r\n-        )}\r\n-      </section>\r\n-      <Footer />\r\n-      {showBooking && selectedService && !selectedService.comingSoon && (\r\n-        <Booking service={selectedService} onClose={handleCloseBooking} />\r\n-      )}\r\n-    </main>\r\n-  );\r\n-}\r\n        \n\\ No newline at end of file\n"
                },
                {
                    "date": 1761451017811,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,254 @@\n+import { useEffect, useMemo, useState } from \"react\";\r\n+import dynamic from \"next/dynamic\";\r\n+import { useRouter } from \"next/router\";\r\n+import Navigation from \"@/components/Navigation\";\r\n+import Footer from \"@/components/Footer\";\r\n+// Fetch services from MongoDB via API\r\n+import { FiCheck, FiX } from \"react-icons/fi\";\r\n+\r\n+const Booking = dynamic(() => import(\"@/components/Booking\"), { ssr: false });\r\n+\r\n+const VEHICLE_OPTIONS = [\r\n+  { id: \"sedan\", label: \"Sedan\", adjustment: 0 },\r\n+  { id: \"suv\", label: \"SUV\", adjustment: 20 },\r\n+  { id: \"truck\", label: \"Truck\", adjustment: 40 },\r\n+];\r\n+\r\n+\r\n+  const router = useRouter();\r\n+  const { service: serviceId } = router.query;\r\n+  const [services, setServices] = useState([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+  const [selectedService, setSelectedService] = useState(null);\r\n+  const [showBooking, setShowBooking] = useState(false);\r\n+  const [plan, setPlan] = useState(\"base\");\r\n+  const [vehicleType, setVehicleType] = useState(VEHICLE_OPTIONS[0].id);\r\n+\r\n+  useEffect(() => {\r\n+    let cancelled = false;\r\n+    async function fetchServices() {\r\n+      setLoading(true);\r\n+      try {\r\n+        const resp = await fetch('/api/services');\r\n+        const data = await resp.json().catch(() => ({ services: [] }));\r\n+        const list = Array.isArray(data.services) ? data.services : [];\r\n+        setServices(list);\r\n+        setLoading(false);\r\n+        if (!cancelled) {\r\n+          // Find the selected service by id\r\n+          if (typeof serviceId === \"string\") {\r\n+            const svc = list.find((s) => s.id === serviceId);\r\n+            setSelectedService(svc || null);\r\n+          } else {\r\n+            setSelectedService(null);\r\n+          }\r\n+        }\r\n+      } catch {\r\n+        setServices([]);\r\n+        setSelectedService(null);\r\n+        setLoading(false);\r\n+      }\r\n+    }\r\n+    fetchServices();\r\n+    return () => { cancelled = true; };\r\n+  }, [serviceId]);\r\n+\r\n+  const planFeatures = useMemo(() => {\r\n+    if (!selectedService) return [];\r\n+    const baseFeatures = selectedService.baseFeatures ?? [];\r\n+    const reviveFeatures = selectedService.reviveFeatures ?? [];\r\n+    if (plan === \"revive\") {\r\n+      return [...baseFeatures, ...reviveFeatures].map((feature) => ({ text: feature, status: \"✅\" }));\r\n+    }\r\n+    const baseIncluded = baseFeatures.map((feature) => ({ text: feature, status: \"✅\" }));\r\n+    const reviveExtras = reviveFeatures.map((feature) => ({ text: feature, status: \"❌\" }));\r\n+    return [...baseIncluded, ...reviveExtras];\r\n+  }, [selectedService, plan]);\r\n+\r\n+  const basePlanPrice = useMemo(() => {\r\n+    if (!selectedService) return null;\r\n+    if (plan === \"revive\" && typeof selectedService.revivePrice === \"number\") {\r\n+      return selectedService.revivePrice;\r\n+    }\r\n+    if (plan === \"base\" && typeof selectedService.basePrice === \"number\") {\r\n+      return selectedService.basePrice;\r\n+    }\r\n+    return null;\r\n+  }, [plan, selectedService]);\r\n+\r\n+  const vehicleOption = useMemo(\r\n+    () => VEHICLE_OPTIONS.find((option) => option.id === vehicleType) ?? VEHICLE_OPTIONS[0],\r\n+    [vehicleType]\r\n+  );\r\n+\r\n+  const totalPrice = useMemo(() => {\r\n+    if (typeof basePlanPrice !== \"number\") return null;\r\n+    return basePlanPrice + vehicleOption.adjustment;\r\n+  }, [basePlanPrice, vehicleOption.adjustment]);\r\n+\r\n+  useEffect(() => {\r\n+    setPlan(\"base\");\r\n+    setVehicleType(VEHICLE_OPTIONS[0].id);\r\n+  }, [selectedService?.id]);\r\n+\r\n+  useEffect(() => {\r\n+    if (!router.isReady) return;\r\n+    window.scrollTo({ top: 0, behavior: \"auto\" });\r\n+  }, [router.isReady]);\r\n+\r\n+  useEffect(() => {\r\n+    document.body.style.overflow = showBooking ? \"hidden\" : \"auto\";\r\n+    return () => {\r\n+      document.body.style.overflow = \"auto\";\r\n+    };\r\n+  }, [showBooking]);\r\n+\r\n+  const handleOpenBooking = () => {\r\n+    if (selectedService && !selectedService.comingSoon) {\r\n+      setShowBooking(true);\r\n+    }\r\n+  };\r\n+\r\n+  const handleCloseBooking = () => {\r\n+    setShowBooking(false);\r\n+  };\r\n+\r\n+  const fallbackService = useMemo(() => {\r\n+    return services.find((svc) => !svc.comingSoon);\r\n+  }, [services]);\r\n+\r\n+  return (\r\n+  <main className=\"min-h-screen bg-gradient-to-b from-slate-50 via-white to-slate-50\" style={{ color: '#0A0A0A' }}>\r\n+      <Navigation />\r\n+      <section className=\"max-w-4xl mx-auto px-4 py-20\">\r\n+        {loading ? (\r\n+          <div className=\"bg-white/95 border rounded-3xl shadow-xl overflow-hidden text-center p-10 text-blue-600\">Loading services...</div>\r\n+        ) : selectedService ? (\r\n+          <div className=\"bg-white/95 border rounded-3xl shadow-xl overflow-hidden\" style={{ backgroundColor: 'rgba(255,255,255,0.95)', borderColor: '#e5e7eb' }}>\r\n+            <div className=\"px-6 sm:px-10 py-10 space-y-6\">\r\n+              <span className=\"inline-flex px-4 py-1 rounded-full bg-blue-100 text-blue-700 text-xs font-semibold uppercase tracking-widest\">\r\n+                {selectedService.comingSoon ? \"Coming Soon\" : \"Book Now\"}\r\n+              </span>\r\n+              <h1 className=\"text-3xl sm:text-4xl font-bold\" style={{ color: '#0A0A0A' }}>\r\n+                {selectedService.title}\r\n+              </h1>\r\n+              <div className=\"relative grid grid-cols-2 bg-slate-100 border border-slate-200 rounded-full overflow-hidden w-full sm:w-auto\">\r\n+                <div\r\n+                  className=\"absolute inset-y-0 w-1/2 rounded-full bg-white shadow transition-transform duration-300 ease-out\"\r\n+                  style={{ transform: plan === \"revive\" ? \"translateX(100%)\" : \"translateX(0%)\" }}\r\n+                  aria-hidden=\"true\"\r\n+                />\r\n+                <button\r\n+                  type=\"button\"\r\n+                  onClick={() => setPlan(\"base\")}\r\n+                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors`}\r\n+                  style={{ color: plan === 'base' ? '#0A0A0A' : '#111827' }}\r\n+                >\r\n+                  Base\r\n+                </button>\r\n+                <button\r\n+                  type=\"button\"\r\n+                  onClick={() => {\r\n+                    if (selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\") return;\r\n+                    setPlan(\"revive\");\r\n+                  }}\r\n+                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n+                    selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"\r\n+                      ? \"opacity-50 cursor-not-allowed\"\r\n+                      : \"\"\r\n+                  }`}\r\n+                  style={{ color: plan === 'revive' ? '#0A0A0A' : '#111827' }}\r\n+                  disabled={selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"}\r\n+                >\r\n+                  Revive\r\n+                </button>\r\n+              </div>\r\n+              <div className=\"bg-slate-100 border border-slate-200 rounded-2xl p-1\">\r\n+                <div className=\"grid grid-cols-3 gap-2\">\r\n+                  {VEHICLE_OPTIONS.map((option, index) => {\r\n+                    const isSelected = vehicleType === option.id;\r\n+                    const alignment = index === 0 ? \"justify-start\" : index === 1 ? \"justify-center\" : \"justify-end\";\r\n+                    return (\r\n+                      <div key={option.id} className={`flex ${alignment}`}>\r\n+                        <button\r\n+                          type=\"button\"\r\n+                          onClick={() => setVehicleType(option.id)}\r\n+                          className={`px-4 py-2 text-sm font-semibold rounded-full transition-colors ${isSelected ? 'bg-white shadow' : ''}`}\r\n+                          style={{ color: isSelected ? '#0A0A0A' : '#111827' }}\r\n+                        >\r\n+                          {option.label}\r\n+                        </button>\r\n+                      </div>\r\n+                    );\r\n+                  })}\r\n+                </div>\r\n+              </div>\r\n+              <div className=\"space-y-1\">\r\n+                <div className=\"text-xl font-semibold\" style={{ color: '#0A0A0A' }}>\r\n+                  {totalPrice !== null ? `Total: $${totalPrice}` : \"Contact us\"}\r\n+                </div>\r\n+              </div>\r\n+              {planFeatures.length ? (\r\n+                <ul className=\"grid sm:grid-cols-2 gap-3 text-sm sm:text-base\" style={{ color: '#111827' }}>\r\n+                  {planFeatures.map((feature) => (\r\n+                    <li key={feature.text} className=\"flex items-start gap-3\">\r\n+                      {feature.status === \"✅\" ? (\r\n+                        <FiCheck className=\"mt-0.5\" style={{ color: '#16A34A' }} aria-hidden=\"true\" />\r\n+                      ) : (\r\n+                        <FiX className=\"mt-0.5\" style={{ color: '#9CA3AF' }} aria-hidden=\"true\" />\r\n+                      )}\r\n+                      <span>{feature.text}</span>\r\n+                    </li>\r\n+                  ))}\r\n+                </ul>\r\n+              ) : null}\r\n+              {!selectedService.comingSoon && (\r\n+                <div className=\"flex flex-col sm:flex-row gap-3 pt-4\">\r\n+                  <button\r\n+                    type=\"button\"\r\n+                    onClick={handleOpenBooking}\r\n+                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+                  >\r\n+                    Begin Booking\r\n+                  </button>\r\n+                  <a\r\n+                    href=\"tel:+17828275010\"\r\n+                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg border border-blue-300 text-blue-700 hover:bg-blue-100 font-semibold text-center\"\r\n+                  >\r\n+                    Call +1 (782) 827-5010\r\n+                  </a>\r\n+                </div>\r\n+              )}\r\n+              {selectedService.comingSoon && (\r\n+                <div className=\"rounded-xl border border-dashed border-blue-200 bg-blue-50/70 px-4 py-6 text-blue-700 text-sm\">\r\n+                  Subscriptions are almost here. We’ll share flexible plans that keep your vehicle spotless on your schedule.\r\n+                </div>\r\n+              )}\r\n+            </div>\r\n+          </div>\r\n+        ) : (\r\n+          <div className=\"bg-white border border-slate-200 rounded-3xl shadow-lg p-10 text-center space-y-6\">\r\n+            <h1 className=\"text-3xl font-bold\" style={{ color: '#0A0A0A' }}>Select a service to get started</h1>\r\n+            <p style={{ color: '#1F2937' }}>\r\n+              We couldn’t find the package you were looking for. Choose one of our detailing options to continue.\r\n+            </p>\r\n+            {fallbackService && (\r\n+              <button\r\n+                type=\"button\"\r\n+                onClick={() => router.push({ pathname: \"/book\", query: { service: fallbackService.id } })}\r\n+                className=\"px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+              >\r\n+                View {fallbackService.title}\r\n+              </button>\r\n+            )}\r\n+          </div>\r\n+        )}\r\n+      </section>\r\n+      <Footer />\r\n+      {showBooking && selectedService && !selectedService.comingSoon && (\r\n+        <Booking service={selectedService} onClose={handleCloseBooking} />\r\n+      )}\r\n+    </main>\r\n+  );\r\n+}\r\n+       \n\\ No newline at end of file\n"
                },
                {
                    "date": 1761451089610,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,12 +113,11 @@\n     setShowBooking(false);\r\n   };\r\n \r\n   const fallbackService = useMemo(() => {\r\n-    return services.find((svc) => !svc.comingSoon);\r\n-  }, [services]);\r\n-\r\n-  return (\r\n+        return services.find((svc) => !svc.comingSoon);\r\n+      }, [services]);\r\n+    return (\r\n   <main className=\"min-h-screen bg-gradient-to-b from-slate-50 via-white to-slate-50\" style={{ color: '#0A0A0A' }}>\r\n       <Navigation />\r\n       <section className=\"max-w-4xl mx-auto px-4 py-20\">\r\n         {loading ? (\r\n@@ -249,233 +248,5 @@\n         <Booking service={selectedService} onClose={handleCloseBooking} />\r\n       )}\r\n     </main>\r\n   );\r\n-}\r\n-       \n-import { useEffect, useMemo, useState } from \"react\";\r\n-import dynamic from \"next/dynamic\";\r\n-import { useRouter } from \"next/router\";\r\n-import Navigation from \"@/components/Navigation\";\r\n-import Footer from \"@/components/Footer\";\r\n-import { SERVICES, getServiceById } from \"@/data/services\";\r\n-import { FiCheck, FiX } from \"react-icons/fi\";\r\n-\r\n-const Booking = dynamic(() => import(\"@/components/Booking\"), { ssr: false });\r\n-\r\n-const VEHICLE_OPTIONS = [\r\n-  { id: \"sedan\", label: \"Sedan\", adjustment: 0 },\r\n-  { id: \"suv\", label: \"SUV\", adjustment: 20 },\r\n-  { id: \"truck\", label: \"Truck\", adjustment: 40 },\r\n-];\r\n-\r\n-export default function BookPage() {\r\n-  const router = useRouter();\r\n-  const { service: serviceId } = router.query;\r\n-  const selectedService = useMemo(() => {\r\n-    if (typeof serviceId !== \"string\") return null;\r\n-    return getServiceById(serviceId) || null;\r\n-  }, [serviceId]);\r\n-\r\n-  const [showBooking, setShowBooking] = useState(false);\r\n-  const [plan, setPlan] = useState(\"base\");\r\n-  const [vehicleType, setVehicleType] = useState(VEHICLE_OPTIONS[0].id);\r\n-\r\n-  const planFeatures = useMemo(() => {\r\n-    if (!selectedService) return [];\r\n-\r\n-    const baseFeatures = selectedService.baseFeatures ?? [];\r\n-    const reviveFeatures = selectedService.reviveFeatures ?? [];\r\n-\r\n-    if (plan === \"revive\") {\r\n-      return [...baseFeatures, ...reviveFeatures].map((feature) => ({ text: feature, status: \"✅\" }));\r\n-    }\r\n-\r\n-    const baseIncluded = baseFeatures.map((feature) => ({ text: feature, status: \"✅\" }));\r\n-    const reviveExtras = reviveFeatures.map((feature) => ({ text: feature, status: \"❌\" }));\r\n-\r\n-    return [...baseIncluded, ...reviveExtras];\r\n-  }, [selectedService, plan]);\r\n-\r\n-  const basePlanPrice = useMemo(() => {\r\n-    if (!selectedService) return null;\r\n-    if (plan === \"revive\" && typeof selectedService.revivePrice === \"number\") {\r\n-      return selectedService.revivePrice;\r\n-    }\r\n-    if (plan === \"base\" && typeof selectedService.basePrice === \"number\") {\r\n-      return selectedService.basePrice;\r\n-    }\r\n-    return null;\r\n-  }, [plan, selectedService]);\r\n-\r\n-  const vehicleOption = useMemo(\r\n-    () => VEHICLE_OPTIONS.find((option) => option.id === vehicleType) ?? VEHICLE_OPTIONS[0],\r\n-    [vehicleType]\r\n-  );\r\n-\r\n-  const totalPrice = useMemo(() => {\r\n-    if (typeof basePlanPrice !== \"number\") return null;\r\n-    return basePlanPrice + vehicleOption.adjustment;\r\n-  }, [basePlanPrice, vehicleOption.adjustment]);\r\n-\r\n-  useEffect(() => {\r\n-    setPlan(\"base\");\r\n-    setVehicleType(VEHICLE_OPTIONS[0].id);\r\n-  }, [selectedService?.id]);\r\n-\r\n-  useEffect(() => {\r\n-    if (!router.isReady) return;\r\n-    window.scrollTo({ top: 0, behavior: \"auto\" });\r\n-  }, [router.isReady]);\r\n-\r\n-  useEffect(() => {\r\n-    document.body.style.overflow = showBooking ? \"hidden\" : \"auto\";\r\n-    return () => {\r\n-      document.body.style.overflow = \"auto\";\r\n-    };\r\n-  }, [showBooking]);\r\n-\r\n-  const handleOpenBooking = () => {\r\n-    if (selectedService && !selectedService.comingSoon) {\r\n-      setShowBooking(true);\r\n-    }\r\n-  };\r\n-\r\n-  const handleCloseBooking = () => {\r\n-    setShowBooking(false);\r\n-  };\r\n-\r\n-  const fallbackService = SERVICES.find((svc) => !svc.comingSoon);\r\n-\r\n-  return (\r\n-  <main className=\"min-h-screen bg-gradient-to-b from-slate-50 via-white to-slate-50\" style={{ color: '#0A0A0A' }}>\r\n-      <Navigation />\r\n-      <section className=\"max-w-4xl mx-auto px-4 py-20\">\r\n-        {selectedService ? (\r\n-          <div className=\"bg-white/95 border rounded-3xl shadow-xl overflow-hidden\" style={{ backgroundColor: 'rgba(255,255,255,0.95)', borderColor: '#e5e7eb' }}>\r\n-            <div className=\"px-6 sm:px-10 py-10 space-y-6\">\r\n-              <span className=\"inline-flex px-4 py-1 rounded-full bg-blue-100 text-blue-700 text-xs font-semibold uppercase tracking-widest\">\r\n-                {selectedService.comingSoon ? \"Coming Soon\" : \"Book Now\"}\r\n-              </span>\r\n-              <h1 className=\"text-3xl sm:text-4xl font-bold\" style={{ color: '#0A0A0A' }}>\r\n-                {selectedService.title}\r\n-              </h1>\r\n-              <div className=\"relative grid grid-cols-2 bg-slate-100 border border-slate-200 rounded-full overflow-hidden w-full sm:w-auto\">\r\n-                <div\r\n-                  className=\"absolute inset-y-0 w-1/2 rounded-full bg-white shadow transition-transform duration-300 ease-out\"\r\n-                  style={{ transform: plan === \"revive\" ? \"translateX(100%)\" : \"translateX(0%)\" }}\r\n-                  aria-hidden=\"true\"\r\n-                />\r\n-                <button\r\n-                  type=\"button\"\r\n-                  onClick={() => setPlan(\"base\")}\r\n-                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors`}\r\n-                  style={{ color: plan === 'base' ? '#0A0A0A' : '#111827' }}\r\n-                >\r\n-                  Base\r\n-                </button>\r\n-                <button\r\n-                  type=\"button\"\r\n-                  onClick={() => {\r\n-                    if (selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\") return;\r\n-                    setPlan(\"revive\");\r\n-                  }}\r\n-                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n-                    selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"\r\n-                      ? \"opacity-50 cursor-not-allowed\"\r\n-                      : \"\"\r\n-                  }`}\r\n-                  style={{ color: plan === 'revive' ? '#0A0A0A' : '#111827' }}\r\n-                  disabled={selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"}\r\n-                >\r\n-                  Revive\r\n-                </button>\r\n-              </div>\r\n-              <div className=\"bg-slate-100 border border-slate-200 rounded-2xl p-1\">\r\n-                <div className=\"grid grid-cols-3 gap-2\">\r\n-                  {VEHICLE_OPTIONS.map((option, index) => {\r\n-                    const isSelected = vehicleType === option.id;\r\n-                    const alignment = index === 0 ? \"justify-start\" : index === 1 ? \"justify-center\" : \"justify-end\";\r\n-                    return (\r\n-                      <div key={option.id} className={`flex ${alignment}`}>\r\n-                        <button\r\n-                          type=\"button\"\r\n-                          onClick={() => setVehicleType(option.id)}\r\n-                          className={`px-4 py-2 text-sm font-semibold rounded-full transition-colors ${isSelected ? 'bg-white shadow' : ''}`}\r\n-                          style={{ color: isSelected ? '#0A0A0A' : '#111827' }}\r\n-                        >\r\n-                          {option.label}\r\n-                        </button>\r\n-                      </div>\r\n-                    );\r\n-                  })}\r\n-                </div>\r\n-              </div>\r\n-              <div className=\"space-y-1\">\r\n-                <div className=\"text-xl font-semibold\" style={{ color: '#0A0A0A' }}>\r\n-                  {totalPrice !== null ? `Total: $${totalPrice}` : \"Contact us\"}\r\n-                </div>\r\n-              </div>\r\n-              {planFeatures.length ? (\r\n-                <ul className=\"grid sm:grid-cols-2 gap-3 text-sm sm:text-base\" style={{ color: '#111827' }}>\r\n-                  {planFeatures.map((feature) => (\r\n-                    <li key={feature.text} className=\"flex items-start gap-3\">\r\n-                      {feature.status === \"✅\" ? (\r\n-                        <FiCheck className=\"mt-0.5\" style={{ color: '#16A34A' }} aria-hidden=\"true\" />\r\n-                      ) : (\r\n-                        <FiX className=\"mt-0.5\" style={{ color: '#9CA3AF' }} aria-hidden=\"true\" />\r\n-                      )}\r\n-                      <span>{feature.text}</span>\r\n-                    </li>\r\n-                  ))}\r\n-                </ul>\r\n-              ) : null}\r\n-              {!selectedService.comingSoon && (\r\n-                <div className=\"flex flex-col sm:flex-row gap-3 pt-4\">\r\n-                  <button\r\n-                    type=\"button\"\r\n-                    onClick={handleOpenBooking}\r\n-                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-                  >\r\n-                    Begin Booking\r\n-                  </button>\r\n-                  <a\r\n-                    href=\"tel:+17828275010\"\r\n-                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg border border-blue-300 text-blue-700 hover:bg-blue-100 font-semibold text-center\"\r\n-                  >\r\n-                    Call +1 (782) 827-5010\r\n-                  </a>\r\n-                </div>\r\n-              )}\r\n-              {selectedService.comingSoon && (\r\n-                <div className=\"rounded-xl border border-dashed border-blue-200 bg-blue-50/70 px-4 py-6 text-blue-700 text-sm\">\r\n-                  Subscriptions are almost here. We’ll share flexible plans that keep your vehicle spotless on your schedule.\r\n-                </div>\r\n-              )}\r\n-            </div>\r\n-          </div>\r\n-        ) : (\r\n-          <div className=\"bg-white border border-slate-200 rounded-3xl shadow-lg p-10 text-center space-y-6\">\r\n-            <h1 className=\"text-3xl font-bold\" style={{ color: '#0A0A0A' }}>Select a service to get started</h1>\r\n-            <p style={{ color: '#1F2937' }}>\r\n-              We couldn’t find the package you were looking for. Choose one of our detailing options to continue.\r\n-            </p>\r\n-            {fallbackService && (\r\n-              <button\r\n-                type=\"button\"\r\n-                onClick={() => router.push({ pathname: \"/book\", query: { service: fallbackService.id } })}\r\n-                className=\"px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-              >\r\n-                View {fallbackService.title}\r\n-              </button>\r\n-            )}\r\n-          </div>\r\n-        )}\r\n-      </section>\r\n-      <Footer />\r\n-      {showBooking && selectedService && !selectedService.comingSoon && (\r\n-        <Booking service={selectedService} onClose={handleCloseBooking} />\r\n-      )}\r\n-    </main>\r\n-  );\r\n-}\r\n        \n\\ No newline at end of file\n"
                },
                {
                    "date": 1761451160591,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,253 @@\n+import { useEffect, useMemo, useState } from \"react\";\r\n+import dynamic from \"next/dynamic\";\r\n+import { useRouter } from \"next/router\";\r\n+import Navigation from \"@/components/Navigation\";\r\n+import Footer from \"@/components/Footer\";\r\n+import { FiCheck, FiX } from \"react-icons/fi\";\r\n+\r\n+const Booking = dynamic(() => import(\"@/components/Booking\"), { ssr: false });\r\n+\r\n+const VEHICLE_OPTIONS = [\r\n+  { id: \"sedan\", label: \"Sedan\", adjustment: 0 },\r\n+  { id: \"suv\", label: \"SUV\", adjustment: 20 },\r\n+  { id: \"truck\", label: \"Truck\", adjustment: 40 },\r\n+];\r\n+\r\n+export default function BookPage() {\r\n+  const router = useRouter();\r\n+  const { service: serviceId } = router.query;\r\n+  const [services, setServices] = useState([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+  const [selectedService, setSelectedService] = useState(null);\r\n+  const [showBooking, setShowBooking] = useState(false);\r\n+  const [plan, setPlan] = useState(\"base\");\r\n+  const [vehicleType, setVehicleType] = useState(VEHICLE_OPTIONS[0].id);\r\n+\r\n+  useEffect(() => {\r\n+    let cancelled = false;\r\n+    async function fetchServices() {\r\n+      setLoading(true);\r\n+      try {\r\n+        const resp = await fetch('/api/services');\r\n+        const data = await resp.json().catch(() => ({ services: [] }));\r\n+        const list = Array.isArray(data.services) ? data.services : [];\r\n+        setServices(list);\r\n+        setLoading(false);\r\n+        if (!cancelled) {\r\n+          // Find the selected service by id\r\n+          if (typeof serviceId === \"string\") {\r\n+            const svc = list.find((s) => s.id === serviceId);\r\n+            setSelectedService(svc || null);\r\n+          } else {\r\n+            setSelectedService(null);\r\n+          }\r\n+        }\r\n+      } catch {\r\n+        setServices([]);\r\n+        setSelectedService(null);\r\n+        setLoading(false);\r\n+      }\r\n+    }\r\n+    fetchServices();\r\n+    return () => { cancelled = true; };\r\n+  }, [serviceId]);\r\n+\r\n+  const planFeatures = useMemo(() => {\r\n+    if (!selectedService) return [];\r\n+    const baseFeatures = selectedService.baseFeatures ?? [];\r\n+    const reviveFeatures = selectedService.reviveFeatures ?? [];\r\n+    if (plan === \"revive\") {\r\n+      return [...baseFeatures, ...reviveFeatures].map((feature) => ({ text: feature, status: \"✅\" }));\r\n+    }\r\n+    const baseIncluded = baseFeatures.map((feature) => ({ text: feature, status: \"✅\" }));\r\n+    const reviveExtras = reviveFeatures.map((feature) => ({ text: feature, status: \"❌\" }));\r\n+    return [...baseIncluded, ...reviveExtras];\r\n+  }, [selectedService, plan]);\r\n+\r\n+  const basePlanPrice = useMemo(() => {\r\n+    if (!selectedService) return null;\r\n+    if (plan === \"revive\" && typeof selectedService.revivePrice === \"number\") {\r\n+      return selectedService.revivePrice;\r\n+    }\r\n+    if (plan === \"base\" && typeof selectedService.basePrice === \"number\") {\r\n+      return selectedService.basePrice;\r\n+    }\r\n+    return null;\r\n+  }, [plan, selectedService]);\r\n+\r\n+  const vehicleOption = useMemo(\r\n+    () => VEHICLE_OPTIONS.find((option) => option.id === vehicleType) ?? VEHICLE_OPTIONS[0],\r\n+    [vehicleType]\r\n+  );\r\n+\r\n+  const totalPrice = useMemo(() => {\r\n+    if (typeof basePlanPrice !== \"number\") return null;\r\n+    return basePlanPrice + vehicleOption.adjustment;\r\n+  }, [basePlanPrice, vehicleOption.adjustment]);\r\n+\r\n+  useEffect(() => {\r\n+    setPlan(\"base\");\r\n+    setVehicleType(VEHICLE_OPTIONS[0].id);\r\n+  }, [selectedService?.id]);\r\n+\r\n+  useEffect(() => {\r\n+    if (!router.isReady) return;\r\n+    window.scrollTo({ top: 0, behavior: \"auto\" });\r\n+  }, [router.isReady]);\r\n+\r\n+  useEffect(() => {\r\n+    document.body.style.overflow = showBooking ? \"hidden\" : \"auto\";\r\n+    return () => {\r\n+      document.body.style.overflow = \"auto\";\r\n+    };\r\n+  }, [showBooking]);\r\n+\r\n+  const handleOpenBooking = () => {\r\n+    if (selectedService && !selectedService.comingSoon) {\r\n+      setShowBooking(true);\r\n+    }\r\n+  };\r\n+\r\n+  const handleCloseBooking = () => {\r\n+    setShowBooking(false);\r\n+  };\r\n+\r\n+  const fallbackService = useMemo(() => {\r\n+    return services.find((svc) => !svc.comingSoon);\r\n+  }, [services]);\r\n+\r\n+  return (\r\n+  <main className=\"min-h-screen bg-gradient-to-b from-slate-50 via-white to-slate-50\" style={{ color: '#0A0A0A' }}>\r\n+      <Navigation />\r\n+      <section className=\"max-w-4xl mx-auto px-4 py-20\">\r\n+        {loading ? (\r\n+          <div className=\"bg-white/95 border rounded-3xl shadow-xl overflow-hidden text-center p-10 text-blue-600\">Loading services...</div>\r\n+        ) : selectedService ? (\r\n+          <div className=\"bg-white/95 border rounded-3xl shadow-xl overflow-hidden\" style={{ backgroundColor: 'rgba(255,255,255,0.95)', borderColor: '#e5e7eb' }}>\r\n+            <div className=\"px-6 sm:px-10 py-10 space-y-6\">\r\n+              <span className=\"inline-flex px-4 py-1 rounded-full bg-blue-100 text-blue-700 text-xs font-semibold uppercase tracking-widest\">\r\n+                {selectedService.comingSoon ? \"Coming Soon\" : \"Book Now\"}\r\n+              </span>\r\n+              <h1 className=\"text-3xl sm:text-4xl font-bold\" style={{ color: '#0A0A0A' }}>\r\n+                {selectedService.title}\r\n+              </h1>\r\n+              <div className=\"relative grid grid-cols-2 bg-slate-100 border border-slate-200 rounded-full overflow-hidden w-full sm:w-auto\">\r\n+                <div\r\n+                  className=\"absolute inset-y-0 w-1/2 rounded-full bg-white shadow transition-transform duration-300 ease-out\"\r\n+                  style={{ transform: plan === \"revive\" ? \"translateX(100%)\" : \"translateX(0%)\" }}\r\n+                  aria-hidden=\"true\"\r\n+                />\r\n+                <button\r\n+                  type=\"button\"\r\n+                  onClick={() => setPlan(\"base\")}\r\n+                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors`}\r\n+                  style={{ color: plan === 'base' ? '#0A0A0A' : '#111827' }}\r\n+                >\r\n+                  Base\r\n+                </button>\r\n+                <button\r\n+                  type=\"button\"\r\n+                  onClick={() => {\r\n+                    if (selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\") return;\r\n+                    setPlan(\"revive\");\r\n+                  }}\r\n+                  className={`relative z-10 px-5 py-2 text-sm font-semibold transition-colors ${\r\n+                    selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"\r\n+                      ? \"opacity-50 cursor-not-allowed\"\r\n+                      : \"\"\r\n+                  }`}\r\n+                  style={{ color: plan === 'revive' ? '#0A0A0A' : '#111827' }}\r\n+                  disabled={selectedService.comingSoon || typeof selectedService.revivePrice !== \"number\"}\r\n+                >\r\n+                  Revive\r\n+                </button>\r\n+              </div>\r\n+              <div className=\"bg-slate-100 border border-slate-200 rounded-2xl p-1\">\r\n+                <div className=\"grid grid-cols-3 gap-2\">\r\n+                  {VEHICLE_OPTIONS.map((option, index) => {\r\n+                    const isSelected = vehicleType === option.id;\r\n+                    const alignment = index === 0 ? \"justify-start\" : index === 1 ? \"justify-center\" : \"justify-end\";\r\n+                    return (\r\n+                      <div key={option.id} className={`flex ${alignment}`}>\r\n+                        <button\r\n+                          type=\"button\"\r\n+                          onClick={() => setVehicleType(option.id)}\r\n+                          className={`px-4 py-2 text-sm font-semibold rounded-full transition-colors ${isSelected ? 'bg-white shadow' : ''}`}\r\n+                          style={{ color: isSelected ? '#0A0A0A' : '#111827' }}\r\n+                        >\r\n+                          {option.label}\r\n+                        </button>\r\n+                      </div>\r\n+                    );\r\n+                  })}\r\n+                </div>\r\n+              </div>\r\n+              <div className=\"space-y-1\">\r\n+                <div className=\"text-xl font-semibold\" style={{ color: '#0A0A0A' }}>\r\n+                  {totalPrice !== null ? `Total: $${totalPrice}` : \"Contact us\"}\r\n+                </div>\r\n+              </div>\r\n+              {planFeatures.length ? (\r\n+                <ul className=\"grid sm:grid-cols-2 gap-3 text-sm sm:text-base\" style={{ color: '#111827' }}>\r\n+                  {planFeatures.map((feature) => (\r\n+                    <li key={feature.text} className=\"flex items-start gap-3\">\r\n+                      {feature.status === \"✅\" ? (\r\n+                        <FiCheck className=\"mt-0.5\" style={{ color: '#16A34A' }} aria-hidden=\"true\" />\r\n+                      ) : (\r\n+                        <FiX className=\"mt-0.5\" style={{ color: '#9CA3AF' }} aria-hidden=\"true\" />\r\n+                      )}\r\n+                      <span>{feature.text}</span>\r\n+                    </li>\r\n+                  ))}\r\n+                </ul>\r\n+              ) : null}\r\n+              {!selectedService.comingSoon && (\r\n+                <div className=\"flex flex-col sm:flex-row gap-3 pt-4\">\r\n+                  <button\r\n+                    type=\"button\"\r\n+                    onClick={handleOpenBooking}\r\n+                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+                  >\r\n+                    Begin Booking\r\n+                  </button>\r\n+                  <a\r\n+                    href=\"tel:+17828275010\"\r\n+                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg border border-blue-300 text-blue-700 hover:bg-blue-100 font-semibold text-center\"\r\n+                  >\r\n+                    Call +1 (782) 827-5010\r\n+                  </a>\r\n+                </div>\r\n+              )}\r\n+              {selectedService.comingSoon && (\r\n+                <div className=\"rounded-xl border border-dashed border-blue-200 bg-blue-50/70 px-4 py-6 text-blue-700 text-sm\">\r\n+                  Subscriptions are almost here. We’ll share flexible plans that keep your vehicle spotless on your schedule.\r\n+                </div>\r\n+              )}\r\n+            </div>\r\n+          </div>\r\n+        ) : (\r\n+          <div className=\"bg-white border border-slate-200 rounded-3xl shadow-lg p-10 text-center space-y-6\">\r\n+            <h1 className=\"text-3xl font-bold\" style={{ color: '#0A0A0A' }}>Select a service to get started</h1>\r\n+            <p style={{ color: '#1F2937' }}>\r\n+              We couldn’t find the package you were looking for. Choose one of our detailing options to continue.\r\n+            </p>\r\n+            {fallbackService && (\r\n+              <button\r\n+                type=\"button\"\r\n+                onClick={() => router.push({ pathname: \"/book\", query: { service: fallbackService.id } })}\r\n+                className=\"px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+              >\r\n+                View {fallbackService.title}\r\n+              </button>\r\n+            )}\r\n+          </div>\r\n+        )}\r\n+      </section>\r\n+      <Footer />\r\n+      {showBooking && selectedService && !selectedService.comingSoon && (\r\n+        <Booking service={selectedService} onClose={handleCloseBooking} />\r\n+      )}\r\n+    </main>\r\n+  );\r\n+}\r\n+       \n\\ No newline at end of file\n"
                }
            ],
            "date": 1761325977460,
            "name": "Commit-0",
            "content": "import { useEffect, useMemo, useState } from \"react\";\r\nimport dynamic from \"next/dynamic\";\r\nimport { useRouter } from \"next/router\";\r\nimport Navigation from \"@/components/Navigation\";\r\nimport FAQ from \"@/components/FAQ\";\r\nimport Footer from \"@/components/Footer\";\r\nimport { SERVICES, getServiceById } from \"@/data/services\";\r\n\r\nconst Booking = dynamic(() => import(\"@/components/Booking\"), { ssr: false });\r\n\r\nexport default function BookPage() {\r\n  const router = useRouter();\r\n  const { service: serviceId } = router.query;\r\n  const selectedService = useMemo(() => {\r\n    if (typeof serviceId !== \"string\") return null;\r\n    return getServiceById(serviceId) || null;\r\n  }, [serviceId]);\r\n\r\n  const [showBooking, setShowBooking] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (selectedService && !selectedService.comingSoon) {\r\n      setShowBooking(true);\r\n    }\r\n  }, [selectedService]);\r\n\r\n  useEffect(() => {\r\n    document.body.style.overflow = showBooking ? \"hidden\" : \"auto\";\r\n    return () => {\r\n      document.body.style.overflow = \"auto\";\r\n    };\r\n  }, [showBooking]);\r\n\r\n  const handleOpenBooking = () => {\r\n    if (selectedService && !selectedService.comingSoon) {\r\n      setShowBooking(true);\r\n    }\r\n  };\r\n\r\n  const handleCloseBooking = () => {\r\n    setShowBooking(false);\r\n  };\r\n\r\n  const fallbackService = SERVICES.find((svc) => !svc.comingSoon);\r\n\r\n  return (\r\n    <main className=\"min-h-screen bg-blue-50 text-blue-900\">\r\n      <Navigation />\r\n      <section className=\"max-w-4xl mx-auto px-4 py-20\">\r\n        {selectedService ? (\r\n          <div className=\"bg-white border border-blue-100 rounded-3xl shadow-xl overflow-hidden\">\r\n            <div className=\"px-6 sm:px-10 py-10 space-y-6\">\r\n              <span className=\"inline-flex px-4 py-1 rounded-full bg-blue-100 text-blue-700 text-sm font-semibold uppercase tracking-widest\">\r\n                {selectedService.comingSoon ? \"Coming Soon\" : \"Book Now\"}\r\n              </span>\r\n              <h1 className=\"text-3xl sm:text-4xl font-bold\" style={{ color: \"#000\" }}>\r\n                {selectedService.title}\r\n              </h1>\r\n              <p className=\"text-lg text-blue-700 leading-relaxed\">\r\n                {selectedService.summary || \"Schedule your mobile detailing appointment in just a few steps.\"}\r\n              </p>\r\n              {selectedService.features?.length ? (\r\n                <ul className=\"grid sm:grid-cols-2 gap-3 text-blue-800 text-sm sm:text-base\">\r\n                  {selectedService.features.map((feature) => (\r\n                    <li key={feature} className=\"flex items-start gap-2\">\r\n                      <span className=\"text-blue-500 mt-1\">•</span>\r\n                      <span>{feature}</span>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              ) : null}\r\n              {typeof selectedService.basePrice === \"number\" && (\r\n                <div className=\"text-xl font-semibold text-blue-700\">\r\n                  Starting at ${selectedService.basePrice}\r\n                </div>\r\n              )}\r\n              {!selectedService.comingSoon && (\r\n                <div className=\"flex flex-col sm:flex-row gap-3 pt-4\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={handleOpenBooking}\r\n                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n                  >\r\n                    Begin Booking\r\n                  </button>\r\n                  <a\r\n                    href=\"tel:+17828275010\"\r\n                    className=\"w-full sm:w-auto px-6 py-3 rounded-lg border border-blue-300 text-blue-700 hover:bg-blue-100 font-semibold text-center\"\r\n                  >\r\n                    Call +1 (782) 827-5010\r\n                  </a>\r\n                </div>\r\n              )}\r\n              {selectedService.comingSoon && (\r\n                <div className=\"rounded-xl border border-dashed border-blue-200 bg-blue-50/70 px-4 py-6 text-blue-700 text-sm\">\r\n                  Subscriptions are almost here. We’ll share flexible plans that keep your vehicle spotless on your schedule.\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"bg-white border border-blue-100 rounded-3xl shadow-lg p-10 text-center space-y-6\">\r\n            <h1 className=\"text-3xl font-bold\" style={{ color: \"#000\" }}>Select a service to get started</h1>\r\n            <p className=\"text-blue-700\">\r\n              We couldn’t find the package you were looking for. Choose one of our detailing options to continue.\r\n            </p>\r\n            {fallbackService && (\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => router.push({ pathname: \"/book\", query: { service: fallbackService.id } })}\r\n                className=\"px-6 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n              >\r\n                View {fallbackService.title}\r\n              </button>\r\n            )}\r\n          </div>\r\n        )}\r\n      </section>\r\n      <FAQ />\r\n      <Footer />\r\n      {showBooking && selectedService && !selectedService.comingSoon && (\r\n        <Booking service={selectedService} onClose={handleCloseBooking} />\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n"
        }
    ]
}