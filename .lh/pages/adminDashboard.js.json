{
    "sourceFile": "pages/adminDashboard.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 39,
            "patches": [
                {
                    "date": 1760670193189,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1760670443795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,150 @@\n+import { useEffect, useState } from \"react\";\r\n+import { useRouter } from \"next/router\";\r\n+\r\n+// Mock booking data for demo\r\n+const initialBookings = [\r\n+  { id: 1, name: \"John Doe\", service: \"Complete Interior Detail\", date: \"2025-10-10\", amount: 130, status: \"complete\", phone: \"902-555-1234\", email: \"john@example.com\", location: \"Halifax\" },\r\n+  { id: 2, name: \"Jane Smith\", service: \"Premium Exterior Wash\", date: \"2025-10-12\", amount: 50, status: \"pending\", phone: \"902-555-5678\", email: \"jane@example.com\", location: \"Dartmouth\" },\r\n+  { id: 3, name: \"Alex Lee\", service: \"Ultimate Full Detail\", date: \"2025-10-15\", amount: 160, status: \"complete\", phone: \"902-555-9999\", email: \"alex@example.com\", location: \"Bedford\" },\r\n+];\r\n+\r\n+export default function AdminDashboard() {\r\n+  const router = useRouter();\r\n+  const [bookings, setBookings] = useState(initialBookings);\r\n+  const [showAdd, setShowAdd] = useState(false);\r\n+  const [showDetail, setShowDetail] = useState(false);\r\n+  const [detailBooking, setDetailBooking] = useState(null);\r\n+  const [newBooking, setNewBooking] = useState({ name: \"\", service: \"\", date: \"\", amount: \"\", status: \"pending\", phone: \"\", email: \"\", location: \"\" });\r\n+\r\n+  useEffect(() => {\r\n+    if (typeof window !== \"undefined\") {\r\n+      const saved = window.localStorage.getItem(\"adminAuth\");\r\n+      if (saved !== \"Detailing1313!\") {\r\n+        router.replace(\"/admin\");\r\n+      }\r\n+    }\r\n+  }, [router]);\r\n+\r\n+  // Calculate total revenue\r\n+  const totalRevenue = bookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n+\r\n+  // Add new booking\r\n+  const handleAddBooking = (e) => {\r\n+    e.preventDefault();\r\n+    setBookings([\r\n+      ...bookings,\r\n+      { ...newBooking, id: bookings.length + 1, amount: Number(newBooking.amount) }\r\n+    ]);\r\n+    setNewBooking({ name: \"\", service: \"\", date: \"\", amount: \"\", status: \"pending\", phone: \"\", email: \"\", location: \"\" });\r\n+    setShowAdd(false);\r\n+  };\r\n+\r\n+  // Show booking details modal\r\n+  const handleShowDetail = (booking) => {\r\n+    setDetailBooking(booking);\r\n+    setShowDetail(true);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n+      <div className=\"max-w-5xl mx-auto\">\r\n+        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n+        {/* Revenue summary */}\r\n+        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n+          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n+            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n+            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n+            <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Pending</div>\r\n+            <div className=\"text-3xl font-bold text-yellow-600\">{bookings.filter(b => b.status === \"pending\").length}</div>\r\n+          </div>\r\n+        </div>\r\n+        {/* Booking list */}\r\n+        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n+          <div className=\"flex justify-between items-center mb-4\">\r\n+            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n+            <button\r\n+              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+              onClick={() => setShowAdd(true)}\r\n+            >\r\n+              Add Booking\r\n+            </button>\r\n+          </div>\r\n+          <table className=\"w-full text-left border-collapse\">\r\n+            <thead>\r\n+              <tr style={{ background: '#f5f5f5' }}>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n+              </tr>\r\n+            </thead>\r\n+            <tbody>\r\n+              {bookings.map(b => (\r\n+                <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleShowDetail(b)}>{b.name}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.service}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.date}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>${b.amount}</td>\r\n+                  <td className=\"py-2 px-3\">\r\n+                    <span className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}>{b.status}</span>\r\n+                  </td>\r\n+                </tr>\r\n+              ))}\r\n+            </tbody>\r\n+          </table>\r\n+        </div>\r\n+        {/* Booking details modal */}\r\n+        {showDetail && detailBooking && (\r\n+          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n+              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n+              <div className=\"space-y-3 text-gray-800\">\r\n+                <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n+                <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n+                <div><span className=\"font-semibold\">Date:</span> {detailBooking.date}</div>\r\n+                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n+                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n+                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n+                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n+                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n+              </div>\r\n+              <button className=\"mt-8 w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\" onClick={() => setShowDetail(false)}>Close</button>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+        {/* Add booking modal */}\r\n+        {showAdd && (\r\n+          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n+              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Add Booking</h3>\r\n+              <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n+                <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                <input type=\"text\" required placeholder=\"Service\" value={newBooking.service} onChange={e => setNewBooking({ ...newBooking, service: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} onChange={e => setNewBooking({ ...newBooking, amount: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => setNewBooking({ ...newBooking, phone: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={e => setNewBooking({ ...newBooking, location: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+                  <option value=\"pending\">Pending</option>\r\n+                  <option value=\"complete\">Complete</option>\r\n+                </select>\r\n+                <div className=\"flex gap-4 mt-4\">\r\n+                  <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n+                  <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={() => setShowAdd(false)}>Cancel</button>\r\n+                </div>\r\n+              </form>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1760670784363,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,301 @@\n+import { useEffect, useState } from \"react\";\r\n+import { useRouter } from \"next/router\";\r\n+\r\n+// Mock booking data for demo\r\n+const initialBookings = [\r\n+  { id: 1, name: \"John Doe\", service: \"Complete Interior Detail\", date: \"2025-10-10\", amount: 130, status: \"complete\", phone: \"902-555-1234\", email: \"john@example.com\", location: \"Halifax\" },\r\n+  { id: 2, name: \"Jane Smith\", service: \"Premium Exterior Wash\", date: \"2025-10-12\", amount: 50, status: \"pending\", phone: \"902-555-5678\", email: \"jane@example.com\", location: \"Dartmouth\" },\r\n+  { id: 3, name: \"Alex Lee\", service: \"Ultimate Full Detail\", date: \"2025-10-15\", amount: 160, status: \"complete\", phone: \"902-555-9999\", email: \"alex@example.com\", location: \"Bedford\" },\r\n+];\r\n+\r\n+export default function AdminDashboard() {\r\n+  const router = useRouter();\r\n+  const [bookings, setBookings] = useState(initialBookings);\r\n+  const [showAdd, setShowAdd] = useState(false);\r\n+  const [showDetail, setShowDetail] = useState(false);\r\n+  const [detailBooking, setDetailBooking] = useState(null);\r\n+  // Service/add-on logic\r\n+  const serviceOptions = [\r\n+    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: false },\r\n+    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n+    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n+  ];\r\n+  const addOnOptions = [\r\n+    { label: \"Pet Hair Removal\", price: 20 },\r\n+  ];\r\n+  const carTypeOptions = [\r\n+    { label: \"Sedan\", price: 0 },\r\n+    { label: \"SUV\", price: 10 },\r\n+    { label: \"Truck\", price: 20 },\r\n+  ];\r\n+  // Booking state\r\n+  const [newBooking, setNewBooking] = useState({\r\n+    name: \"\",\r\n+    service: serviceOptions[0].title,\r\n+    date: \"\",\r\n+    amount: serviceOptions[0].basePrice,\r\n+    status: \"pending\",\r\n+    phone: \"\",\r\n+    email: \"\",\r\n+    location: \"\",\r\n+    addOns: [],\r\n+    carType: carTypeOptions[0].label,\r\n+  });\r\n+  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n+\r\n+  useEffect(() => {\r\n+    if (typeof window !== \"undefined\") {\r\n+      const saved = window.localStorage.getItem(\"adminAuth\");\r\n+      if (saved !== \"Detailing1313!\") {\r\n+        router.replace(\"/admin\");\r\n+      }\r\n+    }\r\n+  }, [router]);\r\n+\r\n+  // Calculate total revenue\r\n+  const totalRevenue = bookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n+\r\n+  // Add new booking\r\n+  // Calculate price\r\n+  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n+    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n+    let price = service ? service.basePrice : 0;\r\n+    if (service && service.hasAddOns && addOns.length) {\r\n+      price += addOns.reduce((sum, a) => sum + a.price, 0);\r\n+    }\r\n+    const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n+    if (carType) price += carType.price;\r\n+    // Special rule for Complete Interior Detail\r\n+    if (serviceTitle === \"Complete Interior Detail\") {\r\n+      if (carTypeLabel === \"SUV\") price += 20;\r\n+      else if (carTypeLabel === \"Truck\") price += 30;\r\n+    }\r\n+    return price;\r\n+  };\r\n+\r\n+  // Add booking\r\n+  const handleAddBooking = (e) => {\r\n+    e.preventDefault();\r\n+    setBookings([\r\n+      ...bookings,\r\n+      {\r\n+        ...newBooking,\r\n+        id: bookings.length + 1,\r\n+        amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n+      }\r\n+    ]);\r\n+    setNewBooking({\r\n+      name: \"\",\r\n+      service: serviceOptions[0].title,\r\n+      date: \"\",\r\n+      amount: serviceOptions[0].basePrice,\r\n+      status: \"pending\",\r\n+      phone: \"\",\r\n+      email: \"\",\r\n+      location: \"\",\r\n+      addOns: [],\r\n+      carType: carTypeOptions[0].label,\r\n+    });\r\n+    setShowAdd(false);\r\n+  };\r\n+\r\n+  // Show booking details modal\r\n+  const handleShowDetail = (booking) => {\r\n+    setDetailBooking(booking);\r\n+    setShowDetail(true);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n+      <div className=\"max-w-5xl mx-auto\">\r\n+        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n+        {/* Revenue summary */}\r\n+        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n+          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n+            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n+            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n+            <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Pending</div>\r\n+            <div className=\"text-3xl font-bold text-yellow-600\">{bookings.filter(b => b.status === \"pending\").length}</div>\r\n+          </div>\r\n+        </div>\r\n+        {/* Booking list */}\r\n+        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n+          <div className=\"flex justify-between items-center mb-4\">\r\n+            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n+            <button\r\n+              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+              onClick={() => setShowAdd(true)}\r\n+            >\r\n+              Add Booking\r\n+            </button>\r\n+          </div>\r\n+          <table className=\"w-full text-left border-collapse\">\r\n+            <thead>\r\n+              <tr style={{ background: '#f5f5f5' }}>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n+              </tr>\r\n+            </thead>\r\n+            <tbody>\r\n+              {bookings.map(b => (\r\n+                <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleShowDetail(b)}>{b.name}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.service}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.date}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>${b.amount}</td>\r\n+                  <td className=\"py-2 px-3\">\r\n+                    <span className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}>{b.status}</span>\r\n+                  </td>\r\n+                </tr>\r\n+              ))}\r\n+            </tbody>\r\n+          </table>\r\n+        </div>\r\n+        {/* Booking details modal */}\r\n+        {showDetail && detailBooking && (\r\n+          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n+              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n+              <div className=\"space-y-3 text-gray-800\">\r\n+                <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n+                <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n+                <div><span className=\"font-semibold\">Date:</span> {detailBooking.date}</div>\r\n+                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n+                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n+                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n+                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n+                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n+              </div>\r\n+              <button className=\"mt-8 w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\" onClick={() => setShowDetail(false)}>Close</button>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+        {/* Add booking modal */}\r\n+        {showAdd && (\r\n+          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n+              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Add Booking</h3>\r\n+              <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n+                {/* Name */}\r\n+                <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                {/* Service dropdown */}\r\n+                <select required value={newBooking.service} onChange={e => {\r\n+                  const selectedService = e.target.value;\r\n+                  setNewBooking(nb => ({\r\n+                    ...nb,\r\n+                    service: selectedService,\r\n+                    addOns: [],\r\n+                    amount: calculatePrice(selectedService, [], nb.carType),\r\n+                  }));\r\n+                }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+                  {serviceOptions.map(s => (\r\n+                    <option key={s.title} value={s.title}>{s.title}</option>\r\n+                  ))}\r\n+                </select>\r\n+                {/* Car type dropdown */}\r\n+                <select required value={newBooking.carType} onChange={e => {\r\n+                  const carType = e.target.value;\r\n+                  setNewBooking(nb => ({\r\n+                    ...nb,\r\n+                    carType,\r\n+                    amount: calculatePrice(nb.service, nb.addOns, carType),\r\n+                  }));\r\n+                }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+                  {carTypeOptions.map(c => (\r\n+                    <option key={c.label} value={c.label}>{c.label}</option>\r\n+                  ))}\r\n+                </select>\r\n+                {/* Add-ons (only for services with add-ons) */}\r\n+                {serviceOptions.find(s => s.title === newBooking.service)?.hasAddOns && (\r\n+                  <div>\r\n+                    <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n+                    <div className=\"flex flex-wrap gap-3 mb-2\">\r\n+                      {addOnOptions.map(opt => (\r\n+                        <button\r\n+                          key={opt.label}\r\n+                          type=\"button\"\r\n+                          onClick={() => {\r\n+                            setNewBooking(nb => {\r\n+                              const exists = nb.addOns.find(a => a.label === opt.label);\r\n+                              const updated = exists\r\n+                                ? nb.addOns.filter(a => a.label !== opt.label)\r\n+                                : [...nb.addOns, opt];\r\n+                              return {\r\n+                                ...nb,\r\n+                                addOns: updated,\r\n+                                amount: calculatePrice(nb.service, updated, nb.carType),\r\n+                              };\r\n+                            });\r\n+                          }}\r\n+                          className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n+                        >\r\n+                          {opt.label}\r\n+                        </button>\r\n+                      ))}\r\n+                    </div>\r\n+                  </div>\r\n+                )}\r\n+                {/* Date */}\r\n+                <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                {/* Amount (auto-calculated, read-only) */}\r\n+                <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n+                {/* Phone (numbers only) */}\r\n+                <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n+                  // Only allow numbers\r\n+                  const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n+                  setNewBooking({ ...newBooking, phone: val });\r\n+                }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                {/* Email */}\r\n+                <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                {/* Location autocomplete (Google Places API) */}\r\n+                <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n+                  const val = e.target.value;\r\n+                  setNewBooking({ ...newBooking, location: val });\r\n+                  // Simple Google Places Autocomplete (client-side only)\r\n+                  if (window && val.length > 2) {\r\n+                    try {\r\n+                      const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n+                      const data = await resp.json();\r\n+                      setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n+                    } catch {}\r\n+                  } else {\r\n+                    setLocationSuggestions([]);\r\n+                  }\r\n+                }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n+                {/* Location suggestions dropdown */}\r\n+                {locationSuggestions.length > 0 && (\r\n+                  <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n+                    {locationSuggestions.map((sug, i) => (\r\n+                      <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n+                        setNewBooking(nb => ({ ...nb, location: sug }));\r\n+                        setLocationSuggestions([]);\r\n+                      }}>{sug}</div>\r\n+                    ))}\r\n+                  </div>\r\n+                )}\r\n+                {/* Status dropdown */}\r\n+                <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+                  <option value=\"pending\">Pending</option>\r\n+                  <option value=\"complete\">Complete</option>\r\n+                </select>\r\n+                <div className=\"flex gap-4 mt-4\">\r\n+                  <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n+                  <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={() => setShowAdd(false)}>Cancel</button>\r\n+                </div>\r\n+              </form>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1760670827509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,316 @@\n+import { useEffect, useState } from \"react\";\r\n+import { useRouter } from \"next/router\";\r\n+\r\n+// Mock booking data for demo\r\n+const initialBookings = [\r\n+  { id: 1, name: \"John Doe\", service: \"Complete Interior Detail\", date: \"2025-10-10\", amount: 130, status: \"complete\", phone: \"902-555-1234\", email: \"john@example.com\", location: \"Halifax\" },\r\n+  { id: 2, name: \"Jane Smith\", service: \"Premium Exterior Wash\", date: \"2025-10-12\", amount: 50, status: \"pending\", phone: \"902-555-5678\", email: \"jane@example.com\", location: \"Dartmouth\" },\r\n+  { id: 3, name: \"Alex Lee\", service: \"Ultimate Full Detail\", date: \"2025-10-15\", amount: 160, status: \"complete\", phone: \"902-555-9999\", email: \"alex@example.com\", location: \"Bedford\" },\r\n+];\r\n+\r\n+export default function AdminDashboard() {\r\n+  const router = useRouter();\r\n+  const [bookings, setBookings] = useState(initialBookings);\r\n+  const [showAdd, setShowAdd] = useState(false);\r\n+  const [showDetail, setShowDetail] = useState(false);\r\n+  const [detailBooking, setDetailBooking] = useState(null);\r\n+  // Service/add-on logic\r\n+  const serviceOptions = [\r\n+    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: false },\r\n+    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n+    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n+  ];\r\n+  const addOnOptions = [\r\n+    { label: \"Pet Hair Removal\", price: 20 },\r\n+  ];\r\n+  const carTypeOptions = [\r\n+    { label: \"Sedan\", price: 0 },\r\n+    { label: \"SUV\", price: 10 },\r\n+    { label: \"Truck\", price: 20 },\r\n+  ];\r\n+  // Booking state\r\n+  const [newBooking, setNewBooking] = useState({\r\n+    name: \"\",\r\n+    service: serviceOptions[0].title,\r\n+    date: \"\",\r\n+    amount: serviceOptions[0].basePrice,\r\n+    status: \"pending\",\r\n+    phone: \"\",\r\n+    email: \"\",\r\n+    location: \"\",\r\n+    addOns: [],\r\n+    carType: carTypeOptions[0].label,\r\n+  });\r\n+  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n+\r\n+  useEffect(() => {\r\n+    if (typeof window !== \"undefined\") {\r\n+      const saved = window.localStorage.getItem(\"adminAuth\");\r\n+      if (saved !== \"Detailing1313!\") {\r\n+        router.replace(\"/admin\");\r\n+      }\r\n+    }\r\n+  }, [router]);\r\n+\r\n+  // Calculate total revenue\r\n+  const totalRevenue = bookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n+\r\n+  // Add new booking\r\n+  // Calculate price\r\n+  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n+    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n+    let price = service ? service.basePrice : 0;\r\n+    if (service && service.hasAddOns && addOns.length) {\r\n+      price += addOns.reduce((sum, a) => sum + a.price, 0);\r\n+    }\r\n+    const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n+    if (carType) price += carType.price;\r\n+    // Special rule for Complete Interior Detail\r\n+    if (serviceTitle === \"Complete Interior Detail\") {\r\n+      if (carTypeLabel === \"SUV\") price += 20;\r\n+      else if (carTypeLabel === \"Truck\") price += 30;\r\n+    }\r\n+    return price;\r\n+  };\r\n+\r\n+  // Add booking\r\n+  const handleAddBooking = (e) => {\r\n+    e.preventDefault();\r\n+    setBookings([\r\n+      ...bookings,\r\n+      {\r\n+        ...newBooking,\r\n+        id: bookings.length + 1,\r\n+        amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n+      }\r\n+    ]);\r\n+    setNewBooking({\r\n+      name: \"\",\r\n+      service: serviceOptions[0].title,\r\n+      date: \"\",\r\n+      amount: serviceOptions[0].basePrice,\r\n+      status: \"pending\",\r\n+      phone: \"\",\r\n+      email: \"\",\r\n+      location: \"\",\r\n+      addOns: [],\r\n+      carType: carTypeOptions[0].label,\r\n+    });\r\n+    setShowAdd(false);\r\n+  };\r\n+\r\n+  // Show booking details modal\r\n+  const handleShowDetail = (booking) => {\r\n+    setDetailBooking(booking);\r\n+    setShowDetail(true);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n+      <div className=\"max-w-5xl mx-auto\">\r\n+        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n+        {/* Revenue summary */}\r\n+        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n+          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n+            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n+            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n+            <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Pending</div>\r\n+            <div className=\"text-3xl font-bold text-yellow-600\">{bookings.filter(b => b.status === \"pending\").length}</div>\r\n+          </div>\r\n+        </div>\r\n+        {/* Booking list */}\r\n+        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n+          <div className=\"flex justify-between items-center mb-4\">\r\n+            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n+            <button\r\n+              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+              onClick={() => setShowAdd(true)}\r\n+            >\r\n+              Add Booking\r\n+            </button>\r\n+          </div>\r\n+          <table className=\"w-full text-left border-collapse\">\r\n+            <thead>\r\n+              <tr style={{ background: '#f5f5f5' }}>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n+              </tr>\r\n+            </thead>\r\n+            <tbody>\r\n+              {bookings.map(b => (\r\n+                <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleShowDetail(b)}>{b.name}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.service}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.date}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>${b.amount}</td>\r\n+                  <td className=\"py-2 px-3\">\r\n+                    <span className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}>{b.status}</span>\r\n+                  </td>\r\n+                </tr>\r\n+              ))}\r\n+            </tbody>\r\n+          </table>\r\n+        </div>\r\n+        {/* Booking details modal */}\r\n+        {showDetail && detailBooking && (\r\n+          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n+              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n+              <div className=\"space-y-3 text-gray-800\">\r\n+                <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n+                <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n+                <div><span className=\"font-semibold\">Date:</span> {detailBooking.date}</div>\r\n+                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n+                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n+                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n+                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n+                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n+              </div>\r\n+              <button className=\"mt-8 w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\" onClick={() => setShowDetail(false)}>Close</button>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+        {/* Add booking modal */}\r\n+        {showAdd && (\r\n+          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+            <div\r\n+              className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n+              style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n+            >\r\n+              {/* Close (X) button */}\r\n+              <button\r\n+                type=\"button\"\r\n+                aria-label=\"Close\"\r\n+                onClick={() => setShowAdd(false)}\r\n+                className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n+                style={{ background: 'none', border: 'none' }}\r\n+              >\r\n+                &times;\r\n+              </button>\r\n+              <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n+              <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n+                <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n+                  {/* Name */}\r\n+                  <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Service dropdown */}\r\n+                  <select required value={newBooking.service} onChange={e => {\r\n+                    const selectedService = e.target.value;\r\n+                    setNewBooking(nb => ({\r\n+                      ...nb,\r\n+                      service: selectedService,\r\n+                      addOns: [],\r\n+                      amount: calculatePrice(selectedService, [], nb.carType),\r\n+                    }));\r\n+                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+                    {serviceOptions.map(s => (\r\n+                      <option key={s.title} value={s.title}>{s.title}</option>\r\n+                    ))}\r\n+                  </select>\r\n+                  {/* Car type dropdown */}\r\n+                  <select required value={newBooking.carType} onChange={e => {\r\n+                    const carType = e.target.value;\r\n+                    setNewBooking(nb => ({\r\n+                      ...nb,\r\n+                      carType,\r\n+                      amount: calculatePrice(nb.service, nb.addOns, carType),\r\n+                    }));\r\n+                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+                    {carTypeOptions.map(c => (\r\n+                      <option key={c.label} value={c.label}>{c.label}</option>\r\n+                    ))}\r\n+                  </select>\r\n+                  {/* Add-ons (only for services with add-ons) */}\r\n+                  {serviceOptions.find(s => s.title === newBooking.service)?.hasAddOns && (\r\n+                    <div>\r\n+                      <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n+                      <div className=\"flex flex-wrap gap-3 mb-2\">\r\n+                        {addOnOptions.map(opt => (\r\n+                          <button\r\n+                            key={opt.label}\r\n+                            type=\"button\"\r\n+                            onClick={() => {\r\n+                              setNewBooking(nb => {\r\n+                                const exists = nb.addOns.find(a => a.label === opt.label);\r\n+                                const updated = exists\r\n+                                  ? nb.addOns.filter(a => a.label !== opt.label)\r\n+                                  : [...nb.addOns, opt];\r\n+                                return {\r\n+                                  ...nb,\r\n+                                  addOns: updated,\r\n+                                  amount: calculatePrice(nb.service, updated, nb.carType),\r\n+                                };\r\n+                              });\r\n+                            }}\r\n+                            className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n+                          >\r\n+                            {opt.label}\r\n+                          </button>\r\n+                        ))}\r\n+                      </div>\r\n+                    </div>\r\n+                  )}\r\n+                  {/* Date */}\r\n+                  <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Amount (auto-calculated, read-only) */}\r\n+                  <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n+                  {/* Phone (numbers only) */}\r\n+                  <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n+                    // Only allow numbers\r\n+                    const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n+                    setNewBooking({ ...newBooking, phone: val });\r\n+                  }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Email */}\r\n+                  <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Location autocomplete (Google Places API) */}\r\n+                  <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n+                    const val = e.target.value;\r\n+                    setNewBooking({ ...newBooking, location: val });\r\n+                    // Simple Google Places Autocomplete (client-side only)\r\n+                    if (window && val.length > 2) {\r\n+                      try {\r\n+                        const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n+                        const data = await resp.json();\r\n+                        setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n+                      } catch {}\r\n+                    } else {\r\n+                      setLocationSuggestions([]);\r\n+                    }\r\n+                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n+                  {/* Location suggestions dropdown */}\r\n+                  {locationSuggestions.length > 0 && (\r\n+                    <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n+                      {locationSuggestions.map((sug, i) => (\r\n+                        <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n+                          setNewBooking(nb => ({ ...nb, location: sug }));\r\n+                          setLocationSuggestions([]);\r\n+                        }}>{sug}</div>\r\n+                      ))}\r\n+                    </div>\r\n+                  )}\r\n+                  {/* Status dropdown */}\r\n+                  <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+                    <option value=\"pending\">Pending</option>\r\n+                    <option value=\"complete\">Complete</option>\r\n+                  </select>\r\n+                  <div className=\"flex gap-4 mt-4 pb-4\">\r\n+                    <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n+                    <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={() => setShowAdd(false)}>Cancel</button>\r\n+                  </div>\r\n+                </form>\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1760670853254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,316 @@\n+import { useEffect, useState } from \"react\";\r\n+import { useRouter } from \"next/router\";\r\n+\r\n+// Mock booking data for demo\r\n+const initialBookings = [\r\n+  { id: 1, name: \"John Doe\", service: \"Complete Interior Detail\", date: \"2025-10-10\", amount: 130, status: \"complete\", phone: \"902-555-1234\", email: \"john@example.com\", location: \"Halifax\" },\r\n+  { id: 2, name: \"Jane Smith\", service: \"Premium Exterior Wash\", date: \"2025-10-12\", amount: 50, status: \"pending\", phone: \"902-555-5678\", email: \"jane@example.com\", location: \"Dartmouth\" },\r\n+  { id: 3, name: \"Alex Lee\", service: \"Ultimate Full Detail\", date: \"2025-10-15\", amount: 160, status: \"complete\", phone: \"902-555-9999\", email: \"alex@example.com\", location: \"Bedford\" },\r\n+];\r\n+\r\n+export default function AdminDashboard() {\r\n+  const router = useRouter();\r\n+  const [bookings, setBookings] = useState(initialBookings);\r\n+  const [showAdd, setShowAdd] = useState(false);\r\n+  const [showDetail, setShowDetail] = useState(false);\r\n+  const [detailBooking, setDetailBooking] = useState(null);\r\n+  // Service/add-on logic\r\n+  const serviceOptions = [\r\n+    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: false },\r\n+    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n+    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n+  ];\r\n+  const addOnOptions = [\r\n+    { label: \"Pet Hair Removal\", price: 20 },\r\n+  ];\r\n+  const carTypeOptions = [\r\n+    { label: \"Sedan\", price: 0 },\r\n+    { label: \"SUV\", price: 10 },\r\n+    { label: \"Truck\", price: 20 },\r\n+  ];\r\n+  // Booking state\r\n+  const [newBooking, setNewBooking] = useState({\r\n+    name: \"\",\r\n+    service: serviceOptions[0].title,\r\n+    date: \"\",\r\n+    amount: serviceOptions[0].basePrice,\r\n+    status: \"pending\",\r\n+    phone: \"\",\r\n+    email: \"\",\r\n+    location: \"\",\r\n+    addOns: [],\r\n+    carType: carTypeOptions[0].label,\r\n+  });\r\n+  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n+\r\n+  useEffect(() => {\r\n+    if (typeof window !== \"undefined\") {\r\n+      const saved = window.localStorage.getItem(\"adminAuth\");\r\n+      if (saved !== \"Detailing1313!\") {\r\n+        router.replace(\"/admin\");\r\n+      }\r\n+    }\r\n+  }, [router]);\r\n+\r\n+  // Calculate total revenue\r\n+  const totalRevenue = bookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n+\r\n+  // Add new booking\r\n+  // Calculate price\r\n+  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n+    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n+    let price = service ? service.basePrice : 0;\r\n+    if (service && service.hasAddOns && addOns.length) {\r\n+      price += addOns.reduce((sum, a) => sum + a.price, 0);\r\n+    }\r\n+    const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n+    if (carType) price += carType.price;\r\n+    // Special rule for Complete Interior Detail\r\n+    if (serviceTitle === \"Complete Interior Detail\") {\r\n+      if (carTypeLabel === \"SUV\") price += 20;\r\n+      else if (carTypeLabel === \"Truck\") price += 30;\r\n+    }\r\n+    return price;\r\n+  };\r\n+\r\n+  // Add booking\r\n+  const handleAddBooking = (e) => {\r\n+    e.preventDefault();\r\n+    setBookings([\r\n+      ...bookings,\r\n+      {\r\n+        ...newBooking,\r\n+        id: bookings.length + 1,\r\n+        amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n+      }\r\n+    ]);\r\n+    setNewBooking({\r\n+      name: \"\",\r\n+      service: serviceOptions[0].title,\r\n+      date: \"\",\r\n+      amount: serviceOptions[0].basePrice,\r\n+      status: \"pending\",\r\n+      phone: \"\",\r\n+      email: \"\",\r\n+      location: \"\",\r\n+      addOns: [],\r\n+      carType: carTypeOptions[0].label,\r\n+    });\r\n+    setShowAdd(false);\r\n+  };\r\n+\r\n+  // Show booking details modal\r\n+  const handleShowDetail = (booking) => {\r\n+    setDetailBooking(booking);\r\n+    setShowDetail(true);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n+      <div className=\"max-w-5xl mx-auto\">\r\n+        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n+        {/* Revenue summary */}\r\n+        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n+          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n+            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n+            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n+            <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Pending</div>\r\n+            <div className=\"text-3xl font-bold text-yellow-600\">{bookings.filter(b => b.status === \"pending\").length}</div>\r\n+          </div>\r\n+        </div>\r\n+        {/* Booking list */}\r\n+        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n+          <div className=\"flex justify-between items-center mb-4\">\r\n+            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n+            <button\r\n+              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+              onClick={() => setShowAdd(true)}\r\n+            >\r\n+              Add Booking\r\n+            </button>\r\n+          </div>\r\n+          <table className=\"w-full text-left border-collapse\">\r\n+            <thead>\r\n+              <tr style={{ background: '#f5f5f5' }}>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n+              </tr>\r\n+            </thead>\r\n+            <tbody>\r\n+              {bookings.map(b => (\r\n+                <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleShowDetail(b)}>{b.name}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.service}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.date}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>${b.amount}</td>\r\n+                  <td className=\"py-2 px-3\">\r\n+                    <span className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}>{b.status}</span>\r\n+                  </td>\r\n+                </tr>\r\n+              ))}\r\n+            </tbody>\r\n+          </table>\r\n+        </div>\r\n+        {/* Booking details modal */}\r\n+        {showDetail && detailBooking && (\r\n+          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n+              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n+              <div className=\"space-y-3 text-gray-800\">\r\n+                <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n+                <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n+                <div><span className=\"font-semibold\">Date:</span> {detailBooking.date}</div>\r\n+                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n+                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n+                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n+                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n+                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n+              </div>\r\n+              <button className=\"mt-8 w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\" onClick={() => setShowDetail(false)}>Close</button>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+        {/* Add booking modal */}\r\n+        {showAdd && (\r\n+          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+            <div\r\n+              className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n+              style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n+            >\r\n+              {/* Close (X) button */}\r\n+              <button\r\n+                type=\"button\"\r\n+                aria-label=\"Close\"\r\n+                onClick={() => setShowAdd(false)}\r\n+                className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n+                style={{ background: 'none', border: 'none' }}\r\n+              >\r\n+                &times;\r\n+              </button>\r\n+              <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n+              <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n+                <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n+                  {/* Name */}\r\n+                  <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Service dropdown */}\r\n+                  <select required value={newBooking.service} onChange={e => {\r\n+                    const selectedService = e.target.value;\r\n+                    setNewBooking(nb => ({\r\n+                      ...nb,\r\n+                      service: selectedService,\r\n+                      addOns: [],\r\n+                      amount: calculatePrice(selectedService, [], nb.carType),\r\n+                    }));\r\n+                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+                    {serviceOptions.map(s => (\r\n+                      <option key={s.title} value={s.title}>{s.title}</option>\r\n+                    ))}\r\n+                  </select>\r\n+                  {/* Car type dropdown */}\r\n+                  <select required value={newBooking.carType} onChange={e => {\r\n+                    const carType = e.target.value;\r\n+                    setNewBooking(nb => ({\r\n+                      ...nb,\r\n+                      carType,\r\n+                      amount: calculatePrice(nb.service, nb.addOns, carType),\r\n+                    }));\r\n+                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+                    {carTypeOptions.map(c => (\r\n+                      <option key={c.label} value={c.label}>{c.label}</option>\r\n+                    ))}\r\n+                  </select>\r\n+                  {/* Add-ons (only for services with add-ons) */}\r\n+                  {serviceOptions.find(s => s.title === newBooking.service)?.hasAddOns && (\r\n+                    <div>\r\n+                      <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n+                      <div className=\"flex flex-wrap gap-3 mb-2\">\r\n+                        {addOnOptions.map(opt => (\r\n+                          <button\r\n+                            key={opt.label}\r\n+                            type=\"button\"\r\n+                            onClick={() => {\r\n+                              setNewBooking(nb => {\r\n+                                const exists = nb.addOns.find(a => a.label === opt.label);\r\n+                                const updated = exists\r\n+                                  ? nb.addOns.filter(a => a.label !== opt.label)\r\n+                                  : [...nb.addOns, opt];\r\n+                                return {\r\n+                                  ...nb,\r\n+                                  addOns: updated,\r\n+                                  amount: calculatePrice(nb.service, updated, nb.carType),\r\n+                                };\r\n+                              });\r\n+                            }}\r\n+                            className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n+                          >\r\n+                            {opt.label}\r\n+                          </button>\r\n+                        ))}\r\n+                      </div>\r\n+                    </div>\r\n+                  )}\r\n+                  {/* Date */}\r\n+                  <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Amount (auto-calculated, read-only) */}\r\n+                  <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n+                  {/* Phone (numbers only) */}\r\n+                  <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n+                    // Only allow numbers\r\n+                    const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n+                    setNewBooking({ ...newBooking, phone: val });\r\n+                  }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Email */}\r\n+                  <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Location autocomplete (Google Places API) */}\r\n+                  <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n+                    const val = e.target.value;\r\n+                    setNewBooking({ ...newBooking, location: val });\r\n+                    // Simple Google Places Autocomplete (client-side only)\r\n+                    if (window && val.length > 2) {\r\n+                      try {\r\n+                        const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n+                        const data = await resp.json();\r\n+                        setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n+                      } catch {}\r\n+                    } else {\r\n+                      setLocationSuggestions([]);\r\n+                    }\r\n+                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n+                  {/* Location suggestions dropdown */}\r\n+                  {locationSuggestions.length > 0 && (\r\n+                    <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n+                      {locationSuggestions.map((sug, i) => (\r\n+                        <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n+                          setNewBooking(nb => ({ ...nb, location: sug }));\r\n+                          setLocationSuggestions([]);\r\n+                        }}>{sug}</div>\r\n+                      ))}\r\n+                    </div>\r\n+                  )}\r\n+                  {/* Status dropdown */}\r\n+                  <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+                    <option value=\"pending\">Pending</option>\r\n+                    <option value=\"complete\">Complete</option>\r\n+                  </select>\r\n+                  <div className=\"flex gap-4 mt-4 pb-4\">\r\n+                    <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n+                    <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={() => setShowAdd(false)}>Cancel</button>\r\n+                  </div>\r\n+                </form>\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1760670868183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,317 @@\n+import { useEffect, useState } from \"react\";\r\n+import { useRouter } from \"next/router\";\r\n+\r\n+// Mock booking data for demo\r\n+const initialBookings = [\r\n+  { id: 1, name: \"John Doe\", service: \"Complete Interior Detail\", date: \"2025-10-10\", amount: 130, status: \"complete\", phone: \"902-555-1234\", email: \"john@example.com\", location: \"Halifax\" },\r\n+  { id: 2, name: \"Jane Smith\", service: \"Premium Exterior Wash\", date: \"2025-10-12\", amount: 50, status: \"pending\", phone: \"902-555-5678\", email: \"jane@example.com\", location: \"Dartmouth\" },\r\n+  { id: 3, name: \"Alex Lee\", service: \"Ultimate Full Detail\", date: \"2025-10-15\", amount: 160, status: \"complete\", phone: \"902-555-9999\", email: \"alex@example.com\", location: \"Bedford\" },\r\n+];\r\n+\r\n+export default function AdminDashboard() {\r\n+  const router = useRouter();\r\n+  const [bookings, setBookings] = useState(initialBookings);\r\n+  const [showAdd, setShowAdd] = useState(false);\r\n+  const [showDetail, setShowDetail] = useState(false);\r\n+  const [detailBooking, setDetailBooking] = useState(null);\r\n+  // Service/add-on logic\r\n+  const serviceOptions = [\r\n+    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: false },\r\n+    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n+    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n+  ];\r\n+  const addOnOptions = [\r\n+    { label: \"Pet Hair Removal\", price: 20 },\r\n+    { label: \"Interior Shampoo\", price: 30 },\r\n+  ];\r\n+  const carTypeOptions = [\r\n+    { label: \"Sedan\", price: 0 },\r\n+    { label: \"SUV\", price: 10 },\r\n+    { label: \"Truck\", price: 20 },\r\n+  ];\r\n+  // Booking state\r\n+  const [newBooking, setNewBooking] = useState({\r\n+    name: \"\",\r\n+    service: serviceOptions[0].title,\r\n+    date: \"\",\r\n+    amount: serviceOptions[0].basePrice,\r\n+    status: \"pending\",\r\n+    phone: \"\",\r\n+    email: \"\",\r\n+    location: \"\",\r\n+    addOns: [],\r\n+    carType: carTypeOptions[0].label,\r\n+  });\r\n+  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n+\r\n+  useEffect(() => {\r\n+    if (typeof window !== \"undefined\") {\r\n+      const saved = window.localStorage.getItem(\"adminAuth\");\r\n+      if (saved !== \"Detailing1313!\") {\r\n+        router.replace(\"/admin\");\r\n+      }\r\n+    }\r\n+  }, [router]);\r\n+\r\n+  // Calculate total revenue\r\n+  const totalRevenue = bookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n+\r\n+  // Add new booking\r\n+  // Calculate price\r\n+  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n+    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n+    let price = service ? service.basePrice : 0;\r\n+    if (service && service.hasAddOns && addOns.length) {\r\n+      price += addOns.reduce((sum, a) => sum + a.price, 0);\r\n+    }\r\n+    const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n+    if (carType) price += carType.price;\r\n+    // Special rule for Complete Interior Detail\r\n+    if (serviceTitle === \"Complete Interior Detail\") {\r\n+      if (carTypeLabel === \"SUV\") price += 20;\r\n+      else if (carTypeLabel === \"Truck\") price += 30;\r\n+    }\r\n+    return price;\r\n+  };\r\n+\r\n+  // Add booking\r\n+  const handleAddBooking = (e) => {\r\n+    e.preventDefault();\r\n+    setBookings([\r\n+      ...bookings,\r\n+      {\r\n+        ...newBooking,\r\n+        id: bookings.length + 1,\r\n+        amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n+      }\r\n+    ]);\r\n+    setNewBooking({\r\n+      name: \"\",\r\n+      service: serviceOptions[0].title,\r\n+      date: \"\",\r\n+      amount: serviceOptions[0].basePrice,\r\n+      status: \"pending\",\r\n+      phone: \"\",\r\n+      email: \"\",\r\n+      location: \"\",\r\n+      addOns: [],\r\n+      carType: carTypeOptions[0].label,\r\n+    });\r\n+    setShowAdd(false);\r\n+  };\r\n+\r\n+  // Show booking details modal\r\n+  const handleShowDetail = (booking) => {\r\n+    setDetailBooking(booking);\r\n+    setShowDetail(true);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n+      <div className=\"max-w-5xl mx-auto\">\r\n+        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n+        {/* Revenue summary */}\r\n+        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n+          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n+            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n+            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n+            <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Pending</div>\r\n+            <div className=\"text-3xl font-bold text-yellow-600\">{bookings.filter(b => b.status === \"pending\").length}</div>\r\n+          </div>\r\n+        </div>\r\n+        {/* Booking list */}\r\n+        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n+          <div className=\"flex justify-between items-center mb-4\">\r\n+            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n+            <button\r\n+              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+              onClick={() => setShowAdd(true)}\r\n+            >\r\n+              Add Booking\r\n+            </button>\r\n+          </div>\r\n+          <table className=\"w-full text-left border-collapse\">\r\n+            <thead>\r\n+              <tr style={{ background: '#f5f5f5' }}>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n+              </tr>\r\n+            </thead>\r\n+            <tbody>\r\n+              {bookings.map(b => (\r\n+                <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleShowDetail(b)}>{b.name}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.service}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.date}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>${b.amount}</td>\r\n+                  <td className=\"py-2 px-3\">\r\n+                    <span className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}>{b.status}</span>\r\n+                  </td>\r\n+                </tr>\r\n+              ))}\r\n+            </tbody>\r\n+          </table>\r\n+        </div>\r\n+        {/* Booking details modal */}\r\n+        {showDetail && detailBooking && (\r\n+          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n+              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n+              <div className=\"space-y-3 text-gray-800\">\r\n+                <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n+                <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n+                <div><span className=\"font-semibold\">Date:</span> {detailBooking.date}</div>\r\n+                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n+                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n+                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n+                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n+                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n+              </div>\r\n+              <button className=\"mt-8 w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\" onClick={() => setShowDetail(false)}>Close</button>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+        {/* Add booking modal */}\r\n+        {showAdd && (\r\n+          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+            <div\r\n+              className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n+              style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n+            >\r\n+              {/* Close (X) button */}\r\n+              <button\r\n+                type=\"button\"\r\n+                aria-label=\"Close\"\r\n+                onClick={() => setShowAdd(false)}\r\n+                className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n+                style={{ background: 'none', border: 'none' }}\r\n+              >\r\n+                &times;\r\n+              </button>\r\n+              <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n+              <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n+                <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n+                  {/* Name */}\r\n+                  <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Service dropdown */}\r\n+                  <select required value={newBooking.service} onChange={e => {\r\n+                    const selectedService = e.target.value;\r\n+                    setNewBooking(nb => ({\r\n+                      ...nb,\r\n+                      service: selectedService,\r\n+                      addOns: [],\r\n+                      amount: calculatePrice(selectedService, [], nb.carType),\r\n+                    }));\r\n+                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+                    {serviceOptions.map(s => (\r\n+                      <option key={s.title} value={s.title}>{s.title}</option>\r\n+                    ))}\r\n+                  </select>\r\n+                  {/* Car type dropdown */}\r\n+                  <select required value={newBooking.carType} onChange={e => {\r\n+                    const carType = e.target.value;\r\n+                    setNewBooking(nb => ({\r\n+                      ...nb,\r\n+                      carType,\r\n+                      amount: calculatePrice(nb.service, nb.addOns, carType),\r\n+                    }));\r\n+                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+                    {carTypeOptions.map(c => (\r\n+                      <option key={c.label} value={c.label}>{c.label}</option>\r\n+                    ))}\r\n+                  </select>\r\n+                  {/* Add-ons (only for services with add-ons) */}\r\n+                  {serviceOptions.find(s => s.title === newBooking.service)?.hasAddOns && (\r\n+                    <div>\r\n+                      <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n+                      <div className=\"flex flex-wrap gap-3 mb-2\">\r\n+                        {addOnOptions.map(opt => (\r\n+                          <button\r\n+                            key={opt.label}\r\n+                            type=\"button\"\r\n+                            onClick={() => {\r\n+                              setNewBooking(nb => {\r\n+                                const exists = nb.addOns.find(a => a.label === opt.label);\r\n+                                const updated = exists\r\n+                                  ? nb.addOns.filter(a => a.label !== opt.label)\r\n+                                  : [...nb.addOns, opt];\r\n+                                return {\r\n+                                  ...nb,\r\n+                                  addOns: updated,\r\n+                                  amount: calculatePrice(nb.service, updated, nb.carType),\r\n+                                };\r\n+                              });\r\n+                            }}\r\n+                            className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n+                          >\r\n+                            {opt.label}\r\n+                          </button>\r\n+                        ))}\r\n+                      </div>\r\n+                    </div>\r\n+                  )}\r\n+                  {/* Date */}\r\n+                  <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Amount (auto-calculated, read-only) */}\r\n+                  <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n+                  {/* Phone (numbers only) */}\r\n+                  <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n+                    // Only allow numbers\r\n+                    const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n+                    setNewBooking({ ...newBooking, phone: val });\r\n+                  }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Email */}\r\n+                  <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Location autocomplete (Google Places API) */}\r\n+                  <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n+                    const val = e.target.value;\r\n+                    setNewBooking({ ...newBooking, location: val });\r\n+                    // Simple Google Places Autocomplete (client-side only)\r\n+                    if (window && val.length > 2) {\r\n+                      try {\r\n+                        const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n+                        const data = await resp.json();\r\n+                        setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n+                      } catch {}\r\n+                    } else {\r\n+                      setLocationSuggestions([]);\r\n+                    }\r\n+                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n+                  {/* Location suggestions dropdown */}\r\n+                  {locationSuggestions.length > 0 && (\r\n+                    <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n+                      {locationSuggestions.map((sug, i) => (\r\n+                        <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n+                          setNewBooking(nb => ({ ...nb, location: sug }));\r\n+                          setLocationSuggestions([]);\r\n+                        }}>{sug}</div>\r\n+                      ))}\r\n+                    </div>\r\n+                  )}\r\n+                  {/* Status dropdown */}\r\n+                  <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+                    <option value=\"pending\">Pending</option>\r\n+                    <option value=\"complete\">Complete</option>\r\n+                  </select>\r\n+                  <div className=\"flex gap-4 mt-4 pb-4\">\r\n+                    <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n+                    <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={() => setShowAdd(false)}>Cancel</button>\r\n+                  </div>\r\n+                </form>\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1760670876217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,9 @@\n   ];\r\n   const addOnOptions = [\r\n     { label: \"Pet Hair Removal\", price: 20 },\r\n     { label: \"Interior Shampoo\", price: 30 },\r\n+    { label: \"Engine Bay Cleaning\", price: 25 },\r\n   ];\r\n   const carTypeOptions = [\r\n     { label: \"Sedan\", price: 0 },\r\n     { label: \"SUV\", price: 10 },\r\n"
                },
                {
                    "date": 1760670886394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,318 @@\n+import { useEffect, useState } from \"react\";\r\n+import { useRouter } from \"next/router\";\r\n+\r\n+// Mock booking data for demo\r\n+const initialBookings = [\r\n+  { id: 1, name: \"John Doe\", service: \"Complete Interior Detail\", date: \"2025-10-10\", amount: 130, status: \"complete\", phone: \"902-555-1234\", email: \"john@example.com\", location: \"Halifax\" },\r\n+  { id: 2, name: \"Jane Smith\", service: \"Premium Exterior Wash\", date: \"2025-10-12\", amount: 50, status: \"pending\", phone: \"902-555-5678\", email: \"jane@example.com\", location: \"Dartmouth\" },\r\n+  { id: 3, name: \"Alex Lee\", service: \"Ultimate Full Detail\", date: \"2025-10-15\", amount: 160, status: \"complete\", phone: \"902-555-9999\", email: \"alex@example.com\", location: \"Bedford\" },\r\n+];\r\n+\r\n+export default function AdminDashboard() {\r\n+  const router = useRouter();\r\n+  const [bookings, setBookings] = useState(initialBookings);\r\n+  const [showAdd, setShowAdd] = useState(false);\r\n+  const [showDetail, setShowDetail] = useState(false);\r\n+  const [detailBooking, setDetailBooking] = useState(null);\r\n+  // Service/add-on logic\r\n+  const serviceOptions = [\r\n+    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: false },\r\n+    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n+    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n+  ];\r\n+  const addOnOptions = [\r\n+    { label: \"Pet Hair Removal\", price: 20 },\r\n+    { label: \"c\", price: 30 },\r\n+    { label: \"Engine Bay Cleaning\", price: 25 },\r\n+  ];\r\n+  const carTypeOptions = [\r\n+    { label: \"Sedan\", price: 0 },\r\n+    { label: \"SUV\", price: 10 },\r\n+    { label: \"Truck\", price: 20 },\r\n+  ];\r\n+  // Booking state\r\n+  const [newBooking, setNewBooking] = useState({\r\n+    name: \"\",\r\n+    service: serviceOptions[0].title,\r\n+    date: \"\",\r\n+    amount: serviceOptions[0].basePrice,\r\n+    status: \"pending\",\r\n+    phone: \"\",\r\n+    email: \"\",\r\n+    location: \"\",\r\n+    addOns: [],\r\n+    carType: carTypeOptions[0].label,\r\n+  });\r\n+  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n+\r\n+  useEffect(() => {\r\n+    if (typeof window !== \"undefined\") {\r\n+      const saved = window.localStorage.getItem(\"adminAuth\");\r\n+      if (saved !== \"Detailing1313!\") {\r\n+        router.replace(\"/admin\");\r\n+      }\r\n+    }\r\n+  }, [router]);\r\n+\r\n+  // Calculate total revenue\r\n+  const totalRevenue = bookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n+\r\n+  // Add new booking\r\n+  // Calculate price\r\n+  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n+    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n+    let price = service ? service.basePrice : 0;\r\n+    if (service && service.hasAddOns && addOns.length) {\r\n+      price += addOns.reduce((sum, a) => sum + a.price, 0);\r\n+    }\r\n+    const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n+    if (carType) price += carType.price;\r\n+    // Special rule for Complete Interior Detail\r\n+    if (serviceTitle === \"Complete Interior Detail\") {\r\n+      if (carTypeLabel === \"SUV\") price += 20;\r\n+      else if (carTypeLabel === \"Truck\") price += 30;\r\n+    }\r\n+    return price;\r\n+  };\r\n+\r\n+  // Add booking\r\n+  const handleAddBooking = (e) => {\r\n+    e.preventDefault();\r\n+    setBookings([\r\n+      ...bookings,\r\n+      {\r\n+        ...newBooking,\r\n+        id: bookings.length + 1,\r\n+        amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n+      }\r\n+    ]);\r\n+    setNewBooking({\r\n+      name: \"\",\r\n+      service: serviceOptions[0].title,\r\n+      date: \"\",\r\n+      amount: serviceOptions[0].basePrice,\r\n+      status: \"pending\",\r\n+      phone: \"\",\r\n+      email: \"\",\r\n+      location: \"\",\r\n+      addOns: [],\r\n+      carType: carTypeOptions[0].label,\r\n+    });\r\n+    setShowAdd(false);\r\n+  };\r\n+\r\n+  // Show booking details modal\r\n+  const handleShowDetail = (booking) => {\r\n+    setDetailBooking(booking);\r\n+    setShowDetail(true);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n+      <div className=\"max-w-5xl mx-auto\">\r\n+        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n+        {/* Revenue summary */}\r\n+        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n+          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n+            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n+            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n+            <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Pending</div>\r\n+            <div className=\"text-3xl font-bold text-yellow-600\">{bookings.filter(b => b.status === \"pending\").length}</div>\r\n+          </div>\r\n+        </div>\r\n+        {/* Booking list */}\r\n+        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n+          <div className=\"flex justify-between items-center mb-4\">\r\n+            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n+            <button\r\n+              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+              onClick={() => setShowAdd(true)}\r\n+            >\r\n+              Add Booking\r\n+            </button>\r\n+          </div>\r\n+          <table className=\"w-full text-left border-collapse\">\r\n+            <thead>\r\n+              <tr style={{ background: '#f5f5f5' }}>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n+              </tr>\r\n+            </thead>\r\n+            <tbody>\r\n+              {bookings.map(b => (\r\n+                <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleShowDetail(b)}>{b.name}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.service}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.date}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>${b.amount}</td>\r\n+                  <td className=\"py-2 px-3\">\r\n+                    <span className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}>{b.status}</span>\r\n+                  </td>\r\n+                </tr>\r\n+              ))}\r\n+            </tbody>\r\n+          </table>\r\n+        </div>\r\n+        {/* Booking details modal */}\r\n+        {showDetail && detailBooking && (\r\n+          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n+              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n+              <div className=\"space-y-3 text-gray-800\">\r\n+                <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n+                <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n+                <div><span className=\"font-semibold\">Date:</span> {detailBooking.date}</div>\r\n+                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n+                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n+                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n+                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n+                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n+              </div>\r\n+              <button className=\"mt-8 w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\" onClick={() => setShowDetail(false)}>Close</button>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+        {/* Add booking modal */}\r\n+        {showAdd && (\r\n+          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+            <div\r\n+              className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n+              style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n+            >\r\n+              {/* Close (X) button */}\r\n+              <button\r\n+                type=\"button\"\r\n+                aria-label=\"Close\"\r\n+                onClick={() => setShowAdd(false)}\r\n+                className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n+                style={{ background: 'none', border: 'none' }}\r\n+              >\r\n+                &times;\r\n+              </button>\r\n+              <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n+              <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n+                <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n+                  {/* Name */}\r\n+                  <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Service dropdown */}\r\n+                  <select required value={newBooking.service} onChange={e => {\r\n+                    const selectedService = e.target.value;\r\n+                    setNewBooking(nb => ({\r\n+                      ...nb,\r\n+                      service: selectedService,\r\n+                      addOns: [],\r\n+                      amount: calculatePrice(selectedService, [], nb.carType),\r\n+                    }));\r\n+                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+                    {serviceOptions.map(s => (\r\n+                      <option key={s.title} value={s.title}>{s.title}</option>\r\n+                    ))}\r\n+                  </select>\r\n+                  {/* Car type dropdown */}\r\n+                  <select required value={newBooking.carType} onChange={e => {\r\n+                    const carType = e.target.value;\r\n+                    setNewBooking(nb => ({\r\n+                      ...nb,\r\n+                      carType,\r\n+                      amount: calculatePrice(nb.service, nb.addOns, carType),\r\n+                    }));\r\n+                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+                    {carTypeOptions.map(c => (\r\n+                      <option key={c.label} value={c.label}>{c.label}</option>\r\n+                    ))}\r\n+                  </select>\r\n+                  {/* Add-ons (only for services with add-ons) */}\r\n+                  {serviceOptions.find(s => s.title === newBooking.service)?.hasAddOns && (\r\n+                    <div>\r\n+                      <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n+                      <div className=\"flex flex-wrap gap-3 mb-2\">\r\n+                        {addOnOptions.map(opt => (\r\n+                          <button\r\n+                            key={opt.label}\r\n+                            type=\"button\"\r\n+                            onClick={() => {\r\n+                              setNewBooking(nb => {\r\n+                                const exists = nb.addOns.find(a => a.label === opt.label);\r\n+                                const updated = exists\r\n+                                  ? nb.addOns.filter(a => a.label !== opt.label)\r\n+                                  : [...nb.addOns, opt];\r\n+                                return {\r\n+                                  ...nb,\r\n+                                  addOns: updated,\r\n+                                  amount: calculatePrice(nb.service, updated, nb.carType),\r\n+                                };\r\n+                              });\r\n+                            }}\r\n+                            className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n+                          >\r\n+                            {opt.label}\r\n+                          </button>\r\n+                        ))}\r\n+                      </div>\r\n+                    </div>\r\n+                  )}\r\n+                  {/* Date */}\r\n+                  <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Amount (auto-calculated, read-only) */}\r\n+                  <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n+                  {/* Phone (numbers only) */}\r\n+                  <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n+                    // Only allow numbers\r\n+                    const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n+                    setNewBooking({ ...newBooking, phone: val });\r\n+                  }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Email */}\r\n+                  <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Location autocomplete (Google Places API) */}\r\n+                  <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n+                    const val = e.target.value;\r\n+                    setNewBooking({ ...newBooking, location: val });\r\n+                    // Simple Google Places Autocomplete (client-side only)\r\n+                    if (window && val.length > 2) {\r\n+                      try {\r\n+                        const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n+                        const data = await resp.json();\r\n+                        setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n+                      } catch {}\r\n+                    } else {\r\n+                      setLocationSuggestions([]);\r\n+                    }\r\n+                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n+                  {/* Location suggestions dropdown */}\r\n+                  {locationSuggestions.length > 0 && (\r\n+                    <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n+                      {locationSuggestions.map((sug, i) => (\r\n+                        <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n+                          setNewBooking(nb => ({ ...nb, location: sug }));\r\n+                          setLocationSuggestions([]);\r\n+                        }}>{sug}</div>\r\n+                      ))}\r\n+                    </div>\r\n+                  )}\r\n+                  {/* Status dropdown */}\r\n+                  <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+                    <option value=\"pending\">Pending</option>\r\n+                    <option value=\"complete\">Complete</option>\r\n+                  </select>\r\n+                  <div className=\"flex gap-4 mt-4 pb-4\">\r\n+                    <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n+                    <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={() => setShowAdd(false)}>Cancel</button>\r\n+                  </div>\r\n+                </form>\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1760670895943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n     { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n   ];\r\n   const addOnOptions = [\r\n     { label: \"Pet Hair Removal\", price: 20 },\r\n-    { label: \"c\", price: 30 },\r\n+    { label: \"Clay Bar\", price: 20 },\r\n     { label: \"Engine Bay Cleaning\", price: 25 },\r\n   ];\r\n   const carTypeOptions = [\r\n     { label: \"Sedan\", price: 0 },\r\n@@ -315,1525 +315,4 @@\n       </div>\r\n     </div>\r\n   );\r\n }\r\n-import { useEffect, useState } from \"react\";\r\n-import { useRouter } from \"next/router\";\r\n-\r\n-// Mock booking data for demo\r\n-const initialBookings = [\r\n-  { id: 1, name: \"John Doe\", service: \"Complete Interior Detail\", date: \"2025-10-10\", amount: 130, status: \"complete\", phone: \"902-555-1234\", email: \"john@example.com\", location: \"Halifax\" },\r\n-  { id: 2, name: \"Jane Smith\", service: \"Premium Exterior Wash\", date: \"2025-10-12\", amount: 50, status: \"pending\", phone: \"902-555-5678\", email: \"jane@example.com\", location: \"Dartmouth\" },\r\n-  { id: 3, name: \"Alex Lee\", service: \"Ultimate Full Detail\", date: \"2025-10-15\", amount: 160, status: \"complete\", phone: \"902-555-9999\", email: \"alex@example.com\", location: \"Bedford\" },\r\n-];\r\n-\r\n-export default function AdminDashboard() {\r\n-  const router = useRouter();\r\n-  const [bookings, setBookings] = useState(initialBookings);\r\n-  const [showAdd, setShowAdd] = useState(false);\r\n-  const [showDetail, setShowDetail] = useState(false);\r\n-  const [detailBooking, setDetailBooking] = useState(null);\r\n-  // Service/add-on logic\r\n-  const serviceOptions = [\r\n-    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: false },\r\n-    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n-    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n-  ];\r\n-  const addOnOptions = [\r\n-    { label: \"Pet Hair Removal\", price: 20 },\r\n-    { label: \"Interior Shampoo\", price: 30 },\r\n-    { label: \"Engine Bay Cleaning\", price: 25 },\r\n-  ];\r\n-  const carTypeOptions = [\r\n-    { label: \"Sedan\", price: 0 },\r\n-    { label: \"SUV\", price: 10 },\r\n-    { label: \"Truck\", price: 20 },\r\n-  ];\r\n-  // Booking state\r\n-  const [newBooking, setNewBooking] = useState({\r\n-    name: \"\",\r\n-    service: serviceOptions[0].title,\r\n-    date: \"\",\r\n-    amount: serviceOptions[0].basePrice,\r\n-    status: \"pending\",\r\n-    phone: \"\",\r\n-    email: \"\",\r\n-    location: \"\",\r\n-    addOns: [],\r\n-    carType: carTypeOptions[0].label,\r\n-  });\r\n-  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n-\r\n-  useEffect(() => {\r\n-    if (typeof window !== \"undefined\") {\r\n-      const saved = window.localStorage.getItem(\"adminAuth\");\r\n-      if (saved !== \"Detailing1313!\") {\r\n-        router.replace(\"/admin\");\r\n-      }\r\n-    }\r\n-  }, [router]);\r\n-\r\n-  // Calculate total revenue\r\n-  const totalRevenue = bookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n-\r\n-  // Add new booking\r\n-  // Calculate price\r\n-  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n-    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n-    let price = service ? service.basePrice : 0;\r\n-    if (service && service.hasAddOns && addOns.length) {\r\n-      price += addOns.reduce((sum, a) => sum + a.price, 0);\r\n-    }\r\n-    const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n-    if (carType) price += carType.price;\r\n-    // Special rule for Complete Interior Detail\r\n-    if (serviceTitle === \"Complete Interior Detail\") {\r\n-      if (carTypeLabel === \"SUV\") price += 20;\r\n-      else if (carTypeLabel === \"Truck\") price += 30;\r\n-    }\r\n-    return price;\r\n-  };\r\n-\r\n-  // Add booking\r\n-  const handleAddBooking = (e) => {\r\n-    e.preventDefault();\r\n-    setBookings([\r\n-      ...bookings,\r\n-      {\r\n-        ...newBooking,\r\n-        id: bookings.length + 1,\r\n-        amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n-      }\r\n-    ]);\r\n-    setNewBooking({\r\n-      name: \"\",\r\n-      service: serviceOptions[0].title,\r\n-      date: \"\",\r\n-      amount: serviceOptions[0].basePrice,\r\n-      status: \"pending\",\r\n-      phone: \"\",\r\n-      email: \"\",\r\n-      location: \"\",\r\n-      addOns: [],\r\n-      carType: carTypeOptions[0].label,\r\n-    });\r\n-    setShowAdd(false);\r\n-  };\r\n-\r\n-  // Show booking details modal\r\n-  const handleShowDetail = (booking) => {\r\n-    setDetailBooking(booking);\r\n-    setShowDetail(true);\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n-      <div className=\"max-w-5xl mx-auto\">\r\n-        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n-        {/* Revenue summary */}\r\n-        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n-          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n-            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n-            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n-          </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n-            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n-            <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n-          </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n-            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Pending</div>\r\n-            <div className=\"text-3xl font-bold text-yellow-600\">{bookings.filter(b => b.status === \"pending\").length}</div>\r\n-          </div>\r\n-        </div>\r\n-        {/* Booking list */}\r\n-        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n-          <div className=\"flex justify-between items-center mb-4\">\r\n-            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n-            <button\r\n-              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-              onClick={() => setShowAdd(true)}\r\n-            >\r\n-              Add Booking\r\n-            </button>\r\n-          </div>\r\n-          <table className=\"w-full text-left border-collapse\">\r\n-            <thead>\r\n-              <tr style={{ background: '#f5f5f5' }}>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n-              </tr>\r\n-            </thead>\r\n-            <tbody>\r\n-              {bookings.map(b => (\r\n-                <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleShowDetail(b)}>{b.name}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.service}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.date}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>${b.amount}</td>\r\n-                  <td className=\"py-2 px-3\">\r\n-                    <span className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}>{b.status}</span>\r\n-                  </td>\r\n-                </tr>\r\n-              ))}\r\n-            </tbody>\r\n-          </table>\r\n-        </div>\r\n-        {/* Booking details modal */}\r\n-        {showDetail && detailBooking && (\r\n-          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n-              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n-              <div className=\"space-y-3 text-gray-800\">\r\n-                <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n-                <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n-                <div><span className=\"font-semibold\">Date:</span> {detailBooking.date}</div>\r\n-                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n-                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n-                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n-                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n-                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n-              </div>\r\n-              <button className=\"mt-8 w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\" onClick={() => setShowDetail(false)}>Close</button>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-        {/* Add booking modal */}\r\n-        {showAdd && (\r\n-          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-            <div\r\n-              className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n-              style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n-            >\r\n-              {/* Close (X) button */}\r\n-              <button\r\n-                type=\"button\"\r\n-                aria-label=\"Close\"\r\n-                onClick={() => setShowAdd(false)}\r\n-                className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n-                style={{ background: 'none', border: 'none' }}\r\n-              >\r\n-                &times;\r\n-              </button>\r\n-              <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n-              <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n-                <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n-                  {/* Name */}\r\n-                  <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Service dropdown */}\r\n-                  <select required value={newBooking.service} onChange={e => {\r\n-                    const selectedService = e.target.value;\r\n-                    setNewBooking(nb => ({\r\n-                      ...nb,\r\n-                      service: selectedService,\r\n-                      addOns: [],\r\n-                      amount: calculatePrice(selectedService, [], nb.carType),\r\n-                    }));\r\n-                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-                    {serviceOptions.map(s => (\r\n-                      <option key={s.title} value={s.title}>{s.title}</option>\r\n-                    ))}\r\n-                  </select>\r\n-                  {/* Car type dropdown */}\r\n-                  <select required value={newBooking.carType} onChange={e => {\r\n-                    const carType = e.target.value;\r\n-                    setNewBooking(nb => ({\r\n-                      ...nb,\r\n-                      carType,\r\n-                      amount: calculatePrice(nb.service, nb.addOns, carType),\r\n-                    }));\r\n-                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-                    {carTypeOptions.map(c => (\r\n-                      <option key={c.label} value={c.label}>{c.label}</option>\r\n-                    ))}\r\n-                  </select>\r\n-                  {/* Add-ons (only for services with add-ons) */}\r\n-                  {serviceOptions.find(s => s.title === newBooking.service)?.hasAddOns && (\r\n-                    <div>\r\n-                      <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n-                      <div className=\"flex flex-wrap gap-3 mb-2\">\r\n-                        {addOnOptions.map(opt => (\r\n-                          <button\r\n-                            key={opt.label}\r\n-                            type=\"button\"\r\n-                            onClick={() => {\r\n-                              setNewBooking(nb => {\r\n-                                const exists = nb.addOns.find(a => a.label === opt.label);\r\n-                                const updated = exists\r\n-                                  ? nb.addOns.filter(a => a.label !== opt.label)\r\n-                                  : [...nb.addOns, opt];\r\n-                                return {\r\n-                                  ...nb,\r\n-                                  addOns: updated,\r\n-                                  amount: calculatePrice(nb.service, updated, nb.carType),\r\n-                                };\r\n-                              });\r\n-                            }}\r\n-                            className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n-                          >\r\n-                            {opt.label}\r\n-                          </button>\r\n-                        ))}\r\n-                      </div>\r\n-                    </div>\r\n-                  )}\r\n-                  {/* Date */}\r\n-                  <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Amount (auto-calculated, read-only) */}\r\n-                  <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n-                  {/* Phone (numbers only) */}\r\n-                  <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n-                    // Only allow numbers\r\n-                    const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n-                    setNewBooking({ ...newBooking, phone: val });\r\n-                  }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Email */}\r\n-                  <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Location autocomplete (Google Places API) */}\r\n-                  <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n-                    const val = e.target.value;\r\n-                    setNewBooking({ ...newBooking, location: val });\r\n-                    // Simple Google Places Autocomplete (client-side only)\r\n-                    if (window && val.length > 2) {\r\n-                      try {\r\n-                        const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n-                        const data = await resp.json();\r\n-                        setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n-                      } catch {}\r\n-                    } else {\r\n-                      setLocationSuggestions([]);\r\n-                    }\r\n-                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n-                  {/* Location suggestions dropdown */}\r\n-                  {locationSuggestions.length > 0 && (\r\n-                    <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n-                      {locationSuggestions.map((sug, i) => (\r\n-                        <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n-                          setNewBooking(nb => ({ ...nb, location: sug }));\r\n-                          setLocationSuggestions([]);\r\n-                        }}>{sug}</div>\r\n-                      ))}\r\n-                    </div>\r\n-                  )}\r\n-                  {/* Status dropdown */}\r\n-                  <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-                    <option value=\"pending\">Pending</option>\r\n-                    <option value=\"complete\">Complete</option>\r\n-                  </select>\r\n-                  <div className=\"flex gap-4 mt-4 pb-4\">\r\n-                    <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n-                    <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={() => setShowAdd(false)}>Cancel</button>\r\n-                  </div>\r\n-                </form>\r\n-              </div>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import { useEffect, useState } from \"react\";\r\n-import { useRouter } from \"next/router\";\r\n-\r\n-// Mock booking data for demo\r\n-const initialBookings = [\r\n-  { id: 1, name: \"John Doe\", service: \"Complete Interior Detail\", date: \"2025-10-10\", amount: 130, status: \"complete\", phone: \"902-555-1234\", email: \"john@example.com\", location: \"Halifax\" },\r\n-  { id: 2, name: \"Jane Smith\", service: \"Premium Exterior Wash\", date: \"2025-10-12\", amount: 50, status: \"pending\", phone: \"902-555-5678\", email: \"jane@example.com\", location: \"Dartmouth\" },\r\n-  { id: 3, name: \"Alex Lee\", service: \"Ultimate Full Detail\", date: \"2025-10-15\", amount: 160, status: \"complete\", phone: \"902-555-9999\", email: \"alex@example.com\", location: \"Bedford\" },\r\n-];\r\n-\r\n-export default function AdminDashboard() {\r\n-  const router = useRouter();\r\n-  const [bookings, setBookings] = useState(initialBookings);\r\n-  const [showAdd, setShowAdd] = useState(false);\r\n-  const [showDetail, setShowDetail] = useState(false);\r\n-  const [detailBooking, setDetailBooking] = useState(null);\r\n-  // Service/add-on logic\r\n-  const serviceOptions = [\r\n-    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: false },\r\n-    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n-    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n-  ];\r\n-  const addOnOptions = [\r\n-    { label: \"Pet Hair Removal\", price: 20 },\r\n-  ];\r\n-  const carTypeOptions = [\r\n-    { label: \"Sedan\", price: 0 },\r\n-    { label: \"SUV\", price: 10 },\r\n-    { label: \"Truck\", price: 20 },\r\n-  ];\r\n-  // Booking state\r\n-  const [newBooking, setNewBooking] = useState({\r\n-    name: \"\",\r\n-    service: serviceOptions[0].title,\r\n-    date: \"\",\r\n-    amount: serviceOptions[0].basePrice,\r\n-    status: \"pending\",\r\n-    phone: \"\",\r\n-    email: \"\",\r\n-    location: \"\",\r\n-    addOns: [],\r\n-    carType: carTypeOptions[0].label,\r\n-  });\r\n-  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n-\r\n-  useEffect(() => {\r\n-    if (typeof window !== \"undefined\") {\r\n-      const saved = window.localStorage.getItem(\"adminAuth\");\r\n-      if (saved !== \"Detailing1313!\") {\r\n-        router.replace(\"/admin\");\r\n-      }\r\n-    }\r\n-  }, [router]);\r\n-\r\n-  // Calculate total revenue\r\n-  const totalRevenue = bookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n-\r\n-  // Add new booking\r\n-  // Calculate price\r\n-  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n-    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n-    let price = service ? service.basePrice : 0;\r\n-    if (service && service.hasAddOns && addOns.length) {\r\n-      price += addOns.reduce((sum, a) => sum + a.price, 0);\r\n-    }\r\n-    const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n-    if (carType) price += carType.price;\r\n-    // Special rule for Complete Interior Detail\r\n-    if (serviceTitle === \"Complete Interior Detail\") {\r\n-      if (carTypeLabel === \"SUV\") price += 20;\r\n-      else if (carTypeLabel === \"Truck\") price += 30;\r\n-    }\r\n-    return price;\r\n-  };\r\n-\r\n-  // Add booking\r\n-  const handleAddBooking = (e) => {\r\n-    e.preventDefault();\r\n-    setBookings([\r\n-      ...bookings,\r\n-      {\r\n-        ...newBooking,\r\n-        id: bookings.length + 1,\r\n-        amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n-      }\r\n-    ]);\r\n-    setNewBooking({\r\n-      name: \"\",\r\n-      service: serviceOptions[0].title,\r\n-      date: \"\",\r\n-      amount: serviceOptions[0].basePrice,\r\n-      status: \"pending\",\r\n-      phone: \"\",\r\n-      email: \"\",\r\n-      location: \"\",\r\n-      addOns: [],\r\n-      carType: carTypeOptions[0].label,\r\n-    });\r\n-    setShowAdd(false);\r\n-  };\r\n-\r\n-  // Show booking details modal\r\n-  const handleShowDetail = (booking) => {\r\n-    setDetailBooking(booking);\r\n-    setShowDetail(true);\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n-      <div className=\"max-w-5xl mx-auto\">\r\n-        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n-        {/* Revenue summary */}\r\n-        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n-          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n-            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n-            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n-          </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n-            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n-            <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n-          </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n-            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Pending</div>\r\n-            <div className=\"text-3xl font-bold text-yellow-600\">{bookings.filter(b => b.status === \"pending\").length}</div>\r\n-          </div>\r\n-        </div>\r\n-        {/* Booking list */}\r\n-        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n-          <div className=\"flex justify-between items-center mb-4\">\r\n-            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n-            <button\r\n-              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-              onClick={() => setShowAdd(true)}\r\n-            >\r\n-              Add Booking\r\n-            </button>\r\n-          </div>\r\n-          <table className=\"w-full text-left border-collapse\">\r\n-            <thead>\r\n-              <tr style={{ background: '#f5f5f5' }}>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n-              </tr>\r\n-            </thead>\r\n-            <tbody>\r\n-              {bookings.map(b => (\r\n-                <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleShowDetail(b)}>{b.name}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.service}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.date}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>${b.amount}</td>\r\n-                  <td className=\"py-2 px-3\">\r\n-                    <span className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}>{b.status}</span>\r\n-                  </td>\r\n-                </tr>\r\n-              ))}\r\n-            </tbody>\r\n-          </table>\r\n-        </div>\r\n-        {/* Booking details modal */}\r\n-        {showDetail && detailBooking && (\r\n-          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n-              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n-              <div className=\"space-y-3 text-gray-800\">\r\n-                <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n-                <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n-                <div><span className=\"font-semibold\">Date:</span> {detailBooking.date}</div>\r\n-                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n-                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n-                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n-                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n-                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n-              </div>\r\n-              <button className=\"mt-8 w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\" onClick={() => setShowDetail(false)}>Close</button>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-        {/* Add booking modal */}\r\n-        {showAdd && (\r\n-          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-            <div\r\n-              className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n-              style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n-            >\r\n-              {/* Close (X) button */}\r\n-              <button\r\n-                type=\"button\"\r\n-                aria-label=\"Close\"\r\n-                onClick={() => setShowAdd(false)}\r\n-                className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n-                style={{ background: 'none', border: 'none' }}\r\n-              >\r\n-                &times;\r\n-              </button>\r\n-              <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n-              <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n-                <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n-                  {/* Name */}\r\n-                  <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Service dropdown */}\r\n-                  <select required value={newBooking.service} onChange={e => {\r\n-                    const selectedService = e.target.value;\r\n-                    setNewBooking(nb => ({\r\n-                      ...nb,\r\n-                      service: selectedService,\r\n-                      addOns: [],\r\n-                      amount: calculatePrice(selectedService, [], nb.carType),\r\n-                    }));\r\n-                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-                    {serviceOptions.map(s => (\r\n-                      <option key={s.title} value={s.title}>{s.title}</option>\r\n-                    ))}\r\n-                  </select>\r\n-                  {/* Car type dropdown */}\r\n-                  <select required value={newBooking.carType} onChange={e => {\r\n-                    const carType = e.target.value;\r\n-                    setNewBooking(nb => ({\r\n-                      ...nb,\r\n-                      carType,\r\n-                      amount: calculatePrice(nb.service, nb.addOns, carType),\r\n-                    }));\r\n-                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-                    {carTypeOptions.map(c => (\r\n-                      <option key={c.label} value={c.label}>{c.label}</option>\r\n-                    ))}\r\n-                  </select>\r\n-                  {/* Add-ons (only for services with add-ons) */}\r\n-                  {serviceOptions.find(s => s.title === newBooking.service)?.hasAddOns && (\r\n-                    <div>\r\n-                      <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n-                      <div className=\"flex flex-wrap gap-3 mb-2\">\r\n-                        {addOnOptions.map(opt => (\r\n-                          <button\r\n-                            key={opt.label}\r\n-                            type=\"button\"\r\n-                            onClick={() => {\r\n-                              setNewBooking(nb => {\r\n-                                const exists = nb.addOns.find(a => a.label === opt.label);\r\n-                                const updated = exists\r\n-                                  ? nb.addOns.filter(a => a.label !== opt.label)\r\n-                                  : [...nb.addOns, opt];\r\n-                                return {\r\n-                                  ...nb,\r\n-                                  addOns: updated,\r\n-                                  amount: calculatePrice(nb.service, updated, nb.carType),\r\n-                                };\r\n-                              });\r\n-                            }}\r\n-                            className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n-                          >\r\n-                            {opt.label}\r\n-                          </button>\r\n-                        ))}\r\n-                      </div>\r\n-                    </div>\r\n-                  )}\r\n-                  {/* Date */}\r\n-                  <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Amount (auto-calculated, read-only) */}\r\n-                  <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n-                  {/* Phone (numbers only) */}\r\n-                  <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n-                    // Only allow numbers\r\n-                    const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n-                    setNewBooking({ ...newBooking, phone: val });\r\n-                  }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Email */}\r\n-                  <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Location autocomplete (Google Places API) */}\r\n-                  <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n-                    const val = e.target.value;\r\n-                    setNewBooking({ ...newBooking, location: val });\r\n-                    // Simple Google Places Autocomplete (client-side only)\r\n-                    if (window && val.length > 2) {\r\n-                      try {\r\n-                        const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n-                        const data = await resp.json();\r\n-                        setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n-                      } catch {}\r\n-                    } else {\r\n-                      setLocationSuggestions([]);\r\n-                    }\r\n-                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n-                  {/* Location suggestions dropdown */}\r\n-                  {locationSuggestions.length > 0 && (\r\n-                    <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n-                      {locationSuggestions.map((sug, i) => (\r\n-                        <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n-                          setNewBooking(nb => ({ ...nb, location: sug }));\r\n-                          setLocationSuggestions([]);\r\n-                        }}>{sug}</div>\r\n-                      ))}\r\n-                    </div>\r\n-                  )}\r\n-                  {/* Status dropdown */}\r\n-                  <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-                    <option value=\"pending\">Pending</option>\r\n-                    <option value=\"complete\">Complete</option>\r\n-                  </select>\r\n-                  <div className=\"flex gap-4 mt-4 pb-4\">\r\n-                    <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n-                    <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={() => setShowAdd(false)}>Cancel</button>\r\n-                  </div>\r\n-                </form>\r\n-              </div>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import { useEffect, useState } from \"react\";\r\n-import { useRouter } from \"next/router\";\r\n-\r\n-// Mock booking data for demo\r\n-const initialBookings = [\r\n-  { id: 1, name: \"John Doe\", service: \"Complete Interior Detail\", date: \"2025-10-10\", amount: 130, status: \"complete\", phone: \"902-555-1234\", email: \"john@example.com\", location: \"Halifax\" },\r\n-  { id: 2, name: \"Jane Smith\", service: \"Premium Exterior Wash\", date: \"2025-10-12\", amount: 50, status: \"pending\", phone: \"902-555-5678\", email: \"jane@example.com\", location: \"Dartmouth\" },\r\n-  { id: 3, name: \"Alex Lee\", service: \"Ultimate Full Detail\", date: \"2025-10-15\", amount: 160, status: \"complete\", phone: \"902-555-9999\", email: \"alex@example.com\", location: \"Bedford\" },\r\n-];\r\n-\r\n-export default function AdminDashboard() {\r\n-  const router = useRouter();\r\n-  const [bookings, setBookings] = useState(initialBookings);\r\n-  const [showAdd, setShowAdd] = useState(false);\r\n-  const [showDetail, setShowDetail] = useState(false);\r\n-  const [detailBooking, setDetailBooking] = useState(null);\r\n-  // Service/add-on logic\r\n-  const serviceOptions = [\r\n-    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: false },\r\n-    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n-    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n-  ];\r\n-  const addOnOptions = [\r\n-    { label: \"Pet Hair Removal\", price: 20 },\r\n-  ];\r\n-  const carTypeOptions = [\r\n-    { label: \"Sedan\", price: 0 },\r\n-    { label: \"SUV\", price: 10 },\r\n-    { label: \"Truck\", price: 20 },\r\n-  ];\r\n-  // Booking state\r\n-  const [newBooking, setNewBooking] = useState({\r\n-    name: \"\",\r\n-    service: serviceOptions[0].title,\r\n-    date: \"\",\r\n-    amount: serviceOptions[0].basePrice,\r\n-    status: \"pending\",\r\n-    phone: \"\",\r\n-    email: \"\",\r\n-    location: \"\",\r\n-    addOns: [],\r\n-    carType: carTypeOptions[0].label,\r\n-  });\r\n-  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n-\r\n-  useEffect(() => {\r\n-    if (typeof window !== \"undefined\") {\r\n-      const saved = window.localStorage.getItem(\"adminAuth\");\r\n-      if (saved !== \"Detailing1313!\") {\r\n-        router.replace(\"/admin\");\r\n-      }\r\n-    }\r\n-  }, [router]);\r\n-\r\n-  // Calculate total revenue\r\n-  const totalRevenue = bookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n-\r\n-  // Add new booking\r\n-  // Calculate price\r\n-  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n-    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n-    let price = service ? service.basePrice : 0;\r\n-    if (service && service.hasAddOns && addOns.length) {\r\n-      price += addOns.reduce((sum, a) => sum + a.price, 0);\r\n-    }\r\n-    const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n-    if (carType) price += carType.price;\r\n-    // Special rule for Complete Interior Detail\r\n-    if (serviceTitle === \"Complete Interior Detail\") {\r\n-      if (carTypeLabel === \"SUV\") price += 20;\r\n-      else if (carTypeLabel === \"Truck\") price += 30;\r\n-    }\r\n-    return price;\r\n-  };\r\n-\r\n-  // Add booking\r\n-  const handleAddBooking = (e) => {\r\n-    e.preventDefault();\r\n-    setBookings([\r\n-      ...bookings,\r\n-      {\r\n-        ...newBooking,\r\n-        id: bookings.length + 1,\r\n-        amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n-      }\r\n-    ]);\r\n-    setNewBooking({\r\n-      name: \"\",\r\n-      service: serviceOptions[0].title,\r\n-      date: \"\",\r\n-      amount: serviceOptions[0].basePrice,\r\n-      status: \"pending\",\r\n-      phone: \"\",\r\n-      email: \"\",\r\n-      location: \"\",\r\n-      addOns: [],\r\n-      carType: carTypeOptions[0].label,\r\n-    });\r\n-    setShowAdd(false);\r\n-  };\r\n-\r\n-  // Show booking details modal\r\n-  const handleShowDetail = (booking) => {\r\n-    setDetailBooking(booking);\r\n-    setShowDetail(true);\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n-      <div className=\"max-w-5xl mx-auto\">\r\n-        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n-        {/* Revenue summary */}\r\n-        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n-          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n-            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n-            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n-          </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n-            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n-            <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n-          </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n-            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Pending</div>\r\n-            <div className=\"text-3xl font-bold text-yellow-600\">{bookings.filter(b => b.status === \"pending\").length}</div>\r\n-          </div>\r\n-        </div>\r\n-        {/* Booking list */}\r\n-        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n-          <div className=\"flex justify-between items-center mb-4\">\r\n-            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n-            <button\r\n-              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-              onClick={() => setShowAdd(true)}\r\n-            >\r\n-              Add Booking\r\n-            </button>\r\n-          </div>\r\n-          <table className=\"w-full text-left border-collapse\">\r\n-            <thead>\r\n-              <tr style={{ background: '#f5f5f5' }}>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n-              </tr>\r\n-            </thead>\r\n-            <tbody>\r\n-              {bookings.map(b => (\r\n-                <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleShowDetail(b)}>{b.name}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.service}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.date}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>${b.amount}</td>\r\n-                  <td className=\"py-2 px-3\">\r\n-                    <span className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}>{b.status}</span>\r\n-                  </td>\r\n-                </tr>\r\n-              ))}\r\n-            </tbody>\r\n-          </table>\r\n-        </div>\r\n-        {/* Booking details modal */}\r\n-        {showDetail && detailBooking && (\r\n-          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n-              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n-              <div className=\"space-y-3 text-gray-800\">\r\n-                <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n-                <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n-                <div><span className=\"font-semibold\">Date:</span> {detailBooking.date}</div>\r\n-                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n-                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n-                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n-                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n-                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n-              </div>\r\n-              <button className=\"mt-8 w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\" onClick={() => setShowDetail(false)}>Close</button>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-        {/* Add booking modal */}\r\n-        {showAdd && (\r\n-          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-            <div\r\n-              className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n-              style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n-            >\r\n-              {/* Close (X) button */}\r\n-              <button\r\n-                type=\"button\"\r\n-                aria-label=\"Close\"\r\n-                onClick={() => setShowAdd(false)}\r\n-                className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n-                style={{ background: 'none', border: 'none' }}\r\n-              >\r\n-                &times;\r\n-              </button>\r\n-              <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n-              <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n-                <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n-                  {/* Name */}\r\n-                  <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Service dropdown */}\r\n-                  <select required value={newBooking.service} onChange={e => {\r\n-                    const selectedService = e.target.value;\r\n-                    setNewBooking(nb => ({\r\n-                      ...nb,\r\n-                      service: selectedService,\r\n-                      addOns: [],\r\n-                      amount: calculatePrice(selectedService, [], nb.carType),\r\n-                    }));\r\n-                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-                    {serviceOptions.map(s => (\r\n-                      <option key={s.title} value={s.title}>{s.title}</option>\r\n-                    ))}\r\n-                  </select>\r\n-                  {/* Car type dropdown */}\r\n-                  <select required value={newBooking.carType} onChange={e => {\r\n-                    const carType = e.target.value;\r\n-                    setNewBooking(nb => ({\r\n-                      ...nb,\r\n-                      carType,\r\n-                      amount: calculatePrice(nb.service, nb.addOns, carType),\r\n-                    }));\r\n-                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-                    {carTypeOptions.map(c => (\r\n-                      <option key={c.label} value={c.label}>{c.label}</option>\r\n-                    ))}\r\n-                  </select>\r\n-                  {/* Add-ons (only for services with add-ons) */}\r\n-                  {serviceOptions.find(s => s.title === newBooking.service)?.hasAddOns && (\r\n-                    <div>\r\n-                      <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n-                      <div className=\"flex flex-wrap gap-3 mb-2\">\r\n-                        {addOnOptions.map(opt => (\r\n-                          <button\r\n-                            key={opt.label}\r\n-                            type=\"button\"\r\n-                            onClick={() => {\r\n-                              setNewBooking(nb => {\r\n-                                const exists = nb.addOns.find(a => a.label === opt.label);\r\n-                                const updated = exists\r\n-                                  ? nb.addOns.filter(a => a.label !== opt.label)\r\n-                                  : [...nb.addOns, opt];\r\n-                                return {\r\n-                                  ...nb,\r\n-                                  addOns: updated,\r\n-                                  amount: calculatePrice(nb.service, updated, nb.carType),\r\n-                                };\r\n-                              });\r\n-                            }}\r\n-                            className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n-                          >\r\n-                            {opt.label}\r\n-                          </button>\r\n-                        ))}\r\n-                      </div>\r\n-                    </div>\r\n-                  )}\r\n-                  {/* Date */}\r\n-                  <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Amount (auto-calculated, read-only) */}\r\n-                  <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n-                  {/* Phone (numbers only) */}\r\n-                  <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n-                    // Only allow numbers\r\n-                    const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n-                    setNewBooking({ ...newBooking, phone: val });\r\n-                  }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Email */}\r\n-                  <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Location autocomplete (Google Places API) */}\r\n-                  <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n-                    const val = e.target.value;\r\n-                    setNewBooking({ ...newBooking, location: val });\r\n-                    // Simple Google Places Autocomplete (client-side only)\r\n-                    if (window && val.length > 2) {\r\n-                      try {\r\n-                        const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n-                        const data = await resp.json();\r\n-                        setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n-                      } catch {}\r\n-                    } else {\r\n-                      setLocationSuggestions([]);\r\n-                    }\r\n-                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n-                  {/* Location suggestions dropdown */}\r\n-                  {locationSuggestions.length > 0 && (\r\n-                    <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n-                      {locationSuggestions.map((sug, i) => (\r\n-                        <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n-                          setNewBooking(nb => ({ ...nb, location: sug }));\r\n-                          setLocationSuggestions([]);\r\n-                        }}>{sug}</div>\r\n-                      ))}\r\n-                    </div>\r\n-                  )}\r\n-                  {/* Status dropdown */}\r\n-                  <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-                    <option value=\"pending\">Pending</option>\r\n-                    <option value=\"complete\">Complete</option>\r\n-                  </select>\r\n-                  <div className=\"flex gap-4 mt-4 pb-4\">\r\n-                    <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n-                    <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={() => setShowAdd(false)}>Cancel</button>\r\n-                  </div>\r\n-                </form>\r\n-              </div>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import { useEffect, useState } from \"react\";\r\n-import { useRouter } from \"next/router\";\r\n-\r\n-// Mock booking data for demo\r\n-const initialBookings = [\r\n-  { id: 1, name: \"John Doe\", service: \"Complete Interior Detail\", date: \"2025-10-10\", amount: 130, status: \"complete\", phone: \"902-555-1234\", email: \"john@example.com\", location: \"Halifax\" },\r\n-  { id: 2, name: \"Jane Smith\", service: \"Premium Exterior Wash\", date: \"2025-10-12\", amount: 50, status: \"pending\", phone: \"902-555-5678\", email: \"jane@example.com\", location: \"Dartmouth\" },\r\n-  { id: 3, name: \"Alex Lee\", service: \"Ultimate Full Detail\", date: \"2025-10-15\", amount: 160, status: \"complete\", phone: \"902-555-9999\", email: \"alex@example.com\", location: \"Bedford\" },\r\n-];\r\n-\r\n-export default function AdminDashboard() {\r\n-  const router = useRouter();\r\n-  const [bookings, setBookings] = useState(initialBookings);\r\n-  const [showAdd, setShowAdd] = useState(false);\r\n-  const [showDetail, setShowDetail] = useState(false);\r\n-  const [detailBooking, setDetailBooking] = useState(null);\r\n-  // Service/add-on logic\r\n-  const serviceOptions = [\r\n-    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: false },\r\n-    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n-    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n-  ];\r\n-  const addOnOptions = [\r\n-    { label: \"Pet Hair Removal\", price: 20 },\r\n-  ];\r\n-  const carTypeOptions = [\r\n-    { label: \"Sedan\", price: 0 },\r\n-    { label: \"SUV\", price: 10 },\r\n-    { label: \"Truck\", price: 20 },\r\n-  ];\r\n-  // Booking state\r\n-  const [newBooking, setNewBooking] = useState({\r\n-    name: \"\",\r\n-    service: serviceOptions[0].title,\r\n-    date: \"\",\r\n-    amount: serviceOptions[0].basePrice,\r\n-    status: \"pending\",\r\n-    phone: \"\",\r\n-    email: \"\",\r\n-    location: \"\",\r\n-    addOns: [],\r\n-    carType: carTypeOptions[0].label,\r\n-  });\r\n-  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n-\r\n-  useEffect(() => {\r\n-    if (typeof window !== \"undefined\") {\r\n-      const saved = window.localStorage.getItem(\"adminAuth\");\r\n-      if (saved !== \"Detailing1313!\") {\r\n-        router.replace(\"/admin\");\r\n-      }\r\n-    }\r\n-  }, [router]);\r\n-\r\n-  // Calculate total revenue\r\n-  const totalRevenue = bookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n-\r\n-  // Add new booking\r\n-  // Calculate price\r\n-  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n-    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n-    let price = service ? service.basePrice : 0;\r\n-    if (service && service.hasAddOns && addOns.length) {\r\n-      price += addOns.reduce((sum, a) => sum + a.price, 0);\r\n-    }\r\n-    const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n-    if (carType) price += carType.price;\r\n-    // Special rule for Complete Interior Detail\r\n-    if (serviceTitle === \"Complete Interior Detail\") {\r\n-      if (carTypeLabel === \"SUV\") price += 20;\r\n-      else if (carTypeLabel === \"Truck\") price += 30;\r\n-    }\r\n-    return price;\r\n-  };\r\n-\r\n-  // Add booking\r\n-  const handleAddBooking = (e) => {\r\n-    e.preventDefault();\r\n-    setBookings([\r\n-      ...bookings,\r\n-      {\r\n-        ...newBooking,\r\n-        id: bookings.length + 1,\r\n-        amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n-      }\r\n-    ]);\r\n-    setNewBooking({\r\n-      name: \"\",\r\n-      service: serviceOptions[0].title,\r\n-      date: \"\",\r\n-      amount: serviceOptions[0].basePrice,\r\n-      status: \"pending\",\r\n-      phone: \"\",\r\n-      email: \"\",\r\n-      location: \"\",\r\n-      addOns: [],\r\n-      carType: carTypeOptions[0].label,\r\n-    });\r\n-    setShowAdd(false);\r\n-  };\r\n-\r\n-  // Show booking details modal\r\n-  const handleShowDetail = (booking) => {\r\n-    setDetailBooking(booking);\r\n-    setShowDetail(true);\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n-      <div className=\"max-w-5xl mx-auto\">\r\n-        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n-        {/* Revenue summary */}\r\n-        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n-          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n-            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n-            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n-          </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n-            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n-            <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n-          </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n-            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Pending</div>\r\n-            <div className=\"text-3xl font-bold text-yellow-600\">{bookings.filter(b => b.status === \"pending\").length}</div>\r\n-          </div>\r\n-        </div>\r\n-        {/* Booking list */}\r\n-        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n-          <div className=\"flex justify-between items-center mb-4\">\r\n-            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n-            <button\r\n-              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-              onClick={() => setShowAdd(true)}\r\n-            >\r\n-              Add Booking\r\n-            </button>\r\n-          </div>\r\n-          <table className=\"w-full text-left border-collapse\">\r\n-            <thead>\r\n-              <tr style={{ background: '#f5f5f5' }}>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n-              </tr>\r\n-            </thead>\r\n-            <tbody>\r\n-              {bookings.map(b => (\r\n-                <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleShowDetail(b)}>{b.name}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.service}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.date}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>${b.amount}</td>\r\n-                  <td className=\"py-2 px-3\">\r\n-                    <span className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}>{b.status}</span>\r\n-                  </td>\r\n-                </tr>\r\n-              ))}\r\n-            </tbody>\r\n-          </table>\r\n-        </div>\r\n-        {/* Booking details modal */}\r\n-        {showDetail && detailBooking && (\r\n-          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n-              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n-              <div className=\"space-y-3 text-gray-800\">\r\n-                <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n-                <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n-                <div><span className=\"font-semibold\">Date:</span> {detailBooking.date}</div>\r\n-                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n-                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n-                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n-                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n-                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n-              </div>\r\n-              <button className=\"mt-8 w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\" onClick={() => setShowDetail(false)}>Close</button>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-        {/* Add booking modal */}\r\n-        {showAdd && (\r\n-          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n-              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Add Booking</h3>\r\n-              <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n-                {/* Name */}\r\n-                <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                {/* Service dropdown */}\r\n-                <select required value={newBooking.service} onChange={e => {\r\n-                  const selectedService = e.target.value;\r\n-                  setNewBooking(nb => ({\r\n-                    ...nb,\r\n-                    service: selectedService,\r\n-                    addOns: [],\r\n-                    amount: calculatePrice(selectedService, [], nb.carType),\r\n-                  }));\r\n-                }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-                  {serviceOptions.map(s => (\r\n-                    <option key={s.title} value={s.title}>{s.title}</option>\r\n-                  ))}\r\n-                </select>\r\n-                {/* Car type dropdown */}\r\n-                <select required value={newBooking.carType} onChange={e => {\r\n-                  const carType = e.target.value;\r\n-                  setNewBooking(nb => ({\r\n-                    ...nb,\r\n-                    carType,\r\n-                    amount: calculatePrice(nb.service, nb.addOns, carType),\r\n-                  }));\r\n-                }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-                  {carTypeOptions.map(c => (\r\n-                    <option key={c.label} value={c.label}>{c.label}</option>\r\n-                  ))}\r\n-                </select>\r\n-                {/* Add-ons (only for services with add-ons) */}\r\n-                {serviceOptions.find(s => s.title === newBooking.service)?.hasAddOns && (\r\n-                  <div>\r\n-                    <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n-                    <div className=\"flex flex-wrap gap-3 mb-2\">\r\n-                      {addOnOptions.map(opt => (\r\n-                        <button\r\n-                          key={opt.label}\r\n-                          type=\"button\"\r\n-                          onClick={() => {\r\n-                            setNewBooking(nb => {\r\n-                              const exists = nb.addOns.find(a => a.label === opt.label);\r\n-                              const updated = exists\r\n-                                ? nb.addOns.filter(a => a.label !== opt.label)\r\n-                                : [...nb.addOns, opt];\r\n-                              return {\r\n-                                ...nb,\r\n-                                addOns: updated,\r\n-                                amount: calculatePrice(nb.service, updated, nb.carType),\r\n-                              };\r\n-                            });\r\n-                          }}\r\n-                          className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n-                        >\r\n-                          {opt.label}\r\n-                        </button>\r\n-                      ))}\r\n-                    </div>\r\n-                  </div>\r\n-                )}\r\n-                {/* Date */}\r\n-                <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                {/* Amount (auto-calculated, read-only) */}\r\n-                <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n-                {/* Phone (numbers only) */}\r\n-                <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n-                  // Only allow numbers\r\n-                  const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n-                  setNewBooking({ ...newBooking, phone: val });\r\n-                }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                {/* Email */}\r\n-                <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                {/* Location autocomplete (Google Places API) */}\r\n-                <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n-                  const val = e.target.value;\r\n-                  setNewBooking({ ...newBooking, location: val });\r\n-                  // Simple Google Places Autocomplete (client-side only)\r\n-                  if (window && val.length > 2) {\r\n-                    try {\r\n-                      const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n-                      const data = await resp.json();\r\n-                      setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n-                    } catch {}\r\n-                  } else {\r\n-                    setLocationSuggestions([]);\r\n-                  }\r\n-                }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n-                {/* Location suggestions dropdown */}\r\n-                {locationSuggestions.length > 0 && (\r\n-                  <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n-                    {locationSuggestions.map((sug, i) => (\r\n-                      <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n-                        setNewBooking(nb => ({ ...nb, location: sug }));\r\n-                        setLocationSuggestions([]);\r\n-                      }}>{sug}</div>\r\n-                    ))}\r\n-                  </div>\r\n-                )}\r\n-                {/* Status dropdown */}\r\n-                <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-                  <option value=\"pending\">Pending</option>\r\n-                  <option value=\"complete\">Complete</option>\r\n-                </select>\r\n-                <div className=\"flex gap-4 mt-4\">\r\n-                  <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n-                  <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={() => setShowAdd(false)}>Cancel</button>\r\n-                </div>\r\n-              </form>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import { useEffect, useState } from \"react\";\r\n-import { useRouter } from \"next/router\";\r\n-\r\n-// Mock booking data for demo\r\n-const initialBookings = [\r\n-  { id: 1, name: \"John Doe\", service: \"Complete Interior Detail\", date: \"2025-10-10\", amount: 130, status: \"complete\", phone: \"902-555-1234\", email: \"john@example.com\", location: \"Halifax\" },\r\n-  { id: 2, name: \"Jane Smith\", service: \"Premium Exterior Wash\", date: \"2025-10-12\", amount: 50, status: \"pending\", phone: \"902-555-5678\", email: \"jane@example.com\", location: \"Dartmouth\" },\r\n-  { id: 3, name: \"Alex Lee\", service: \"Ultimate Full Detail\", date: \"2025-10-15\", amount: 160, status: \"complete\", phone: \"902-555-9999\", email: \"alex@example.com\", location: \"Bedford\" },\r\n-];\r\n-\r\n-export default function AdminDashboard() {\r\n-  const router = useRouter();\r\n-  const [bookings, setBookings] = useState(initialBookings);\r\n-  const [showAdd, setShowAdd] = useState(false);\r\n-  const [showDetail, setShowDetail] = useState(false);\r\n-  const [detailBooking, setDetailBooking] = useState(null);\r\n-  const [newBooking, setNewBooking] = useState({ name: \"\", service: \"\", date: \"\", amount: \"\", status: \"pending\", phone: \"\", email: \"\", location: \"\" });\r\n-\r\n-  useEffect(() => {\r\n-    if (typeof window !== \"undefined\") {\r\n-      const saved = window.localStorage.getItem(\"adminAuth\");\r\n-      if (saved !== \"Detailing1313!\") {\r\n-        router.replace(\"/admin\");\r\n-      }\r\n-    }\r\n-  }, [router]);\r\n-\r\n-  // Calculate total revenue\r\n-  const totalRevenue = bookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n-\r\n-  // Add new booking\r\n-  const handleAddBooking = (e) => {\r\n-    e.preventDefault();\r\n-    setBookings([\r\n-      ...bookings,\r\n-      { ...newBooking, id: bookings.length + 1, amount: Number(newBooking.amount) }\r\n-    ]);\r\n-    setNewBooking({ name: \"\", service: \"\", date: \"\", amount: \"\", status: \"pending\", phone: \"\", email: \"\", location: \"\" });\r\n-    setShowAdd(false);\r\n-  };\r\n-\r\n-  // Show booking details modal\r\n-  const handleShowDetail = (booking) => {\r\n-    setDetailBooking(booking);\r\n-    setShowDetail(true);\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n-      <div className=\"max-w-5xl mx-auto\">\r\n-        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n-        {/* Revenue summary */}\r\n-        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n-          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n-            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n-            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n-          </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n-            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n-            <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n-          </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n-            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Pending</div>\r\n-            <div className=\"text-3xl font-bold text-yellow-600\">{bookings.filter(b => b.status === \"pending\").length}</div>\r\n-          </div>\r\n-        </div>\r\n-        {/* Booking list */}\r\n-        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n-          <div className=\"flex justify-between items-center mb-4\">\r\n-            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n-            <button\r\n-              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-              onClick={() => setShowAdd(true)}\r\n-            >\r\n-              Add Booking\r\n-            </button>\r\n-          </div>\r\n-          <table className=\"w-full text-left border-collapse\">\r\n-            <thead>\r\n-              <tr style={{ background: '#f5f5f5' }}>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n-              </tr>\r\n-            </thead>\r\n-            <tbody>\r\n-              {bookings.map(b => (\r\n-                <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleShowDetail(b)}>{b.name}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.service}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.date}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>${b.amount}</td>\r\n-                  <td className=\"py-2 px-3\">\r\n-                    <span className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}>{b.status}</span>\r\n-                  </td>\r\n-                </tr>\r\n-              ))}\r\n-            </tbody>\r\n-          </table>\r\n-        </div>\r\n-        {/* Booking details modal */}\r\n-        {showDetail && detailBooking && (\r\n-          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n-              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n-              <div className=\"space-y-3 text-gray-800\">\r\n-                <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n-                <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n-                <div><span className=\"font-semibold\">Date:</span> {detailBooking.date}</div>\r\n-                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n-                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n-                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n-                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n-                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n-              </div>\r\n-              <button className=\"mt-8 w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\" onClick={() => setShowDetail(false)}>Close</button>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-        {/* Add booking modal */}\r\n-        {showAdd && (\r\n-          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n-              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Add Booking</h3>\r\n-              <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n-                <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                <input type=\"text\" required placeholder=\"Service\" value={newBooking.service} onChange={e => setNewBooking({ ...newBooking, service: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} onChange={e => setNewBooking({ ...newBooking, amount: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => setNewBooking({ ...newBooking, phone: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={e => setNewBooking({ ...newBooking, location: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-                  <option value=\"pending\">Pending</option>\r\n-                  <option value=\"complete\">Complete</option>\r\n-                </select>\r\n-                <div className=\"flex gap-4 mt-4\">\r\n-                  <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n-                  <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={() => setShowAdd(false)}>Cancel</button>\r\n-                </div>\r\n-              </form>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import { useEffect, useState } from \"react\";\r\n-import { useRouter } from \"next/router\";\r\n-\r\n-// Mock booking data for demo\r\n-const initialBookings = [\r\n-  { id: 1, name: \"John Doe\", service: \"Complete Interior Detail\", date: \"2025-10-10\", amount: 130, status: \"complete\" },\r\n-  { id: 2, name: \"Jane Smith\", service: \"Premium Exterior Wash\", date: \"2025-10-12\", amount: 50, status: \"pending\" },\r\n-  { id: 3, name: \"Alex Lee\", service: \"Ultimate Full Detail\", date: \"2025-10-15\", amount: 160, status: \"complete\" },\r\n-];\r\n-\r\n-export default function AdminDashboard() {\r\n-  const router = useRouter();\r\n-  const [bookings, setBookings] = useState(initialBookings);\r\n-  const [showAdd, setShowAdd] = useState(false);\r\n-  const [newBooking, setNewBooking] = useState({ name: \"\", service: \"\", date: \"\", amount: \"\", status: \"pending\" });\r\n-\r\n-  useEffect(() => {\r\n-    if (typeof window !== \"undefined\") {\r\n-      const saved = window.localStorage.getItem(\"adminAuth\");\r\n-      if (saved !== \"Detailing1313!\") {\r\n-        router.replace(\"/admin\");\r\n-      }\r\n-    }\r\n-  }, [router]);\r\n-\r\n-  // Calculate total revenue\r\n-  const totalRevenue = bookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n-\r\n-  // Add new booking\r\n-  const handleAddBooking = (e) => {\r\n-    e.preventDefault();\r\n-    setBookings([\r\n-      ...bookings,\r\n-      { ...newBooking, id: bookings.length + 1, amount: Number(newBooking.amount) }\r\n-    ]);\r\n-    setNewBooking({ name: \"\", service: \"\", date: \"\", amount: \"\", status: \"pending\" });\r\n-    setShowAdd(false);\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n-      <div className=\"max-w-5xl mx-auto\">\r\n-        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n-        {/* Revenue summary */}\r\n-        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n-          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n-            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n-            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n-          </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n-            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n-            <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n-          </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n-            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Pending</div>\r\n-            <div className=\"text-3xl font-bold text-yellow-600\">{bookings.filter(b => b.status === \"pending\").length}</div>\r\n-          </div>\r\n-        </div>\r\n-        {/* Booking list */}\r\n-        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n-          <div className=\"flex justify-between items-center mb-4\">\r\n-            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n-            <button\r\n-              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-              onClick={() => setShowAdd(true)}\r\n-            >\r\n-              Add Booking\r\n-            </button>\r\n-          </div>\r\n-          <table className=\"w-full text-left border-collapse\">\r\n-            <thead>\r\n-              <tr style={{ background: '#f5f5f5' }}>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n-              </tr>\r\n-            </thead>\r\n-            <tbody>\r\n-              {bookings.map(b => (\r\n-                <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.name}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.service}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.date}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>${b.amount}</td>\r\n-                  <td className=\"py-2 px-3\">\r\n-                    <span className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}>{b.status}</span>\r\n-                  </td>\r\n-                </tr>\r\n-              ))}\r\n-            </tbody>\r\n-          </table>\r\n-        </div>\r\n-        {/* Add booking modal */}\r\n-        {showAdd && (\r\n-          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n-              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Add Booking</h3>\r\n-              <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n-                <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none\" />\r\n-                <input type=\"text\" required placeholder=\"Service\" value={newBooking.service} onChange={e => setNewBooking({ ...newBooking, service: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none\" />\r\n-                <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none\" />\r\n-                <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} onChange={e => setNewBooking({ ...newBooking, amount: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none\" />\r\n-                <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none\">\r\n-                  <option value=\"pending\">Pending</option>\r\n-                  <option value=\"complete\">Complete</option>\r\n-                </select>\r\n-                <div className=\"flex gap-4 mt-4\">\r\n-                  <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n-                  <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={() => setShowAdd(false)}>Cancel</button>\r\n-                </div>\r\n-              </form>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1760670903355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n   ];\r\n   const addOnOptions = [\r\n     { label: \"Pet Hair Removal\", price: 20 },\r\n     { label: \"Clay Bar\", price: 20 },\r\n-    { label: \"Engine Bay Cleaning\", price: 25 },\r\n+    { label: \"Iron Rem\", price: 25 },\r\n   ];\r\n   const carTypeOptions = [\r\n     { label: \"Sedan\", price: 0 },\r\n     { label: \"SUV\", price: 10 },\r\n"
                },
                {
                    "date": 1760670917388,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,319 @@\n+import { useEffect, useState } from \"react\";\r\n+import { useRouter } from \"next/router\";\r\n+\r\n+// Mock booking data for demo\r\n+const initialBookings = [\r\n+  { id: 1, name: \"John Doe\", service: \"Complete Interior Detail\", date: \"2025-10-10\", amount: 130, status: \"complete\", phone: \"902-555-1234\", email: \"john@example.com\", location: \"Halifax\" },\r\n+  { id: 2, name: \"Jane Smith\", service: \"Premium Exterior Wash\", date: \"2025-10-12\", amount: 50, status: \"pending\", phone: \"902-555-5678\", email: \"jane@example.com\", location: \"Dartmouth\" },\r\n+  { id: 3, name: \"Alex Lee\", service: \"Ultimate Full Detail\", date: \"2025-10-15\", amount: 160, status: \"complete\", phone: \"902-555-9999\", email: \"alex@example.com\", location: \"Bedford\" },\r\n+];\r\n+\r\n+export default function AdminDashboard() {\r\n+  const router = useRouter();\r\n+  const [bookings, setBookings] = useState(initialBookings);\r\n+  const [showAdd, setShowAdd] = useState(false);\r\n+  const [showDetail, setShowDetail] = useState(false);\r\n+  const [detailBooking, setDetailBooking] = useState(null);\r\n+  // Service/add-on logic\r\n+  const serviceOptions = [\r\n+    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: false },\r\n+    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n+    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n+  ];\r\n+  const addOnOptions = [\r\n+    { label: \"Pet Hair Removal\", price: 20 },\r\n+    { label: \"Clay Bar\", price: 20 },\r\n+    { label: \"Iron Removal\", price: 25 },\r\n+    { label: \"Iron Removal\", price: 25 },\r\n+  ];\r\n+  const carTypeOptions = [\r\n+    { label: \"Sedan\", price: 0 },\r\n+    { label: \"SUV\", price: 10 },\r\n+    { label: \"Truck\", price: 20 },\r\n+  ];\r\n+  // Booking state\r\n+  const [newBooking, setNewBooking] = useState({\r\n+    name: \"\",\r\n+    service: serviceOptions[0].title,\r\n+    date: \"\",\r\n+    amount: serviceOptions[0].basePrice,\r\n+    status: \"pending\",\r\n+    phone: \"\",\r\n+    email: \"\",\r\n+    location: \"\",\r\n+    addOns: [],\r\n+    carType: carTypeOptions[0].label,\r\n+  });\r\n+  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n+\r\n+  useEffect(() => {\r\n+    if (typeof window !== \"undefined\") {\r\n+      const saved = window.localStorage.getItem(\"adminAuth\");\r\n+      if (saved !== \"Detailing1313!\") {\r\n+        router.replace(\"/admin\");\r\n+      }\r\n+    }\r\n+  }, [router]);\r\n+\r\n+  // Calculate total revenue\r\n+  const totalRevenue = bookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n+\r\n+  // Add new booking\r\n+  // Calculate price\r\n+  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n+    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n+    let price = service ? service.basePrice : 0;\r\n+    if (service && service.hasAddOns && addOns.length) {\r\n+      price += addOns.reduce((sum, a) => sum + a.price, 0);\r\n+    }\r\n+    const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n+    if (carType) price += carType.price;\r\n+    // Special rule for Complete Interior Detail\r\n+    if (serviceTitle === \"Complete Interior Detail\") {\r\n+      if (carTypeLabel === \"SUV\") price += 20;\r\n+      else if (carTypeLabel === \"Truck\") price += 30;\r\n+    }\r\n+    return price;\r\n+  };\r\n+\r\n+  // Add booking\r\n+  const handleAddBooking = (e) => {\r\n+    e.preventDefault();\r\n+    setBookings([\r\n+      ...bookings,\r\n+      {\r\n+        ...newBooking,\r\n+        id: bookings.length + 1,\r\n+        amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n+      }\r\n+    ]);\r\n+    setNewBooking({\r\n+      name: \"\",\r\n+      service: serviceOptions[0].title,\r\n+      date: \"\",\r\n+      amount: serviceOptions[0].basePrice,\r\n+      status: \"pending\",\r\n+      phone: \"\",\r\n+      email: \"\",\r\n+      location: \"\",\r\n+      addOns: [],\r\n+      carType: carTypeOptions[0].label,\r\n+    });\r\n+    setShowAdd(false);\r\n+  };\r\n+\r\n+  // Show booking details modal\r\n+  const handleShowDetail = (booking) => {\r\n+    setDetailBooking(booking);\r\n+    setShowDetail(true);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n+      <div className=\"max-w-5xl mx-auto\">\r\n+        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n+        {/* Revenue summary */}\r\n+        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n+          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n+            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n+            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n+            <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Pending</div>\r\n+            <div className=\"text-3xl font-bold text-yellow-600\">{bookings.filter(b => b.status === \"pending\").length}</div>\r\n+          </div>\r\n+        </div>\r\n+        {/* Booking list */}\r\n+        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n+          <div className=\"flex justify-between items-center mb-4\">\r\n+            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n+            <button\r\n+              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+              onClick={() => setShowAdd(true)}\r\n+            >\r\n+              Add Booking\r\n+            </button>\r\n+          </div>\r\n+          <table className=\"w-full text-left border-collapse\">\r\n+            <thead>\r\n+              <tr style={{ background: '#f5f5f5' }}>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n+              </tr>\r\n+            </thead>\r\n+            <tbody>\r\n+              {bookings.map(b => (\r\n+                <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleShowDetail(b)}>{b.name}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.service}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.date}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>${b.amount}</td>\r\n+                  <td className=\"py-2 px-3\">\r\n+                    <span className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}>{b.status}</span>\r\n+                  </td>\r\n+                </tr>\r\n+              ))}\r\n+            </tbody>\r\n+          </table>\r\n+        </div>\r\n+        {/* Booking details modal */}\r\n+        {showDetail && detailBooking && (\r\n+          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n+              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n+              <div className=\"space-y-3 text-gray-800\">\r\n+                <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n+                <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n+                <div><span className=\"font-semibold\">Date:</span> {detailBooking.date}</div>\r\n+                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n+                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n+                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n+                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n+                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n+              </div>\r\n+              <button className=\"mt-8 w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\" onClick={() => setShowDetail(false)}>Close</button>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+        {/* Add booking modal */}\r\n+        {showAdd && (\r\n+          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+            <div\r\n+              className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n+              style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n+            >\r\n+              {/* Close (X) button */}\r\n+              <button\r\n+                type=\"button\"\r\n+                aria-label=\"Close\"\r\n+                onClick={() => setShowAdd(false)}\r\n+                className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n+                style={{ background: 'none', border: 'none' }}\r\n+              >\r\n+                &times;\r\n+              </button>\r\n+              <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n+              <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n+                <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n+                  {/* Name */}\r\n+                  <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Service dropdown */}\r\n+                  <select required value={newBooking.service} onChange={e => {\r\n+                    const selectedService = e.target.value;\r\n+                    setNewBooking(nb => ({\r\n+                      ...nb,\r\n+                      service: selectedService,\r\n+                      addOns: [],\r\n+                      amount: calculatePrice(selectedService, [], nb.carType),\r\n+                    }));\r\n+                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+                    {serviceOptions.map(s => (\r\n+                      <option key={s.title} value={s.title}>{s.title}</option>\r\n+                    ))}\r\n+                  </select>\r\n+                  {/* Car type dropdown */}\r\n+                  <select required value={newBooking.carType} onChange={e => {\r\n+                    const carType = e.target.value;\r\n+                    setNewBooking(nb => ({\r\n+                      ...nb,\r\n+                      carType,\r\n+                      amount: calculatePrice(nb.service, nb.addOns, carType),\r\n+                    }));\r\n+                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+                    {carTypeOptions.map(c => (\r\n+                      <option key={c.label} value={c.label}>{c.label}</option>\r\n+                    ))}\r\n+                  </select>\r\n+                  {/* Add-ons (only for services with add-ons) */}\r\n+                  {serviceOptions.find(s => s.title === newBooking.service)?.hasAddOns && (\r\n+                    <div>\r\n+                      <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n+                      <div className=\"flex flex-wrap gap-3 mb-2\">\r\n+                        {addOnOptions.map(opt => (\r\n+                          <button\r\n+                            key={opt.label}\r\n+                            type=\"button\"\r\n+                            onClick={() => {\r\n+                              setNewBooking(nb => {\r\n+                                const exists = nb.addOns.find(a => a.label === opt.label);\r\n+                                const updated = exists\r\n+                                  ? nb.addOns.filter(a => a.label !== opt.label)\r\n+                                  : [...nb.addOns, opt];\r\n+                                return {\r\n+                                  ...nb,\r\n+                                  addOns: updated,\r\n+                                  amount: calculatePrice(nb.service, updated, nb.carType),\r\n+                                };\r\n+                              });\r\n+                            }}\r\n+                            className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n+                          >\r\n+                            {opt.label}\r\n+                          </button>\r\n+                        ))}\r\n+                      </div>\r\n+                    </div>\r\n+                  )}\r\n+                  {/* Date */}\r\n+                  <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Amount (auto-calculated, read-only) */}\r\n+                  <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n+                  {/* Phone (numbers only) */}\r\n+                  <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n+                    // Only allow numbers\r\n+                    const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n+                    setNewBooking({ ...newBooking, phone: val });\r\n+                  }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Email */}\r\n+                  <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Location autocomplete (Google Places API) */}\r\n+                  <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n+                    const val = e.target.value;\r\n+                    setNewBooking({ ...newBooking, location: val });\r\n+                    // Simple Google Places Autocomplete (client-side only)\r\n+                    if (window && val.length > 2) {\r\n+                      try {\r\n+                        const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n+                        const data = await resp.json();\r\n+                        setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n+                      } catch {}\r\n+                    } else {\r\n+                      setLocationSuggestions([]);\r\n+                    }\r\n+                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n+                  {/* Location suggestions dropdown */}\r\n+                  {locationSuggestions.length > 0 && (\r\n+                    <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n+                      {locationSuggestions.map((sug, i) => (\r\n+                        <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n+                          setNewBooking(nb => ({ ...nb, location: sug }));\r\n+                          setLocationSuggestions([]);\r\n+                        }}>{sug}</div>\r\n+                      ))}\r\n+                    </div>\r\n+                  )}\r\n+                  {/* Status dropdown */}\r\n+                  <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+                    <option value=\"pending\">Pending</option>\r\n+                    <option value=\"complete\">Complete</option>\r\n+                  </select>\r\n+                  <div className=\"flex gap-4 mt-4 pb-4\">\r\n+                    <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n+                    <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={() => setShowAdd(false)}>Cancel</button>\r\n+                  </div>\r\n+                </form>\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1760670925645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n   const addOnOptions = [\r\n     { label: \"Pet Hair Removal\", price: 20 },\r\n     { label: \"Clay Bar\", price: 20 },\r\n     { label: \"Iron Removal\", price: 25 },\r\n-    { label: \"Iron Removal\", price: 25 },\r\n+    { label: \"Ceramic S\", price: 25 },\r\n   ];\r\n   const carTypeOptions = [\r\n     { label: \"Sedan\", price: 0 },\r\n     { label: \"SUV\", price: 10 },\r\n"
                },
                {
                    "date": 1760670933481,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,319 @@\n+import { useEffect, useState } from \"react\";\r\n+import { useRouter } from \"next/router\";\r\n+\r\n+// Mock booking data for demo\r\n+const initialBookings = [\r\n+  { id: 1, name: \"John Doe\", service: \"Complete Interior Detail\", date: \"2025-10-10\", amount: 130, status: \"complete\", phone: \"902-555-1234\", email: \"john@example.com\", location: \"Halifax\" },\r\n+  { id: 2, name: \"Jane Smith\", service: \"Premium Exterior Wash\", date: \"2025-10-12\", amount: 50, status: \"pending\", phone: \"902-555-5678\", email: \"jane@example.com\", location: \"Dartmouth\" },\r\n+  { id: 3, name: \"Alex Lee\", service: \"Ultimate Full Detail\", date: \"2025-10-15\", amount: 160, status: \"complete\", phone: \"902-555-9999\", email: \"alex@example.com\", location: \"Bedford\" },\r\n+];\r\n+\r\n+export default function AdminDashboard() {\r\n+  const router = useRouter();\r\n+  const [bookings, setBookings] = useState(initialBookings);\r\n+  const [showAdd, setShowAdd] = useState(false);\r\n+  const [showDetail, setShowDetail] = useState(false);\r\n+  const [detailBooking, setDetailBooking] = useState(null);\r\n+  // Service/add-on logic\r\n+  const serviceOptions = [\r\n+    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: false },\r\n+    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n+    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n+  ];\r\n+  const addOnOptions = [\r\n+    { label: \"Pet Hair Removal\", price: 20 },\r\n+    { label: \"Clay Bar\", price: 20 },\r\n+    { label: \"Iron Removal\", price: 2 },\r\n+    { label: \"Ceramic Sealant\", price: 10 },\r\n+  ];\r\n+  const carTypeOptions = [\r\n+    { label: \"Sedan\", price: 0 },\r\n+    { label: \"SUV\", price: 10 },\r\n+    { label: \"Truck\", price: 20 },\r\n+  ];\r\n+  // Booking state\r\n+  const [newBooking, setNewBooking] = useState({\r\n+    name: \"\",\r\n+    service: serviceOptions[0].title,\r\n+    date: \"\",\r\n+    amount: serviceOptions[0].basePrice,\r\n+    status: \"pending\",\r\n+    phone: \"\",\r\n+    email: \"\",\r\n+    location: \"\",\r\n+    addOns: [],\r\n+    carType: carTypeOptions[0].label,\r\n+  });\r\n+  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n+\r\n+  useEffect(() => {\r\n+    if (typeof window !== \"undefined\") {\r\n+      const saved = window.localStorage.getItem(\"adminAuth\");\r\n+      if (saved !== \"Detailing1313!\") {\r\n+        router.replace(\"/admin\");\r\n+      }\r\n+    }\r\n+  }, [router]);\r\n+\r\n+  // Calculate total revenue\r\n+  const totalRevenue = bookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n+\r\n+  // Add new booking\r\n+  // Calculate price\r\n+  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n+    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n+    let price = service ? service.basePrice : 0;\r\n+    if (service && service.hasAddOns && addOns.length) {\r\n+      price += addOns.reduce((sum, a) => sum + a.price, 0);\r\n+    }\r\n+    const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n+    if (carType) price += carType.price;\r\n+    // Special rule for Complete Interior Detail\r\n+    if (serviceTitle === \"Complete Interior Detail\") {\r\n+      if (carTypeLabel === \"SUV\") price += 20;\r\n+      else if (carTypeLabel === \"Truck\") price += 30;\r\n+    }\r\n+    return price;\r\n+  };\r\n+\r\n+  // Add booking\r\n+  const handleAddBooking = (e) => {\r\n+    e.preventDefault();\r\n+    setBookings([\r\n+      ...bookings,\r\n+      {\r\n+        ...newBooking,\r\n+        id: bookings.length + 1,\r\n+        amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n+      }\r\n+    ]);\r\n+    setNewBooking({\r\n+      name: \"\",\r\n+      service: serviceOptions[0].title,\r\n+      date: \"\",\r\n+      amount: serviceOptions[0].basePrice,\r\n+      status: \"pending\",\r\n+      phone: \"\",\r\n+      email: \"\",\r\n+      location: \"\",\r\n+      addOns: [],\r\n+      carType: carTypeOptions[0].label,\r\n+    });\r\n+    setShowAdd(false);\r\n+  };\r\n+\r\n+  // Show booking details modal\r\n+  const handleShowDetail = (booking) => {\r\n+    setDetailBooking(booking);\r\n+    setShowDetail(true);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n+      <div className=\"max-w-5xl mx-auto\">\r\n+        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n+        {/* Revenue summary */}\r\n+        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n+          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n+            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n+            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n+            <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Pending</div>\r\n+            <div className=\"text-3xl font-bold text-yellow-600\">{bookings.filter(b => b.status === \"pending\").length}</div>\r\n+          </div>\r\n+        </div>\r\n+        {/* Booking list */}\r\n+        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n+          <div className=\"flex justify-between items-center mb-4\">\r\n+            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n+            <button\r\n+              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+              onClick={() => setShowAdd(true)}\r\n+            >\r\n+              Add Booking\r\n+            </button>\r\n+          </div>\r\n+          <table className=\"w-full text-left border-collapse\">\r\n+            <thead>\r\n+              <tr style={{ background: '#f5f5f5' }}>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n+              </tr>\r\n+            </thead>\r\n+            <tbody>\r\n+              {bookings.map(b => (\r\n+                <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleShowDetail(b)}>{b.name}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.service}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.date}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>${b.amount}</td>\r\n+                  <td className=\"py-2 px-3\">\r\n+                    <span className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}>{b.status}</span>\r\n+                  </td>\r\n+                </tr>\r\n+              ))}\r\n+            </tbody>\r\n+          </table>\r\n+        </div>\r\n+        {/* Booking details modal */}\r\n+        {showDetail && detailBooking && (\r\n+          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n+              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n+              <div className=\"space-y-3 text-gray-800\">\r\n+                <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n+                <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n+                <div><span className=\"font-semibold\">Date:</span> {detailBooking.date}</div>\r\n+                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n+                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n+                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n+                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n+                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n+              </div>\r\n+              <button className=\"mt-8 w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\" onClick={() => setShowDetail(false)}>Close</button>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+        {/* Add booking modal */}\r\n+        {showAdd && (\r\n+          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+            <div\r\n+              className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n+              style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n+            >\r\n+              {/* Close (X) button */}\r\n+              <button\r\n+                type=\"button\"\r\n+                aria-label=\"Close\"\r\n+                onClick={() => setShowAdd(false)}\r\n+                className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n+                style={{ background: 'none', border: 'none' }}\r\n+              >\r\n+                &times;\r\n+              </button>\r\n+              <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n+              <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n+                <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n+                  {/* Name */}\r\n+                  <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Service dropdown */}\r\n+                  <select required value={newBooking.service} onChange={e => {\r\n+                    const selectedService = e.target.value;\r\n+                    setNewBooking(nb => ({\r\n+                      ...nb,\r\n+                      service: selectedService,\r\n+                      addOns: [],\r\n+                      amount: calculatePrice(selectedService, [], nb.carType),\r\n+                    }));\r\n+                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+                    {serviceOptions.map(s => (\r\n+                      <option key={s.title} value={s.title}>{s.title}</option>\r\n+                    ))}\r\n+                  </select>\r\n+                  {/* Car type dropdown */}\r\n+                  <select required value={newBooking.carType} onChange={e => {\r\n+                    const carType = e.target.value;\r\n+                    setNewBooking(nb => ({\r\n+                      ...nb,\r\n+                      carType,\r\n+                      amount: calculatePrice(nb.service, nb.addOns, carType),\r\n+                    }));\r\n+                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+                    {carTypeOptions.map(c => (\r\n+                      <option key={c.label} value={c.label}>{c.label}</option>\r\n+                    ))}\r\n+                  </select>\r\n+                  {/* Add-ons (only for services with add-ons) */}\r\n+                  {serviceOptions.find(s => s.title === newBooking.service)?.hasAddOns && (\r\n+                    <div>\r\n+                      <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n+                      <div className=\"flex flex-wrap gap-3 mb-2\">\r\n+                        {addOnOptions.map(opt => (\r\n+                          <button\r\n+                            key={opt.label}\r\n+                            type=\"button\"\r\n+                            onClick={() => {\r\n+                              setNewBooking(nb => {\r\n+                                const exists = nb.addOns.find(a => a.label === opt.label);\r\n+                                const updated = exists\r\n+                                  ? nb.addOns.filter(a => a.label !== opt.label)\r\n+                                  : [...nb.addOns, opt];\r\n+                                return {\r\n+                                  ...nb,\r\n+                                  addOns: updated,\r\n+                                  amount: calculatePrice(nb.service, updated, nb.carType),\r\n+                                };\r\n+                              });\r\n+                            }}\r\n+                            className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n+                          >\r\n+                            {opt.label}\r\n+                          </button>\r\n+                        ))}\r\n+                      </div>\r\n+                    </div>\r\n+                  )}\r\n+                  {/* Date */}\r\n+                  <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Amount (auto-calculated, read-only) */}\r\n+                  <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n+                  {/* Phone (numbers only) */}\r\n+                  <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n+                    // Only allow numbers\r\n+                    const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n+                    setNewBooking({ ...newBooking, phone: val });\r\n+                  }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Email */}\r\n+                  <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Location autocomplete (Google Places API) */}\r\n+                  <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n+                    const val = e.target.value;\r\n+                    setNewBooking({ ...newBooking, location: val });\r\n+                    // Simple Google Places Autocomplete (client-side only)\r\n+                    if (window && val.length > 2) {\r\n+                      try {\r\n+                        const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n+                        const data = await resp.json();\r\n+                        setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n+                      } catch {}\r\n+                    } else {\r\n+                      setLocationSuggestions([]);\r\n+                    }\r\n+                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n+                  {/* Location suggestions dropdown */}\r\n+                  {locationSuggestions.length > 0 && (\r\n+                    <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n+                      {locationSuggestions.map((sug, i) => (\r\n+                        <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n+                          setNewBooking(nb => ({ ...nb, location: sug }));\r\n+                          setLocationSuggestions([]);\r\n+                        }}>{sug}</div>\r\n+                      ))}\r\n+                    </div>\r\n+                  )}\r\n+                  {/* Status dropdown */}\r\n+                  <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+                    <option value=\"pending\">Pending</option>\r\n+                    <option value=\"complete\">Complete</option>\r\n+                  </select>\r\n+                  <div className=\"flex gap-4 mt-4 pb-4\">\r\n+                    <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n+                    <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={() => setShowAdd(false)}>Cancel</button>\r\n+                  </div>\r\n+                </form>\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1760671192141,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n   ];\r\n   const addOnOptions = [\r\n     { label: \"Pet Hair Removal\", price: 20 },\r\n     { label: \"Clay Bar\", price: 20 },\r\n-    { label: \"Iron Removal\", price: 2 },\r\n+    { label: \"Iron Removal\", price: 25 },\r\n     { label: \"Ceramic Sealant\", price: 10 },\r\n   ];\r\n   const carTypeOptions = [\r\n     { label: \"Sedan\", price: 0 },\r\n@@ -62,330 +62,27 @@\n   // Calculate price\r\n   const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n     const service = serviceOptions.find(s => s.title === serviceTitle);\r\n     let price = service ? service.basePrice : 0;\r\n+    let addOnTotal = 0;\r\n+    let filteredAddOns = [];\r\n     if (service && service.hasAddOns && addOns.length) {\r\n-      price += addOns.reduce((sum, a) => sum + a.price, 0);\r\n-    }\r\n-    const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n-    if (carType) price += carType.price;\r\n-    // Special rule for Complete Interior Detail\r\n-    if (serviceTitle === \"Complete Interior Detail\") {\r\n-      if (carTypeLabel === \"SUV\") price += 20;\r\n-      else if (carTypeLabel === \"Truck\") price += 30;\r\n-    }\r\n-    return price;\r\n-  };\r\n-\r\n-  // Add booking\r\n-  const handleAddBooking = (e) => {\r\n-    e.preventDefault();\r\n-    setBookings([\r\n-      ...bookings,\r\n-      {\r\n-        ...newBooking,\r\n-        id: bookings.length + 1,\r\n-        amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n+      if (serviceTitle === \"Premium Exterior Wash\") {\r\n+        filteredAddOns = addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n+      } else if (serviceTitle === \"Complete Interior Detail\") {\r\n+        filteredAddOns = addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n+      } else if (serviceTitle === \"Ultimate Full Detail\") {\r\n+        filteredAddOns = addOns; // show all\r\n       }\r\n-    ]);\r\n-    setNewBooking({\r\n-      name: \"\",\r\n-      service: serviceOptions[0].title,\r\n-      date: \"\",\r\n-      amount: serviceOptions[0].basePrice,\r\n-      status: \"pending\",\r\n-      phone: \"\",\r\n-      email: \"\",\r\n-      location: \"\",\r\n-      addOns: [],\r\n-      carType: carTypeOptions[0].label,\r\n-    });\r\n-    setShowAdd(false);\r\n-  };\r\n-\r\n-  // Show booking details modal\r\n-  const handleShowDetail = (booking) => {\r\n-    setDetailBooking(booking);\r\n-    setShowDetail(true);\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n-      <div className=\"max-w-5xl mx-auto\">\r\n-        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n-        {/* Revenue summary */}\r\n-        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n-          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n-            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n-            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n-          </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n-            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n-            <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n-          </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n-            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Pending</div>\r\n-            <div className=\"text-3xl font-bold text-yellow-600\">{bookings.filter(b => b.status === \"pending\").length}</div>\r\n-          </div>\r\n-        </div>\r\n-        {/* Booking list */}\r\n-        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n-          <div className=\"flex justify-between items-center mb-4\">\r\n-            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n-            <button\r\n-              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-              onClick={() => setShowAdd(true)}\r\n-            >\r\n-              Add Booking\r\n-            </button>\r\n-          </div>\r\n-          <table className=\"w-full text-left border-collapse\">\r\n-            <thead>\r\n-              <tr style={{ background: '#f5f5f5' }}>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n-              </tr>\r\n-            </thead>\r\n-            <tbody>\r\n-              {bookings.map(b => (\r\n-                <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleShowDetail(b)}>{b.name}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.service}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.date}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>${b.amount}</td>\r\n-                  <td className=\"py-2 px-3\">\r\n-                    <span className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}>{b.status}</span>\r\n-                  </td>\r\n-                </tr>\r\n-              ))}\r\n-            </tbody>\r\n-          </table>\r\n-        </div>\r\n-        {/* Booking details modal */}\r\n-        {showDetail && detailBooking && (\r\n-          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n-              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n-              <div className=\"space-y-3 text-gray-800\">\r\n-                <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n-                <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n-                <div><span className=\"font-semibold\">Date:</span> {detailBooking.date}</div>\r\n-                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n-                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n-                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n-                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n-                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n-              </div>\r\n-              <button className=\"mt-8 w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\" onClick={() => setShowDetail(false)}>Close</button>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-        {/* Add booking modal */}\r\n-        {showAdd && (\r\n-          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-            <div\r\n-              className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n-              style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n-            >\r\n-              {/* Close (X) button */}\r\n-              <button\r\n-                type=\"button\"\r\n-                aria-label=\"Close\"\r\n-                onClick={() => setShowAdd(false)}\r\n-                className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n-                style={{ background: 'none', border: 'none' }}\r\n-              >\r\n-                &times;\r\n-              </button>\r\n-              <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n-              <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n-                <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n-                  {/* Name */}\r\n-                  <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Service dropdown */}\r\n-                  <select required value={newBooking.service} onChange={e => {\r\n-                    const selectedService = e.target.value;\r\n-                    setNewBooking(nb => ({\r\n-                      ...nb,\r\n-                      service: selectedService,\r\n-                      addOns: [],\r\n-                      amount: calculatePrice(selectedService, [], nb.carType),\r\n-                    }));\r\n-                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-                    {serviceOptions.map(s => (\r\n-                      <option key={s.title} value={s.title}>{s.title}</option>\r\n-                    ))}\r\n-                  </select>\r\n-                  {/* Car type dropdown */}\r\n-                  <select required value={newBooking.carType} onChange={e => {\r\n-                    const carType = e.target.value;\r\n-                    setNewBooking(nb => ({\r\n-                      ...nb,\r\n-                      carType,\r\n-                      amount: calculatePrice(nb.service, nb.addOns, carType),\r\n-                    }));\r\n-                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-                    {carTypeOptions.map(c => (\r\n-                      <option key={c.label} value={c.label}>{c.label}</option>\r\n-                    ))}\r\n-                  </select>\r\n-                  {/* Add-ons (only for services with add-ons) */}\r\n-                  {serviceOptions.find(s => s.title === newBooking.service)?.hasAddOns && (\r\n-                    <div>\r\n-                      <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n-                      <div className=\"flex flex-wrap gap-3 mb-2\">\r\n-                        {addOnOptions.map(opt => (\r\n-                          <button\r\n-                            key={opt.label}\r\n-                            type=\"button\"\r\n-                            onClick={() => {\r\n-                              setNewBooking(nb => {\r\n-                                const exists = nb.addOns.find(a => a.label === opt.label);\r\n-                                const updated = exists\r\n-                                  ? nb.addOns.filter(a => a.label !== opt.label)\r\n-                                  : [...nb.addOns, opt];\r\n-                                return {\r\n-                                  ...nb,\r\n-                                  addOns: updated,\r\n-                                  amount: calculatePrice(nb.service, updated, nb.carType),\r\n-                                };\r\n-                              });\r\n-                            }}\r\n-                            className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n-                          >\r\n-                            {opt.label}\r\n-                          </button>\r\n-                        ))}\r\n-                      </div>\r\n-                    </div>\r\n-                  )}\r\n-                  {/* Date */}\r\n-                  <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Amount (auto-calculated, read-only) */}\r\n-                  <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n-                  {/* Phone (numbers only) */}\r\n-                  <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n-                    // Only allow numbers\r\n-                    const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n-                    setNewBooking({ ...newBooking, phone: val });\r\n-                  }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Email */}\r\n-                  <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Location autocomplete (Google Places API) */}\r\n-                  <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n-                    const val = e.target.value;\r\n-                    setNewBooking({ ...newBooking, location: val });\r\n-                    // Simple Google Places Autocomplete (client-side only)\r\n-                    if (window && val.length > 2) {\r\n-                      try {\r\n-                        const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n-                        const data = await resp.json();\r\n-                        setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n-                      } catch {}\r\n-                    } else {\r\n-                      setLocationSuggestions([]);\r\n-                    }\r\n-                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n-                  {/* Location suggestions dropdown */}\r\n-                  {locationSuggestions.length > 0 && (\r\n-                    <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n-                      {locationSuggestions.map((sug, i) => (\r\n-                        <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n-                          setNewBooking(nb => ({ ...nb, location: sug }));\r\n-                          setLocationSuggestions([]);\r\n-                        }}>{sug}</div>\r\n-                      ))}\r\n-                    </div>\r\n-                  )}\r\n-                  {/* Status dropdown */}\r\n-                  <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-                    <option value=\"pending\">Pending</option>\r\n-                    <option value=\"complete\">Complete</option>\r\n-                  </select>\r\n-                  <div className=\"flex gap-4 mt-4 pb-4\">\r\n-                    <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n-                    <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={() => setShowAdd(false)}>Cancel</button>\r\n-                  </div>\r\n-                </form>\r\n-              </div>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import { useEffect, useState } from \"react\";\r\n-import { useRouter } from \"next/router\";\r\n-\r\n-// Mock booking data for demo\r\n-const initialBookings = [\r\n-  { id: 1, name: \"John Doe\", service: \"Complete Interior Detail\", date: \"2025-10-10\", amount: 130, status: \"complete\", phone: \"902-555-1234\", email: \"john@example.com\", location: \"Halifax\" },\r\n-  { id: 2, name: \"Jane Smith\", service: \"Premium Exterior Wash\", date: \"2025-10-12\", amount: 50, status: \"pending\", phone: \"902-555-5678\", email: \"jane@example.com\", location: \"Dartmouth\" },\r\n-  { id: 3, name: \"Alex Lee\", service: \"Ultimate Full Detail\", date: \"2025-10-15\", amount: 160, status: \"complete\", phone: \"902-555-9999\", email: \"alex@example.com\", location: \"Bedford\" },\r\n-];\r\n-\r\n-export default function AdminDashboard() {\r\n-  const router = useRouter();\r\n-  const [bookings, setBookings] = useState(initialBookings);\r\n-  const [showAdd, setShowAdd] = useState(false);\r\n-  const [showDetail, setShowDetail] = useState(false);\r\n-  const [detailBooking, setDetailBooking] = useState(null);\r\n-  // Service/add-on logic\r\n-  const serviceOptions = [\r\n-    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: false },\r\n-    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n-    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n-  ];\r\n-  const addOnOptions = [\r\n-    { label: \"Pet Hair Removal\", price: 20 },\r\n-    { label: \"Clay Bar\", price: 20 },\r\n-    { label: \"Iron Removal\", price: 25 },\r\n-    { label: \"Ceramic S\", price: 25 },\r\n-  ];\r\n-  const carTypeOptions = [\r\n-    { label: \"Sedan\", price: 0 },\r\n-    { label: \"SUV\", price: 10 },\r\n-    { label: \"Truck\", price: 20 },\r\n-  ];\r\n-  // Booking state\r\n-  const [newBooking, setNewBooking] = useState({\r\n-    name: \"\",\r\n-    service: serviceOptions[0].title,\r\n-    date: \"\",\r\n-    amount: serviceOptions[0].basePrice,\r\n-    status: \"pending\",\r\n-    phone: \"\",\r\n-    email: \"\",\r\n-    location: \"\",\r\n-    addOns: [],\r\n-    carType: carTypeOptions[0].label,\r\n-  });\r\n-  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n-\r\n-  useEffect(() => {\r\n-    if (typeof window !== \"undefined\") {\r\n-      const saved = window.localStorage.getItem(\"adminAuth\");\r\n-      if (saved !== \"Detailing1313!\") {\r\n-        router.replace(\"/admin\");\r\n+      addOnTotal = filteredAddOns.reduce((sum, a) => sum + a.price, 0);\r\n+      // Subtract $5 if both Clay Bar and Iron Removal are selected\r\n+      const clay = filteredAddOns.find(a => a.label === \"Clay Bar\");\r\n+      const iron = filteredAddOns.find(a => a.label === \"Iron Removal\");\r\n+      if (clay && iron) {\r\n+        addOnTotal -= 5;\r\n       }\r\n+      price += addOnTotal;\r\n     }\r\n-  }, [router]);\r\n-\r\n-  // Calculate total revenue\r\n-  const totalRevenue = bookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n-\r\n-  // Add new booking\r\n-  // Calculate price\r\n-  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n-    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n-    let price = service ? service.basePrice : 0;\r\n-    if (service && service.hasAddOns && addOns.length) {\r\n-      price += addOns.reduce((sum, a) => sum + a.price, 0);\r\n-    }\r\n     const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n     if (carType) price += carType.price;\r\n     // Special rule for Complete Interior Detail\r\n     if (serviceTitle === \"Complete Interior Detail\") {\r\n@@ -554,31 +251,55 @@\n                   {serviceOptions.find(s => s.title === newBooking.service)?.hasAddOns && (\r\n                     <div>\r\n                       <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n                       <div className=\"flex flex-wrap gap-3 mb-2\">\r\n-                        {addOnOptions.map(opt => (\r\n-                          <button\r\n-                            key={opt.label}\r\n-                            type=\"button\"\r\n-                            onClick={() => {\r\n-                              setNewBooking(nb => {\r\n-                                const exists = nb.addOns.find(a => a.label === opt.label);\r\n-                                const updated = exists\r\n-                                  ? nb.addOns.filter(a => a.label !== opt.label)\r\n-                                  : [...nb.addOns, opt];\r\n-                                return {\r\n-                                  ...nb,\r\n-                                  addOns: updated,\r\n-                                  amount: calculatePrice(nb.service, updated, nb.carType),\r\n-                                };\r\n-                              });\r\n-                            }}\r\n-                            className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n-                          >\r\n-                            {opt.label}\r\n-                          </button>\r\n-                        ))}\r\n+                        {(() => {\r\n+                          let validAddOns = [];\r\n+                          if (newBooking.service === \"Premium Exterior Wash\") {\r\n+                            validAddOns = addOnOptions.filter(opt => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(opt.label));\r\n+                          } else if (newBooking.service === \"Complete Interior Detail\") {\r\n+                            validAddOns = addOnOptions.filter(opt => opt.label === \"Pet Hair Removal\");\r\n+                          } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n+                            validAddOns = addOnOptions;\r\n+                          }\r\n+                          return validAddOns.map(opt => (\r\n+                            <button\r\n+                              key={opt.label}\r\n+                              type=\"button\"\r\n+                              onClick={() => {\r\n+                                setNewBooking(nb => {\r\n+                                  const exists = nb.addOns.find(a => a.label === opt.label);\r\n+                                  const updated = exists\r\n+                                    ? nb.addOns.filter(a => a.label !== opt.label)\r\n+                                    : [...nb.addOns, opt];\r\n+                                  return {\r\n+                                    ...nb,\r\n+                                    addOns: updated,\r\n+                                    amount: calculatePrice(nb.service, updated, nb.carType),\r\n+                                  };\r\n+                                });\r\n+                              }}\r\n+                              className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n+                            >\r\n+                              {opt.label}\r\n+                            </button>\r\n+                          ));\r\n+                        })()}\r\n                       </div>\r\n+                      {/* Combo discount message */}\r\n+                      {(() => {\r\n+                        let validAddOns = [];\r\n+                        if (newBooking.service === \"Premium Exterior Wash\") {\r\n+                          validAddOns = newBooking.addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n+                        } else if (newBooking.service === \"Complete Interior Detail\") {\r\n+                          validAddOns = newBooking.addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n+                        } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n+                          validAddOns = newBooking.addOns;\r\n+                        }\r\n+                        return validAddOns.find(a => a.label === \"Clay Bar\") && validAddOns.find(a => a.label === \"Iron Removal\") ? (\r\n+                          <div className=\"text-xs text-blue-600 mt-2 font-semibold\">Combo discount applied (-$5)</div>\r\n+                        ) : null;\r\n+                      })()}\r\n                     </div>\r\n                   )}\r\n                   {/* Date */}\r\n                   <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n@@ -635,322 +356,4 @@\n       </div>\r\n     </div>\r\n   );\r\n }\r\n-import { useEffect, useState } from \"react\";\r\n-import { useRouter } from \"next/router\";\r\n-\r\n-// Mock booking data for demo\r\n-const initialBookings = [\r\n-  { id: 1, name: \"John Doe\", service: \"Complete Interior Detail\", date: \"2025-10-10\", amount: 130, status: \"complete\", phone: \"902-555-1234\", email: \"john@example.com\", location: \"Halifax\" },\r\n-  { id: 2, name: \"Jane Smith\", service: \"Premium Exterior Wash\", date: \"2025-10-12\", amount: 50, status: \"pending\", phone: \"902-555-5678\", email: \"jane@example.com\", location: \"Dartmouth\" },\r\n-  { id: 3, name: \"Alex Lee\", service: \"Ultimate Full Detail\", date: \"2025-10-15\", amount: 160, status: \"complete\", phone: \"902-555-9999\", email: \"alex@example.com\", location: \"Bedford\" },\r\n-];\r\n-\r\n-export default function AdminDashboard() {\r\n-  const router = useRouter();\r\n-  const [bookings, setBookings] = useState(initialBookings);\r\n-  const [showAdd, setShowAdd] = useState(false);\r\n-  const [showDetail, setShowDetail] = useState(false);\r\n-  const [detailBooking, setDetailBooking] = useState(null);\r\n-  // Service/add-on logic\r\n-  const serviceOptions = [\r\n-    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: false },\r\n-    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n-    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n-  ];\r\n-  const addOnOptions = [\r\n-    { label: \"Pet Hair Removal\", price: 20 },\r\n-    { label: \"Clay Bar\", price: 20 },\r\n-    { label: \"Iron Rem\", price: 25 },\r\n-  ];\r\n-  const carTypeOptions = [\r\n-    { label: \"Sedan\", price: 0 },\r\n-    { label: \"SUV\", price: 10 },\r\n-    { label: \"Truck\", price: 20 },\r\n-  ];\r\n-  // Booking state\r\n-  const [newBooking, setNewBooking] = useState({\r\n-    name: \"\",\r\n-    service: serviceOptions[0].title,\r\n-    date: \"\",\r\n-    amount: serviceOptions[0].basePrice,\r\n-    status: \"pending\",\r\n-    phone: \"\",\r\n-    email: \"\",\r\n-    location: \"\",\r\n-    addOns: [],\r\n-    carType: carTypeOptions[0].label,\r\n-  });\r\n-  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n-\r\n-  useEffect(() => {\r\n-    if (typeof window !== \"undefined\") {\r\n-      const saved = window.localStorage.getItem(\"adminAuth\");\r\n-      if (saved !== \"Detailing1313!\") {\r\n-        router.replace(\"/admin\");\r\n-      }\r\n-    }\r\n-  }, [router]);\r\n-\r\n-  // Calculate total revenue\r\n-  const totalRevenue = bookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n-\r\n-  // Add new booking\r\n-  // Calculate price\r\n-  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n-    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n-    let price = service ? service.basePrice : 0;\r\n-    if (service && service.hasAddOns && addOns.length) {\r\n-      price += addOns.reduce((sum, a) => sum + a.price, 0);\r\n-    }\r\n-    const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n-    if (carType) price += carType.price;\r\n-    // Special rule for Complete Interior Detail\r\n-    if (serviceTitle === \"Complete Interior Detail\") {\r\n-      if (carTypeLabel === \"SUV\") price += 20;\r\n-      else if (carTypeLabel === \"Truck\") price += 30;\r\n-    }\r\n-    return price;\r\n-  };\r\n-\r\n-  // Add booking\r\n-  const handleAddBooking = (e) => {\r\n-    e.preventDefault();\r\n-    setBookings([\r\n-      ...bookings,\r\n-      {\r\n-        ...newBooking,\r\n-        id: bookings.length + 1,\r\n-        amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n-      }\r\n-    ]);\r\n-    setNewBooking({\r\n-      name: \"\",\r\n-      service: serviceOptions[0].title,\r\n-      date: \"\",\r\n-      amount: serviceOptions[0].basePrice,\r\n-      status: \"pending\",\r\n-      phone: \"\",\r\n-      email: \"\",\r\n-      location: \"\",\r\n-      addOns: [],\r\n-      carType: carTypeOptions[0].label,\r\n-    });\r\n-    setShowAdd(false);\r\n-  };\r\n-\r\n-  // Show booking details modal\r\n-  const handleShowDetail = (booking) => {\r\n-    setDetailBooking(booking);\r\n-    setShowDetail(true);\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n-      <div className=\"max-w-5xl mx-auto\">\r\n-        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n-        {/* Revenue summary */}\r\n-        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n-          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n-            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n-            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n-          </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n-            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n-            <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n-          </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n-            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Pending</div>\r\n-            <div className=\"text-3xl font-bold text-yellow-600\">{bookings.filter(b => b.status === \"pending\").length}</div>\r\n-          </div>\r\n-        </div>\r\n-        {/* Booking list */}\r\n-        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n-          <div className=\"flex justify-between items-center mb-4\">\r\n-            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n-            <button\r\n-              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-              onClick={() => setShowAdd(true)}\r\n-            >\r\n-              Add Booking\r\n-            </button>\r\n-          </div>\r\n-          <table className=\"w-full text-left border-collapse\">\r\n-            <thead>\r\n-              <tr style={{ background: '#f5f5f5' }}>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n-              </tr>\r\n-            </thead>\r\n-            <tbody>\r\n-              {bookings.map(b => (\r\n-                <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleShowDetail(b)}>{b.name}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.service}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.date}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>${b.amount}</td>\r\n-                  <td className=\"py-2 px-3\">\r\n-                    <span className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}>{b.status}</span>\r\n-                  </td>\r\n-                </tr>\r\n-              ))}\r\n-            </tbody>\r\n-          </table>\r\n-        </div>\r\n-        {/* Booking details modal */}\r\n-        {showDetail && detailBooking && (\r\n-          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n-              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n-              <div className=\"space-y-3 text-gray-800\">\r\n-                <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n-                <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n-                <div><span className=\"font-semibold\">Date:</span> {detailBooking.date}</div>\r\n-                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n-                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n-                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n-                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n-                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n-              </div>\r\n-              <button className=\"mt-8 w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\" onClick={() => setShowDetail(false)}>Close</button>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-        {/* Add booking modal */}\r\n-        {showAdd && (\r\n-          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-            <div\r\n-              className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n-              style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n-            >\r\n-              {/* Close (X) button */}\r\n-              <button\r\n-                type=\"button\"\r\n-                aria-label=\"Close\"\r\n-                onClick={() => setShowAdd(false)}\r\n-                className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n-                style={{ background: 'none', border: 'none' }}\r\n-              >\r\n-                &times;\r\n-              </button>\r\n-              <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n-              <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n-                <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n-                  {/* Name */}\r\n-                  <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Service dropdown */}\r\n-                  <select required value={newBooking.service} onChange={e => {\r\n-                    const selectedService = e.target.value;\r\n-                    setNewBooking(nb => ({\r\n-                      ...nb,\r\n-                      service: selectedService,\r\n-                      addOns: [],\r\n-                      amount: calculatePrice(selectedService, [], nb.carType),\r\n-                    }));\r\n-                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-                    {serviceOptions.map(s => (\r\n-                      <option key={s.title} value={s.title}>{s.title}</option>\r\n-                    ))}\r\n-                  </select>\r\n-                  {/* Car type dropdown */}\r\n-                  <select required value={newBooking.carType} onChange={e => {\r\n-                    const carType = e.target.value;\r\n-                    setNewBooking(nb => ({\r\n-                      ...nb,\r\n-                      carType,\r\n-                      amount: calculatePrice(nb.service, nb.addOns, carType),\r\n-                    }));\r\n-                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-                    {carTypeOptions.map(c => (\r\n-                      <option key={c.label} value={c.label}>{c.label}</option>\r\n-                    ))}\r\n-                  </select>\r\n-                  {/* Add-ons (only for services with add-ons) */}\r\n-                  {serviceOptions.find(s => s.title === newBooking.service)?.hasAddOns && (\r\n-                    <div>\r\n-                      <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n-                      <div className=\"flex flex-wrap gap-3 mb-2\">\r\n-                        {addOnOptions.map(opt => (\r\n-                          <button\r\n-                            key={opt.label}\r\n-                            type=\"button\"\r\n-                            onClick={() => {\r\n-                              setNewBooking(nb => {\r\n-                                const exists = nb.addOns.find(a => a.label === opt.label);\r\n-                                const updated = exists\r\n-                                  ? nb.addOns.filter(a => a.label !== opt.label)\r\n-                                  : [...nb.addOns, opt];\r\n-                                return {\r\n-                                  ...nb,\r\n-                                  addOns: updated,\r\n-                                  amount: calculatePrice(nb.service, updated, nb.carType),\r\n-                                };\r\n-                              });\r\n-                            }}\r\n-                            className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n-                          >\r\n-                            {opt.label}\r\n-                          </button>\r\n-                        ))}\r\n-                      </div>\r\n-                    </div>\r\n-                  )}\r\n-                  {/* Date */}\r\n-                  <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Amount (auto-calculated, read-only) */}\r\n-                  <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n-                  {/* Phone (numbers only) */}\r\n-                  <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n-                    // Only allow numbers\r\n-                    const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n-                    setNewBooking({ ...newBooking, phone: val });\r\n-                  }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Email */}\r\n-                  <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Location autocomplete (Google Places API) */}\r\n-                  <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n-                    const val = e.target.value;\r\n-                    setNewBooking({ ...newBooking, location: val });\r\n-                    // Simple Google Places Autocomplete (client-side only)\r\n-                    if (window && val.length > 2) {\r\n-                      try {\r\n-                        const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n-                        const data = await resp.json();\r\n-                        setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n-                      } catch {}\r\n-                    } else {\r\n-                      setLocationSuggestions([]);\r\n-                    }\r\n-                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n-                  {/* Location suggestions dropdown */}\r\n-                  {locationSuggestions.length > 0 && (\r\n-                    <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n-                      {locationSuggestions.map((sug, i) => (\r\n-                        <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n-                          setNewBooking(nb => ({ ...nb, location: sug }));\r\n-                          setLocationSuggestions([]);\r\n-                        }}>{sug}</div>\r\n-                      ))}\r\n-                    </div>\r\n-                  )}\r\n-                  {/* Status dropdown */}\r\n-                  <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-                    <option value=\"pending\">Pending</option>\r\n-                    <option value=\"complete\">Complete</option>\r\n-                  </select>\r\n-                  <div className=\"flex gap-4 mt-4 pb-4\">\r\n-                    <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n-                    <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={() => setShowAdd(false)}>Cancel</button>\r\n-                  </div>\r\n-                </form>\r\n-              </div>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1760671213825,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,357 @@\n+import { useEffect, useState } from \"react\";\r\n+import { useRouter } from \"next/router\";\r\n+\r\n+// Mock booking data for demo\r\n+const initialBookings = [\r\n+  { id: 1, name: \"John Doe\", service: \"Complete Interior Detail\", date: \"2025-10-10\", amount: 130, status: \"complete\", phone: \"902-555-1234\", email: \"john@example.com\", location: \"Halifax\" },\r\n+  { id: 2, name: \"Jane Smith\", service: \"Premium Exterior Wash\", date: \"2025-10-12\", amount: 50, status: \"pending\", phone: \"902-555-5678\", email: \"jane@example.com\", location: \"Dartmouth\" },\r\n+  { id: 3, name: \"Alex Lee\", service: \"Ultimate Full Detail\", date: \"2025-10-15\", amount: 160, status: \"complete\", phone: \"902-555-9999\", email: \"alex@example.com\", location: \"Bedford\" },\r\n+];\r\n+\r\n+export default function AdminDashboard() {\r\n+  const router = useRouter();\r\n+  const [bookings, setBookings] = useState(initialBookings);\r\n+  const [showAdd, setShowAdd] = useState(false);\r\n+  const [showDetail, setShowDetail] = useState(false);\r\n+  const [detailBooking, setDetailBooking] = useState(null);\r\n+  // Service/add-on logic\r\n+  const serviceOptions = [\r\n+    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: false },\r\n+    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n+    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n+  ];\r\n+  const addOnOptions = [\r\n+    { label: \"Pet Hair Removal\", price: 20 },\r\n+    { label: \"Clay Bar\", price: 20 },\r\n+    { label: \"Iron Removal\", price: 25 },\r\n+    { label: \"Ceramic Sealant\", price: 10 },\r\n+  ];\r\n+  const carTypeOptions = [\r\n+    { label: \"Sedan\", price: 0 },\r\n+    { label: \"SUV\", price: 10 },\r\n+    { label: \"Truck\", price: 20 },\r\n+  ];\r\n+  // Booking state\r\n+  const [newBooking, setNewBooking] = useState({\r\n+    name: \"\",\r\n+    service: serviceOptions[0].title,\r\n+    date: \"\",\r\n+    amount: serviceOptions[0].basePrice,\r\n+    status: \"pending\",\r\n+    phone: \"\",\r\n+    email: \"\",\r\n+    location: \"\",\r\n+    addOns: [],\r\n+    carType: carTypeOptions[0].label,\r\n+  });\r\n+  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n+\r\n+  useEffect(() => {\r\n+    if (typeof window !== \"undefined\") {\r\n+      const saved = window.localStorage.getItem(\"adminAuth\");\r\n+      if (saved !== \"Detailing1313!\") {\r\n+        router.replace(\"/admin\");\r\n+      }\r\n+    }\r\n+  }, [router]);\r\n+\r\n+  // Calculate total revenue\r\n+  const totalRevenue = bookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n+\r\n+  // Add new booking\r\n+  // Calculate price\r\n+  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n+    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n+    let price = service ? service.basePrice : 0;\r\n+    let addOnTotal = 0;\r\n+    let filteredAddOns = [];\r\n+    if (service && service.hasAddOns && addOns.length) {\r\n+      if (serviceTitle === \"Premium Exterior Wash\") {\r\n+        filteredAddOns = addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n+      } else if (serviceTitle === \"Complete Interior Detail\") {\r\n+        filteredAddOns = addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n+      } else if (serviceTitle === \"Ultimate Full Detail\") {\r\n+        filteredAddOns = addOns; // show all\r\n+      }\r\n+      addOnTotal = filteredAddOns.reduce((sum, a) => sum + a.price, 0);\r\n+      // Subtract $5 if both Clay Bar and Iron Removal are selected\r\n+      const clay = filteredAddOns.find(a => a.label === \"Clay Bar\");\r\n+      const iron = filteredAddOns.find(a => a.label === \"Iron Removal\");\r\n+      if (clay && iron) {\r\n+        addOnTotal -= 5;\r\n+      }\r\n+      price += addOnTotal;\r\n+    }\r\n+    const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n+    if (carType) price += carType.price;\r\n+    // Special rule for Complete Interior Detail\r\n+    if (serviceTitle === \"Complete Interior Detail\") {\r\n+      if (carTypeLabel === \"SUV\") price += 20;\r\n+      else if (carTypeLabel === \"Truck\") price += 30;\r\n+    }\r\n+    return price;\r\n+  };\r\n+\r\n+  // Add booking\r\n+  const handleAddBooking = (e) => {\r\n+    e.preventDefault();\r\n+    setBookings([\r\n+      ...bookings,\r\n+      {\r\n+        ...newBooking,\r\n+        id: bookings.length + 1,\r\n+        amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n+      }\r\n+    ]);\r\n+    setNewBooking({\r\n+      name: \"\",\r\n+      service: serviceOptions[0].title,\r\n+      date: \"\",\r\n+      amount: serviceOptions[0].basePrice,\r\n+      status: \"pending\",\r\n+      phone: \"\",\r\n+      email: \"\",\r\n+      location: \"\",\r\n+      addOns: [],\r\n+      carType: carTypeOptions[0].label,\r\n+    });\r\n+    setShowAdd(false);\r\n+  };\r\n+\r\n+  // Show booking details modal\r\n+  const handleShowDetail = (booking) => {\r\n+    setDetailBooking(booking);\r\n+    setShowDetail(true);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n+      <div className=\"max-w-5xl mx-auto\">\r\n+        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n+        {/* Revenue summary */}\r\n+        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n+          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n+            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n+            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n+            <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Pending</div>\r\n+            <div className=\"text-3xl font-bold text-yellow-600\">{bookings.filter(b => b.status === \"pending\").length}</div>\r\n+          </div>\r\n+        </div>\r\n+        {/* Booking list */}\r\n+        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n+          <div className=\"flex justify-between items-center mb-4\">\r\n+            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n+            <button\r\n+              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+              onClick={() => setShowAdd(true)}\r\n+            >\r\n+              Add Booking\r\n+            </button>\r\n+          </div>\r\n+          <table className=\"w-full text-left border-collapse\">\r\n+            <thead>\r\n+              <tr style={{ background: '#f5f5f5' }}>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n+              </tr>\r\n+            </thead>\r\n+            <tbody>\r\n+              {bookings.map(b => (\r\n+                <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleShowDetail(b)}>{b.name}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.service}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.date}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>${b.amount}</td>\r\n+                  <td className=\"py-2 px-3\">\r\n+                    <span className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}>{b.status}</span>\r\n+                  </td>\r\n+                </tr>\r\n+              ))}\r\n+            </tbody>\r\n+          </table>\r\n+        </div>\r\n+        {/* Booking details modal */}\r\n+        {showDetail && detailBooking && (\r\n+          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n+              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n+              <div className=\"space-y-3 text-gray-800\">\r\n+                <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n+                <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n+                <div><span className=\"font-semibold\">Date:</span> {detailBooking.date}</div>\r\n+                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n+                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n+                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n+                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n+                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n+              </div>\r\n+              <button className=\"mt-8 w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\" onClick={() => setShowDetail(false)}>Close</button>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+        {/* Add booking modal */}\r\n+        {showAdd && (\r\n+          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+            <div\r\n+              className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n+              style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n+            >\r\n+              {/* Close (X) button */}\r\n+              <button\r\n+                type=\"button\"\r\n+                aria-label=\"Close\"\r\n+                onClick={() => setShowAdd(false)}\r\n+                className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n+                style={{ background: 'none', border: 'none' }}\r\n+              >\r\n+                &times;\r\n+              </button>\r\n+              <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n+              <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n+                <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n+                  {/* Name */}\r\n+                  <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Service dropdown */}\r\n+                  <select required value={newBooking.service} onChange={e => {\r\n+                    const selectedService = e.target.value;\r\n+                    setNewBooking(nb => ({\r\n+                      ...nb,\r\n+                      service: selectedService,\r\n+                      addOns: [],\r\n+                      amount: calculatePrice(selectedService, [], nb.carType),\r\n+                    }));\r\n+                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+                    {serviceOptions.map(s => (\r\n+                      <option key={s.title} value={s.title}>{s.title}</option>\r\n+                    ))}\r\n+                  </select>\r\n+                  {/* Car type dropdown */}\r\n+                  <select required value={newBooking.carType} onChange={e => {\r\n+                    const carType = e.target.value;\r\n+                    setNewBooking(nb => ({\r\n+                      ...nb,\r\n+                      carType,\r\n+                      amount: calculatePrice(nb.service, nb.addOns, carType),\r\n+                    }));\r\n+                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+                    {carTypeOptions.map(c => (\r\n+                      <option key={c.label} value={c.label}>{c.label}</option>\r\n+                    ))}\r\n+                  </select>\r\n+                  {/* Add-ons (always show for Premium Exterior Wash, and for other services as per rules) */}\r\n+                  <div>\r\n+                    <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n+                    <div className=\"flex flex-wrap gap-3 mb-2\">\r\n+                      {(() => {\r\n+                        let validAddOns = [];\r\n+                        if (newBooking.service === \"Premium Exterior Wash\") {\r\n+                          validAddOns = addOnOptions.filter(opt => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(opt.label));\r\n+                        } else if (newBooking.service === \"Complete Interior Detail\") {\r\n+                          validAddOns = addOnOptions.filter(opt => opt.label === \"Pet Hair Removal\");\r\n+                        } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n+                          validAddOns = addOnOptions;\r\n+                        }\r\n+                        return validAddOns.map(opt => (\r\n+                          <button\r\n+                            key={opt.label}\r\n+                            type=\"button\"\r\n+                            onClick={() => {\r\n+                              setNewBooking(nb => {\r\n+                                const exists = nb.addOns.find(a => a.label === opt.label);\r\n+                                const updated = exists\r\n+                                  ? nb.addOns.filter(a => a.label !== opt.label)\r\n+                                  : [...nb.addOns, opt];\r\n+                                return {\r\n+                                  ...nb,\r\n+                                  addOns: updated,\r\n+                                  amount: calculatePrice(nb.service, updated, nb.carType),\r\n+                                };\r\n+                              });\r\n+                            }}\r\n+                            className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n+                          >\r\n+                            {opt.label}\r\n+                          </button>\r\n+                        ));\r\n+                      })()}\r\n+                    </div>\r\n+                    {/* Combo discount message */}\r\n+                    {(() => {\r\n+                      let validAddOns = [];\r\n+                      if (newBooking.service === \"Premium Exterior Wash\") {\r\n+                        validAddOns = newBooking.addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n+                      } else if (newBooking.service === \"Complete Interior Detail\") {\r\n+                        validAddOns = newBooking.addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n+                      } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n+                        validAddOns = newBooking.addOns;\r\n+                      }\r\n+                      return validAddOns.find(a => a.label === \"Clay Bar\") && validAddOns.find(a => a.label === \"Iron Removal\") ? (\r\n+                        <div className=\"text-xs text-blue-600 mt-2 font-semibold\">Combo discount applied (-$5)</div>\r\n+                      ) : null;\r\n+                    })()}\r\n+                  </div>\r\n+                  {/* Date */}\r\n+                  <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Amount (auto-calculated, read-only) */}\r\n+                  <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n+                  {/* Phone (numbers only) */}\r\n+                  <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n+                    // Only allow numbers\r\n+                    const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n+                    setNewBooking({ ...newBooking, phone: val });\r\n+                  }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Email */}\r\n+                  <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Location autocomplete (Google Places API) */}\r\n+                  <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n+                    const val = e.target.value;\r\n+                    setNewBooking({ ...newBooking, location: val });\r\n+                    // Simple Google Places Autocomplete (client-side only)\r\n+                    if (window && val.length > 2) {\r\n+                      try {\r\n+                        const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n+                        const data = await resp.json();\r\n+                        setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n+                      } catch {}\r\n+                    } else {\r\n+                      setLocationSuggestions([]);\r\n+                    }\r\n+                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n+                  {/* Location suggestions dropdown */}\r\n+                  {locationSuggestions.length > 0 && (\r\n+                    <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n+                      {locationSuggestions.map((sug, i) => (\r\n+                        <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n+                          setNewBooking(nb => ({ ...nb, location: sug }));\r\n+                          setLocationSuggestions([]);\r\n+                        }}>{sug}</div>\r\n+                      ))}\r\n+                    </div>\r\n+                  )}\r\n+                  {/* Status dropdown */}\r\n+                  <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+                    <option value=\"pending\">Pending</option>\r\n+                    <option value=\"complete\">Complete</option>\r\n+                  </select>\r\n+                  <div className=\"flex gap-4 mt-4 pb-4\">\r\n+                    <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n+                    <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={() => setShowAdd(false)}>Cancel</button>\r\n+                  </div>\r\n+                </form>\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1760671313451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,10 +85,11 @@\n     const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n     if (carType) price += carType.price;\r\n     // Special rule for Complete Interior Detail\r\n     if (serviceTitle === \"Complete Interior Detail\") {\r\n-      if (carTypeLabel === \"SUV\") price += 20;\r\n-      else if (carTypeLabel === \"Truck\") price += 30;\r\n+      if (carTypeLabel === \"SUV\") price = 130;\r\n+      else if (carTypeLabel === \"Truck\") price = 140;\r\n+      else price = 110;\r\n     }\r\n     return price;\r\n   };\r\n \r\n@@ -354,363 +355,4 @@\n       </div>\r\n     </div>\r\n   );\r\n }\r\n-import { useEffect, useState } from \"react\";\r\n-import { useRouter } from \"next/router\";\r\n-\r\n-// Mock booking data for demo\r\n-const initialBookings = [\r\n-  { id: 1, name: \"John Doe\", service: \"Complete Interior Detail\", date: \"2025-10-10\", amount: 130, status: \"complete\", phone: \"902-555-1234\", email: \"john@example.com\", location: \"Halifax\" },\r\n-  { id: 2, name: \"Jane Smith\", service: \"Premium Exterior Wash\", date: \"2025-10-12\", amount: 50, status: \"pending\", phone: \"902-555-5678\", email: \"jane@example.com\", location: \"Dartmouth\" },\r\n-  { id: 3, name: \"Alex Lee\", service: \"Ultimate Full Detail\", date: \"2025-10-15\", amount: 160, status: \"complete\", phone: \"902-555-9999\", email: \"alex@example.com\", location: \"Bedford\" },\r\n-];\r\n-\r\n-export default function AdminDashboard() {\r\n-  const router = useRouter();\r\n-  const [bookings, setBookings] = useState(initialBookings);\r\n-  const [showAdd, setShowAdd] = useState(false);\r\n-  const [showDetail, setShowDetail] = useState(false);\r\n-  const [detailBooking, setDetailBooking] = useState(null);\r\n-  // Service/add-on logic\r\n-  const serviceOptions = [\r\n-    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: false },\r\n-    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n-    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n-  ];\r\n-  const addOnOptions = [\r\n-    { label: \"Pet Hair Removal\", price: 20 },\r\n-    { label: \"Clay Bar\", price: 20 },\r\n-    { label: \"Iron Removal\", price: 25 },\r\n-    { label: \"Ceramic Sealant\", price: 10 },\r\n-  ];\r\n-  const carTypeOptions = [\r\n-    { label: \"Sedan\", price: 0 },\r\n-    { label: \"SUV\", price: 10 },\r\n-    { label: \"Truck\", price: 20 },\r\n-  ];\r\n-  // Booking state\r\n-  const [newBooking, setNewBooking] = useState({\r\n-    name: \"\",\r\n-    service: serviceOptions[0].title,\r\n-    date: \"\",\r\n-    amount: serviceOptions[0].basePrice,\r\n-    status: \"pending\",\r\n-    phone: \"\",\r\n-    email: \"\",\r\n-    location: \"\",\r\n-    addOns: [],\r\n-    carType: carTypeOptions[0].label,\r\n-  });\r\n-  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n-\r\n-  useEffect(() => {\r\n-    if (typeof window !== \"undefined\") {\r\n-      const saved = window.localStorage.getItem(\"adminAuth\");\r\n-      if (saved !== \"Detailing1313!\") {\r\n-        router.replace(\"/admin\");\r\n-      }\r\n-    }\r\n-  }, [router]);\r\n-\r\n-  // Calculate total revenue\r\n-  const totalRevenue = bookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n-\r\n-  // Add new booking\r\n-  // Calculate price\r\n-  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n-    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n-    let price = service ? service.basePrice : 0;\r\n-    let addOnTotal = 0;\r\n-    let filteredAddOns = [];\r\n-    if (service && service.hasAddOns && addOns.length) {\r\n-      if (serviceTitle === \"Premium Exterior Wash\") {\r\n-        filteredAddOns = addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n-      } else if (serviceTitle === \"Complete Interior Detail\") {\r\n-        filteredAddOns = addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n-      } else if (serviceTitle === \"Ultimate Full Detail\") {\r\n-        filteredAddOns = addOns; // show all\r\n-      }\r\n-      addOnTotal = filteredAddOns.reduce((sum, a) => sum + a.price, 0);\r\n-      // Subtract $5 if both Clay Bar and Iron Removal are selected\r\n-      const clay = filteredAddOns.find(a => a.label === \"Clay Bar\");\r\n-      const iron = filteredAddOns.find(a => a.label === \"Iron Removal\");\r\n-      if (clay && iron) {\r\n-        addOnTotal -= 5;\r\n-      }\r\n-      price += addOnTotal;\r\n-    }\r\n-    const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n-    if (carType) price += carType.price;\r\n-    // Special rule for Complete Interior Detail\r\n-    if (serviceTitle === \"Complete Interior Detail\") {\r\n-      if (carTypeLabel === \"SUV\") price += 20;\r\n-      else if (carTypeLabel === \"Truck\") price += 30;\r\n-    }\r\n-    return price;\r\n-  };\r\n-\r\n-  // Add booking\r\n-  const handleAddBooking = (e) => {\r\n-    e.preventDefault();\r\n-    setBookings([\r\n-      ...bookings,\r\n-      {\r\n-        ...newBooking,\r\n-        id: bookings.length + 1,\r\n-        amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n-      }\r\n-    ]);\r\n-    setNewBooking({\r\n-      name: \"\",\r\n-      service: serviceOptions[0].title,\r\n-      date: \"\",\r\n-      amount: serviceOptions[0].basePrice,\r\n-      status: \"pending\",\r\n-      phone: \"\",\r\n-      email: \"\",\r\n-      location: \"\",\r\n-      addOns: [],\r\n-      carType: carTypeOptions[0].label,\r\n-    });\r\n-    setShowAdd(false);\r\n-  };\r\n-\r\n-  // Show booking details modal\r\n-  const handleShowDetail = (booking) => {\r\n-    setDetailBooking(booking);\r\n-    setShowDetail(true);\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n-      <div className=\"max-w-5xl mx-auto\">\r\n-        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n-        {/* Revenue summary */}\r\n-        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n-          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n-            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n-            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n-          </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n-            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n-            <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n-          </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n-            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Pending</div>\r\n-            <div className=\"text-3xl font-bold text-yellow-600\">{bookings.filter(b => b.status === \"pending\").length}</div>\r\n-          </div>\r\n-        </div>\r\n-        {/* Booking list */}\r\n-        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n-          <div className=\"flex justify-between items-center mb-4\">\r\n-            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n-            <button\r\n-              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-              onClick={() => setShowAdd(true)}\r\n-            >\r\n-              Add Booking\r\n-            </button>\r\n-          </div>\r\n-          <table className=\"w-full text-left border-collapse\">\r\n-            <thead>\r\n-              <tr style={{ background: '#f5f5f5' }}>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n-              </tr>\r\n-            </thead>\r\n-            <tbody>\r\n-              {bookings.map(b => (\r\n-                <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleShowDetail(b)}>{b.name}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.service}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.date}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>${b.amount}</td>\r\n-                  <td className=\"py-2 px-3\">\r\n-                    <span className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}>{b.status}</span>\r\n-                  </td>\r\n-                </tr>\r\n-              ))}\r\n-            </tbody>\r\n-          </table>\r\n-        </div>\r\n-        {/* Booking details modal */}\r\n-        {showDetail && detailBooking && (\r\n-          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n-              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n-              <div className=\"space-y-3 text-gray-800\">\r\n-                <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n-                <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n-                <div><span className=\"font-semibold\">Date:</span> {detailBooking.date}</div>\r\n-                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n-                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n-                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n-                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n-                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n-              </div>\r\n-              <button className=\"mt-8 w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\" onClick={() => setShowDetail(false)}>Close</button>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-        {/* Add booking modal */}\r\n-        {showAdd && (\r\n-          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-            <div\r\n-              className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n-              style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n-            >\r\n-              {/* Close (X) button */}\r\n-              <button\r\n-                type=\"button\"\r\n-                aria-label=\"Close\"\r\n-                onClick={() => setShowAdd(false)}\r\n-                className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n-                style={{ background: 'none', border: 'none' }}\r\n-              >\r\n-                &times;\r\n-              </button>\r\n-              <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n-              <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n-                <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n-                  {/* Name */}\r\n-                  <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Service dropdown */}\r\n-                  <select required value={newBooking.service} onChange={e => {\r\n-                    const selectedService = e.target.value;\r\n-                    setNewBooking(nb => ({\r\n-                      ...nb,\r\n-                      service: selectedService,\r\n-                      addOns: [],\r\n-                      amount: calculatePrice(selectedService, [], nb.carType),\r\n-                    }));\r\n-                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-                    {serviceOptions.map(s => (\r\n-                      <option key={s.title} value={s.title}>{s.title}</option>\r\n-                    ))}\r\n-                  </select>\r\n-                  {/* Car type dropdown */}\r\n-                  <select required value={newBooking.carType} onChange={e => {\r\n-                    const carType = e.target.value;\r\n-                    setNewBooking(nb => ({\r\n-                      ...nb,\r\n-                      carType,\r\n-                      amount: calculatePrice(nb.service, nb.addOns, carType),\r\n-                    }));\r\n-                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-                    {carTypeOptions.map(c => (\r\n-                      <option key={c.label} value={c.label}>{c.label}</option>\r\n-                    ))}\r\n-                  </select>\r\n-                  {/* Add-ons (only for services with add-ons) */}\r\n-                  {serviceOptions.find(s => s.title === newBooking.service)?.hasAddOns && (\r\n-                    <div>\r\n-                      <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n-                      <div className=\"flex flex-wrap gap-3 mb-2\">\r\n-                        {(() => {\r\n-                          let validAddOns = [];\r\n-                          if (newBooking.service === \"Premium Exterior Wash\") {\r\n-                            validAddOns = addOnOptions.filter(opt => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(opt.label));\r\n-                          } else if (newBooking.service === \"Complete Interior Detail\") {\r\n-                            validAddOns = addOnOptions.filter(opt => opt.label === \"Pet Hair Removal\");\r\n-                          } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n-                            validAddOns = addOnOptions;\r\n-                          }\r\n-                          return validAddOns.map(opt => (\r\n-                            <button\r\n-                              key={opt.label}\r\n-                              type=\"button\"\r\n-                              onClick={() => {\r\n-                                setNewBooking(nb => {\r\n-                                  const exists = nb.addOns.find(a => a.label === opt.label);\r\n-                                  const updated = exists\r\n-                                    ? nb.addOns.filter(a => a.label !== opt.label)\r\n-                                    : [...nb.addOns, opt];\r\n-                                  return {\r\n-                                    ...nb,\r\n-                                    addOns: updated,\r\n-                                    amount: calculatePrice(nb.service, updated, nb.carType),\r\n-                                  };\r\n-                                });\r\n-                              }}\r\n-                              className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n-                            >\r\n-                              {opt.label}\r\n-                            </button>\r\n-                          ));\r\n-                        })()}\r\n-                      </div>\r\n-                      {/* Combo discount message */}\r\n-                      {(() => {\r\n-                        let validAddOns = [];\r\n-                        if (newBooking.service === \"Premium Exterior Wash\") {\r\n-                          validAddOns = newBooking.addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n-                        } else if (newBooking.service === \"Complete Interior Detail\") {\r\n-                          validAddOns = newBooking.addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n-                        } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n-                          validAddOns = newBooking.addOns;\r\n-                        }\r\n-                        return validAddOns.find(a => a.label === \"Clay Bar\") && validAddOns.find(a => a.label === \"Iron Removal\") ? (\r\n-                          <div className=\"text-xs text-blue-600 mt-2 font-semibold\">Combo discount applied (-$5)</div>\r\n-                        ) : null;\r\n-                      })()}\r\n-                    </div>\r\n-                  )}\r\n-                  {/* Date */}\r\n-                  <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Amount (auto-calculated, read-only) */}\r\n-                  <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n-                  {/* Phone (numbers only) */}\r\n-                  <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n-                    // Only allow numbers\r\n-                    const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n-                    setNewBooking({ ...newBooking, phone: val });\r\n-                  }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Email */}\r\n-                  <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Location autocomplete (Google Places API) */}\r\n-                  <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n-                    const val = e.target.value;\r\n-                    setNewBooking({ ...newBooking, location: val });\r\n-                    // Simple Google Places Autocomplete (client-side only)\r\n-                    if (window && val.length > 2) {\r\n-                      try {\r\n-                        const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n-                        const data = await resp.json();\r\n-                        setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n-                      } catch {}\r\n-                    } else {\r\n-                      setLocationSuggestions([]);\r\n-                    }\r\n-                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n-                  {/* Location suggestions dropdown */}\r\n-                  {locationSuggestions.length > 0 && (\r\n-                    <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n-                      {locationSuggestions.map((sug, i) => (\r\n-                        <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n-                          setNewBooking(nb => ({ ...nb, location: sug }));\r\n-                          setLocationSuggestions([]);\r\n-                        }}>{sug}</div>\r\n-                      ))}\r\n-                    </div>\r\n-                  )}\r\n-                  {/* Status dropdown */}\r\n-                  <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-                    <option value=\"pending\">Pending</option>\r\n-                    <option value=\"complete\">Complete</option>\r\n-                  </select>\r\n-                  <div className=\"flex gap-4 mt-4 pb-4\">\r\n-                    <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n-                    <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={() => setShowAdd(false)}>Cancel</button>\r\n-                  </div>\r\n-                </form>\r\n-              </div>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1760671597834,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,11 +2,55 @@\n import { useRouter } from \"next/router\";\r\n \r\n // Mock booking data for demo\r\n const initialBookings = [\r\n-  { id: 1, name: \"John Doe\", service: \"Complete Interior Detail\", date: \"2025-10-10\", amount: 130, status: \"complete\", phone: \"902-555-1234\", email: \"john@example.com\", location: \"Halifax\" },\r\n-  { id: 2, name: \"Jane Smith\", service: \"Premium Exterior Wash\", date: \"2025-10-12\", amount: 50, status: \"pending\", phone: \"902-555-5678\", email: \"jane@example.com\", location: \"Dartmouth\" },\r\n-  { id: 3, name: \"Alex Lee\", service: \"Ultimate Full Detail\", date: \"2025-10-15\", amount: 160, status: \"complete\", phone: \"902-555-9999\", email: \"alex@example.com\", location: \"Bedford\" },\r\n+  {\r\n+    id: 1,\r\n+    name: \"John Doe\",\r\n+    service: \"Complete Interior Detail\",\r\n+    date: \"2025-10-10\",\r\n+    amount: 130,\r\n+    status: \"complete\",\r\n+    phone: \"902-555-1234\",\r\n+    email: \"john@example.com\",\r\n+    location: \"Halifax\",\r\n+    addOns: [{ label: \"Pet Hair Removal\", price: 20 }],\r\n+    carType: \"SUV\"\r\n+  },\r\n+  {\r\n+    id: 2,\r\n+    name: \"Jane Smith\",\r\n+    service: \"Premium Exterior Wash\",\r\n+    date: \"2025-10-12\",\r\n+    amount: 50,\r\n+    status: \"pending\",\r\n+    phone: \"902-555-5678\",\r\n+    email: \"jane@example.com\",\r\n+    location: \"Dartmouth\",\r\n+    addOns: [\r\n+      { label: \"Clay Bar\", price: 20 },\r\n+      { label: \"Iron Removal\", price: 25 },\r\n+      { label: \"Ceramic Sealant\", price: 10 }\r\n+    ],\r\n+    carType: \"Sedan\"\r\n+  },\r\n+  {\r\n+    id: 3,\r\n+    name: \"Alex Lee\",\r\n+    service: \"Ultimate Full Detail\",\r\n+    date: \"2025-10-15\",\r\n+    amount: 160,\r\n+    status: \"complete\",\r\n+    phone: \"902-555-9999\",\r\n+    email: \"alex@example.com\",\r\n+    location: \"Bedford\",\r\n+    addOns: [\r\n+      { label: \"Pet Hair Removal\", price: 20 },\r\n+      { label: \"Clay Bar\", price: 20 },\r\n+      { label: \"Iron Removal\", price: 25 }\r\n+    ],\r\n+    carType: \"Truck\"\r\n+  },\r\n ];\r\n \r\n export default function AdminDashboard() {\r\n   const router = useRouter();\r\n@@ -193,8 +237,18 @@\n                 <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n                 <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n                 <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n                 <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n+                {detailBooking.addOns && detailBooking.addOns.length > 0 && (\r\n+                  <div>\r\n+                    <span className=\"font-semibold\">Add-Ons:</span>\r\n+                    <ul className=\"list-disc ml-6 mt-1\">\r\n+                      {detailBooking.addOns.map((a, i) => (\r\n+                        <li key={i}>{a.label} (+${a.price})</li>\r\n+                      ))}\r\n+                    </ul>\r\n+                  </div>\r\n+                )}\r\n               </div>\r\n               <button className=\"mt-8 w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\" onClick={() => setShowDetail(false)}>Close</button>\r\n             </div>\r\n           </div>\r\n"
                },
                {
                    "date": 1760671746149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -231,24 +231,25 @@\n               <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n               <div className=\"space-y-3 text-gray-800\">\r\n                 <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n                 <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n-                <div><span className=\"font-semibold\">Date:</span> {detailBooking.date}</div>\r\n-                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n-                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n-                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n-                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n-                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n                 {detailBooking.addOns && detailBooking.addOns.length > 0 && (\r\n                   <div>\r\n                     <span className=\"font-semibold\">Add-Ons:</span>\r\n                     <ul className=\"list-disc ml-6 mt-1\">\r\n                       {detailBooking.addOns.map((a, i) => (\r\n-                        <li key={i}>{a.label} (+${a.price})</li>\r\n+                        <li key={i}>{a.label}</li>\r\n                       ))}\r\n                     </ul>\r\n                   </div>\r\n                 )}\r\n+                <div><span className=\"font-semibold\">Date:</span> {detailBooking.date}</div>\r\n+                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n+                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n+                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n+                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n+                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n+                \r\n               </div>\r\n               <button className=\"mt-8 w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\" onClick={() => setShowDetail(false)}>Close</button>\r\n             </div>\r\n           </div>\r\n"
                },
                {
                    "date": 1760672057679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,416 @@\n+import { useEffect, useState } from \"react\";\r\n+import { useRouter } from \"next/router\";\r\n+\r\n+// Mock booking data for demo\r\n+const initialBookings = [\r\n+  {\r\n+    id: 1,\r\n+    name: \"John Doe\",\r\n+    service: \"Complete Interior Detail\",\r\n+    date: \"2025-10-10\",\r\n+    amount: 130,\r\n+    status: \"complete\",\r\n+    phone: \"902-555-1234\",\r\n+    email: \"john@example.com\",\r\n+    location: \"Halifax\",\r\n+    addOns: [{ label: \"Pet Hair Removal\", price: 20 }],\r\n+    carType: \"SUV\"\r\n+  },\r\n+  {\r\n+    id: 2,\r\n+    name: \"Jane Smith\",\r\n+    service: \"Premium Exterior Wash\",\r\n+    date: \"2025-10-12\",\r\n+    amount: 50,\r\n+    status: \"pending\",\r\n+    phone: \"902-555-5678\",\r\n+    email: \"jane@example.com\",\r\n+    location: \"Dartmouth\",\r\n+    addOns: [\r\n+      { label: \"Clay Bar\", price: 20 },\r\n+      { label: \"Iron Removal\", price: 25 },\r\n+      { label: \"Ceramic Sealant\", price: 10 }\r\n+    ],\r\n+    carType: \"Sedan\"\r\n+  },\r\n+  {\r\n+    id: 3,\r\n+    name: \"Alex Lee\",\r\n+    service: \"Ultimate Full Detail\",\r\n+    date: \"2025-10-15\",\r\n+    amount: 160,\r\n+    status: \"complete\",\r\n+    phone: \"902-555-9999\",\r\n+    email: \"alex@example.com\",\r\n+    location: \"Bedford\",\r\n+    addOns: [\r\n+      { label: \"Pet Hair Removal\", price: 20 },\r\n+      { label: \"Clay Bar\", price: 20 },\r\n+      { label: \"Iron Removal\", price: 25 }\r\n+    ],\r\n+    carType: \"Truck\"\r\n+  },\r\n+];\r\n+\r\n+export default function AdminDashboard() {\r\n+  const router = useRouter();\r\n+  const [bookings, setBookings] = useState(initialBookings);\r\n+  const [showAdd, setShowAdd] = useState(false);\r\n+  const [showDetail, setShowDetail] = useState(false);\r\n+  const [detailBooking, setDetailBooking] = useState(null);\r\n+  // Service/add-on logic\r\n+  const serviceOptions = [\r\n+    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: true },\r\n+    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n+    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n+  ];\r\n+  const addOnOptions = [\r\n+    { label: \"Pet Hair Removal\", price: 20 },\r\n+    { label: \"Clay Bar\", price: 20 },\r\n+    { label: \"Iron Removal\", price: 25 },\r\n+    { label: \"Ceramic Sealant\", price: 10 },\r\n+  ];\r\n+  const carTypeOptions = [\r\n+    { label: \"Sedan\", price: 0 },\r\n+    { label: \"SUV\", price: 10 },\r\n+    { label: \"Truck\", price: 20 },\r\n+  ];\r\n+  // Booking state\r\n+  const [newBooking, setNewBooking] = useState({\r\n+    name: \"\",\r\n+    service: serviceOptions[0].title,\r\n+    date: \"\",\r\n+    amount: serviceOptions[0].basePrice,\r\n+    status: \"pending\",\r\n+    phone: \"\",\r\n+    email: \"\",\r\n+    location: \"\",\r\n+    addOns: [],\r\n+    carType: carTypeOptions[0].label,\r\n+  });\r\n+  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n+\r\n+  useEffect(() => {\r\n+    if (typeof window !== \"undefined\") {\r\n+      const saved = window.localStorage.getItem(\"adminAuth\");\r\n+      if (saved !== \"Detailing1313!\") {\r\n+        router.replace(\"/admin\");\r\n+      }\r\n+    }\r\n+  }, [router]);\r\n+\r\n+  // Calculate total revenue\r\n+  const totalRevenue = bookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n+\r\n+  // Add new booking\r\n+  // Calculate price\r\n+  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n+    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n+    // 1) Base price\r\n+    let base = service ? service.basePrice : 0;\r\n+    // Complete Interior Detail uses fixed base by car type\r\n+    if (serviceTitle === \"Complete Interior Detail\") {\r\n+      if (carTypeLabel === \"SUV\") base = 130;\r\n+      else if (carTypeLabel === \"Truck\") base = 140;\r\n+      else base = 110; // Sedan\r\n+    } else {\r\n+      // For other services, generic car type surcharge applies\r\n+      const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n+      if (carType) base += carType.price;\r\n+    }\r\n+\r\n+    // 2) Add-ons total according to service rules\r\n+    let addOnTotal = 0;\r\n+    if (service && service.hasAddOns && addOns.length) {\r\n+      let filteredAddOns = [];\r\n+      if (serviceTitle === \"Premium Exterior Wash\") {\r\n+        filteredAddOns = addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n+      } else if (serviceTitle === \"Complete Interior Detail\") {\r\n+        filteredAddOns = addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n+      } else if (serviceTitle === \"Ultimate Full Detail\") {\r\n+        filteredAddOns = addOns; // show all\r\n+      }\r\n+      addOnTotal = filteredAddOns.reduce((sum, a) => sum + a.price, 0);\r\n+      // Combo discount for Clay Bar + Iron Removal\r\n+      const clay = filteredAddOns.find(a => a.label === \"Clay Bar\");\r\n+      const iron = filteredAddOns.find(a => a.label === \"Iron Removal\");\r\n+      if (clay && iron) addOnTotal -= 5;\r\n+    }\r\n+\r\n+    return base + addOnTotal;\r\n+  };\r\n+\r\n+  // Add booking\r\n+  const handleAddBooking = (e) => {\r\n+    e.preventDefault();\r\n+    setBookings([\r\n+      ...bookings,\r\n+      {\r\n+        ...newBooking,\r\n+        id: bookings.length + 1,\r\n+        amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n+      }\r\n+    ]);\r\n+    setNewBooking({\r\n+      name: \"\",\r\n+      service: serviceOptions[0].title,\r\n+      date: \"\",\r\n+      amount: serviceOptions[0].basePrice,\r\n+      status: \"pending\",\r\n+      phone: \"\",\r\n+      email: \"\",\r\n+      location: \"\",\r\n+      addOns: [],\r\n+      carType: carTypeOptions[0].label,\r\n+    });\r\n+    setShowAdd(false);\r\n+  };\r\n+\r\n+  // Show booking details modal\r\n+  const handleShowDetail = (booking) => {\r\n+    setDetailBooking(booking);\r\n+    setShowDetail(true);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n+      <div className=\"max-w-5xl mx-auto\">\r\n+        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n+        {/* Revenue summary */}\r\n+        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n+          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n+            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n+            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n+            <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Pending</div>\r\n+            <div className=\"text-3xl font-bold text-yellow-600\">{bookings.filter(b => b.status === \"pending\").length}</div>\r\n+          </div>\r\n+        </div>\r\n+        {/* Booking list */}\r\n+        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n+          <div className=\"flex justify-between items-center mb-4\">\r\n+            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n+            <button\r\n+              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+              onClick={() => setShowAdd(true)}\r\n+            >\r\n+              Add Booking\r\n+            </button>\r\n+          </div>\r\n+          <table className=\"w-full text-left border-collapse\">\r\n+            <thead>\r\n+              <tr style={{ background: '#f5f5f5' }}>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n+              </tr>\r\n+            </thead>\r\n+            <tbody>\r\n+              {bookings.map(b => (\r\n+                <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleShowDetail(b)}>{b.name}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.service}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.date}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>${b.amount}</td>\r\n+                  <td className=\"py-2 px-3\">\r\n+                    <span className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}>{b.status}</span>\r\n+                  </td>\r\n+                </tr>\r\n+              ))}\r\n+            </tbody>\r\n+          </table>\r\n+        </div>\r\n+        {/* Booking details modal */}\r\n+        {showDetail && detailBooking && (\r\n+          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n+              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n+              <div className=\"space-y-3 text-gray-800\">\r\n+                <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n+                <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n+                {detailBooking.addOns && detailBooking.addOns.length > 0 && (\r\n+                  <div>\r\n+                    <span className=\"font-semibold\">Add-Ons:</span>\r\n+                    <ul className=\"list-disc ml-6 mt-1\">\r\n+                      {detailBooking.addOns.map((a, i) => (\r\n+                        <li key={i}>{a.label}</li>\r\n+                      ))}\r\n+                    </ul>\r\n+                  </div>\r\n+                )}\r\n+                <div><span className=\"font-semibold\">Date:</span> {detailBooking.date}</div>\r\n+                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n+                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n+                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n+                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n+                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n+                \r\n+              </div>\r\n+              <button className=\"mt-8 w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\" onClick={() => setShowDetail(false)}>Close</button>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+        {/* Add booking modal */}\r\n+        {showAdd && (\r\n+          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+            <div\r\n+              className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n+              style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n+            >\r\n+              {/* Close (X) button */}\r\n+              <button\r\n+                type=\"button\"\r\n+                aria-label=\"Close\"\r\n+                onClick={() => setShowAdd(false)}\r\n+                className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n+                style={{ background: 'none', border: 'none' }}\r\n+              >\r\n+                &times;\r\n+              </button>\r\n+              <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n+              <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n+                <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n+                  {/* Name */}\r\n+                  <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Service dropdown */}\r\n+                  <select required value={newBooking.service} onChange={e => {\r\n+                    const selectedService = e.target.value;\r\n+                    setNewBooking(nb => ({\r\n+                      ...nb,\r\n+                      service: selectedService,\r\n+                      addOns: [],\r\n+                      amount: calculatePrice(selectedService, [], nb.carType),\r\n+                    }));\r\n+                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+                    {serviceOptions.map(s => (\r\n+                      <option key={s.title} value={s.title}>{s.title}</option>\r\n+                    ))}\r\n+                  </select>\r\n+                  {/* Car type dropdown */}\r\n+                  <select required value={newBooking.carType} onChange={e => {\r\n+                    const carType = e.target.value;\r\n+                    setNewBooking(nb => ({\r\n+                      ...nb,\r\n+                      carType,\r\n+                      amount: calculatePrice(nb.service, nb.addOns, carType),\r\n+                    }));\r\n+                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+                    {carTypeOptions.map(c => (\r\n+                      <option key={c.label} value={c.label}>{c.label}</option>\r\n+                    ))}\r\n+                  </select>\r\n+                  {/* Add-ons (always show for Premium Exterior Wash, and for other services as per rules) */}\r\n+                  <div>\r\n+                    <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n+                    <div className=\"flex flex-wrap gap-3 mb-2\">\r\n+                      {(() => {\r\n+                        let validAddOns = [];\r\n+                        if (newBooking.service === \"Premium Exterior Wash\") {\r\n+                          validAddOns = addOnOptions.filter(opt => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(opt.label));\r\n+                        } else if (newBooking.service === \"Complete Interior Detail\") {\r\n+                          validAddOns = addOnOptions.filter(opt => opt.label === \"Pet Hair Removal\");\r\n+                        } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n+                          validAddOns = addOnOptions;\r\n+                        }\r\n+                        return validAddOns.map(opt => (\r\n+                          <button\r\n+                            key={opt.label}\r\n+                            type=\"button\"\r\n+                            onClick={() => {\r\n+                              setNewBooking(nb => {\r\n+                                const exists = nb.addOns.find(a => a.label === opt.label);\r\n+                                const updated = exists\r\n+                                  ? nb.addOns.filter(a => a.label !== opt.label)\r\n+                                  : [...nb.addOns, opt];\r\n+                                return {\r\n+                                  ...nb,\r\n+                                  addOns: updated,\r\n+                                  amount: calculatePrice(nb.service, updated, nb.carType),\r\n+                                };\r\n+                              });\r\n+                            }}\r\n+                            className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n+                          >\r\n+                            {opt.label}\r\n+                          </button>\r\n+                        ));\r\n+                      })()}\r\n+                    </div>\r\n+                    {/* Combo discount message */}\r\n+                    {(() => {\r\n+                      let validAddOns = [];\r\n+                      if (newBooking.service === \"Premium Exterior Wash\") {\r\n+                        validAddOns = newBooking.addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n+                      } else if (newBooking.service === \"Complete Interior Detail\") {\r\n+                        validAddOns = newBooking.addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n+                      } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n+                        validAddOns = newBooking.addOns;\r\n+                      }\r\n+                      return validAddOns.find(a => a.label === \"Clay Bar\") && validAddOns.find(a => a.label === \"Iron Removal\") ? (\r\n+                        <div className=\"text-xs text-blue-600 mt-2 font-semibold\">Combo discount applied (-$5)</div>\r\n+                      ) : null;\r\n+                    })()}\r\n+                  </div>\r\n+                  {/* Date */}\r\n+                  <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Amount (auto-calculated, read-only) */}\r\n+                  <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n+                  {/* Phone (numbers only) */}\r\n+                  <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n+                    // Only allow numbers\r\n+                    const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n+                    setNewBooking({ ...newBooking, phone: val });\r\n+                  }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Email */}\r\n+                  <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Location autocomplete (Google Places API) */}\r\n+                  <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n+                    const val = e.target.value;\r\n+                    setNewBooking({ ...newBooking, location: val });\r\n+                    // Simple Google Places Autocomplete (client-side only)\r\n+                    if (window && val.length > 2) {\r\n+                      try {\r\n+                        const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n+                        const data = await resp.json();\r\n+                        setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n+                      } catch {}\r\n+                    } else {\r\n+                      setLocationSuggestions([]);\r\n+                    }\r\n+                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n+                  {/* Location suggestions dropdown */}\r\n+                  {locationSuggestions.length > 0 && (\r\n+                    <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n+                      {locationSuggestions.map((sug, i) => (\r\n+                        <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n+                          setNewBooking(nb => ({ ...nb, location: sug }));\r\n+                          setLocationSuggestions([]);\r\n+                        }}>{sug}</div>\r\n+                      ))}\r\n+                    </div>\r\n+                  )}\r\n+                  {/* Status dropdown */}\r\n+                  <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+                    <option value=\"pending\">Pending</option>\r\n+                    <option value=\"complete\">Complete</option>\r\n+                  </select>\r\n+                  <div className=\"flex gap-4 mt-4 pb-4\">\r\n+                    <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n+                    <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={() => setShowAdd(false)}>Cancel</button>\r\n+                  </div>\r\n+                </form>\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1760672423127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,514 @@\n+import { useEffect, useState } from \"react\";\r\n+import { useRouter } from \"next/router\";\r\n+\r\n+// Mock booking data for demo\r\n+const initialBookings = [\r\n+  {\r\n+    id: 1,\r\n+    name: \"John Doe\",\r\n+    service: \"Complete Interior Detail\",\r\n+    date: \"2025-10-10\",\r\n+    time: \"14:30\",\r\n+    amount: 130,\r\n+    status: \"complete\",\r\n+    phone: \"902-555-1234\",\r\n+    email: \"john@example.com\",\r\n+    location: \"Halifax\",\r\n+    addOns: [{ label: \"Pet Hair Removal\", price: 20 }],\r\n+    carType: \"SUV\"\r\n+  },\r\n+  {\r\n+    id: 2,\r\n+    name: \"Jane Smith\",\r\n+    service: \"Premium Exterior Wash\",\r\n+    date: \"2025-10-12\",\r\n+    time: \"10:00\",\r\n+    amount: 50,\r\n+    status: \"pending\",\r\n+    phone: \"902-555-5678\",\r\n+    email: \"jane@example.com\",\r\n+    location: \"Dartmouth\",\r\n+    addOns: [\r\n+      { label: \"Clay Bar\", price: 20 },\r\n+      { label: \"Iron Removal\", price: 25 },\r\n+      { label: \"Ceramic Sealant\", price: 10 }\r\n+    ],\r\n+    carType: \"Sedan\"\r\n+  },\r\n+  {\r\n+    id: 3,\r\n+    name: \"Alex Lee\",\r\n+    service: \"Ultimate Full Detail\",\r\n+    date: \"2025-10-15\",\r\n+    time: \"09:15\",\r\n+    amount: 160,\r\n+    status: \"complete\",\r\n+    phone: \"902-555-9999\",\r\n+    email: \"alex@example.com\",\r\n+    location: \"Bedford\",\r\n+    addOns: [\r\n+      { label: \"Pet Hair Removal\", price: 20 },\r\n+      { label: \"Clay Bar\", price: 20 },\r\n+      { label: \"Iron Removal\", price: 25 }\r\n+    ],\r\n+    carType: \"Truck\"\r\n+  },\r\n+];\r\n+\r\n+export default function AdminDashboard() {\r\n+  const router = useRouter();\r\n+  const [bookings, setBookings] = useState(initialBookings);\r\n+  const [showAdd, setShowAdd] = useState(false);\r\n+  const [showDetail, setShowDetail] = useState(false);\r\n+  const [detailBooking, setDetailBooking] = useState(null);\r\n+  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n+  const [statusFilter, setStatusFilter] = useState(\"all\");\r\n+  // Service/add-on logic\r\n+  const serviceOptions = [\r\n+    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: true },\r\n+    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n+    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n+  ];\r\n+  const addOnOptions = [\r\n+    { label: \"Pet Hair Removal\", price: 20 },\r\n+    { label: \"Clay Bar\", price: 20 },\r\n+    { label: \"Iron Removal\", price: 25 },\r\n+    { label: \"Ceramic Sealant\", price: 10 },\r\n+  ];\r\n+  const carTypeOptions = [\r\n+    { label: \"Sedan\", price: 0 },\r\n+    { label: \"SUV\", price: 10 },\r\n+    { label: \"Truck\", price: 20 },\r\n+  ];\r\n+  // Booking state\r\n+  const [newBooking, setNewBooking] = useState({\r\n+    name: \"\",\r\n+    service: serviceOptions[0].title,\r\n+    date: \"\",\r\n+    time: \"\",\r\n+    amount: serviceOptions[0].basePrice,\r\n+    status: \"pending\",\r\n+    phone: \"\",\r\n+    email: \"\",\r\n+    location: \"\",\r\n+    addOns: [],\r\n+    carType: carTypeOptions[0].label,\r\n+  });\r\n+  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n+\r\n+  // Display date as \"oct-19\" while keeping year in stored value\r\n+  const formatDateShort = (dateStr) => {\r\n+    if (!dateStr) return \"\";\r\n+    const parts = dateStr.split(\"-\");\r\n+    if (parts.length !== 3) return dateStr;\r\n+    const y = parseInt(parts[0], 10);\r\n+    const m = parseInt(parts[1], 10);\r\n+    const d = parseInt(parts[2], 10);\r\n+    if (isNaN(y) || isNaN(m) || isNaN(d)) return dateStr;\r\n+    const months = [\"jan\",\"feb\",\"mar\",\"apr\",\"may\",\"jun\",\"jul\",\"aug\",\"sep\",\"oct\",\"nov\",\"dec\"];\r\n+    return `${months[m - 1]}-${d}`;\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    if (typeof window !== \"undefined\") {\r\n+      const saved = window.localStorage.getItem(\"adminAuth\");\r\n+      if (saved !== \"Detailing1313!\") {\r\n+        router.replace(\"/admin\");\r\n+      }\r\n+    }\r\n+  }, [router]);\r\n+\r\n+  // Calculate total revenue\r\n+  const totalRevenue = bookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n+\r\n+  // Add new booking\r\n+  // Calculate price\r\n+  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n+    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n+    // 1) Base price\r\n+    let base = service ? service.basePrice : 0;\r\n+    // Complete Interior Detail uses fixed base by car type\r\n+    if (serviceTitle === \"Complete Interior Detail\") {\r\n+      if (carTypeLabel === \"SUV\") base = 130;\r\n+      else if (carTypeLabel === \"Truck\") base = 140;\r\n+      else base = 110; // Sedan\r\n+    } else {\r\n+      // For other services, generic car type surcharge applies\r\n+      const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n+      if (carType) base += carType.price;\r\n+    }\r\n+\r\n+    // 2) Add-ons total according to service rules\r\n+    let addOnTotal = 0;\r\n+    if (service && service.hasAddOns && addOns.length) {\r\n+      let filteredAddOns = [];\r\n+      if (serviceTitle === \"Premium Exterior Wash\") {\r\n+        filteredAddOns = addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n+      } else if (serviceTitle === \"Complete Interior Detail\") {\r\n+        filteredAddOns = addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n+      } else if (serviceTitle === \"Ultimate Full Detail\") {\r\n+        filteredAddOns = addOns; // show all\r\n+      }\r\n+      addOnTotal = filteredAddOns.reduce((sum, a) => sum + a.price, 0);\r\n+      // Combo discount for Clay Bar + Iron Removal\r\n+      const clay = filteredAddOns.find(a => a.label === \"Clay Bar\");\r\n+      const iron = filteredAddOns.find(a => a.label === \"Iron Removal\");\r\n+      if (clay && iron) addOnTotal -= 5;\r\n+    }\r\n+\r\n+    return base + addOnTotal;\r\n+  };\r\n+\r\n+  // Add booking\r\n+  const handleAddBooking = (e) => {\r\n+    e.preventDefault();\r\n+    setBookings([\r\n+      ...bookings,\r\n+      {\r\n+        ...newBooking,\r\n+        id: bookings.length + 1,\r\n+        amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n+      }\r\n+    ]);\r\n+    setNewBooking({\r\n+      name: \"\",\r\n+      service: serviceOptions[0].title,\r\n+      date: \"\",\r\n+      time: \"\",\r\n+      amount: serviceOptions[0].basePrice,\r\n+      status: \"pending\",\r\n+      phone: \"\",\r\n+      email: \"\",\r\n+      location: \"\",\r\n+      addOns: [],\r\n+      carType: carTypeOptions[0].label,\r\n+    });\r\n+    setShowAdd(false);\r\n+  };\r\n+\r\n+  // Show booking details modal\r\n+  const handleShowDetail = (booking) => {\r\n+    setDetailBooking(booking);\r\n+    setShowDeleteConfirm(false);\r\n+    setShowDetail(true);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n+      <div className=\"max-w-5xl mx-auto\">\r\n+        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n+        {/* Revenue summary */}\r\n+        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n+          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n+            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n+            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n+            <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Pending</div>\r\n+            <div className=\"text-3xl font-bold text-yellow-600\">{bookings.filter(b => b.status === \"pending\").length}</div>\r\n+          </div>\r\n+        </div>\r\n+        {/* Booking list */}\r\n+        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n+          <div className=\"flex justify-between items-center mb-4\">\r\n+            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n+            <button\r\n+              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+              onClick={() => setShowAdd(true)}\r\n+            >\r\n+              Add Booking\r\n+            </button>\r\n+          </div>\r\n+          {/* Status Filter */}\r\n+          <div className=\"flex items-center gap-2 mb-4\">\r\n+            <span className=\"text-sm text-gray-600\">Filter:</span>\r\n+            {[\r\n+              { key: 'all', label: 'All' },\r\n+              { key: 'pending', label: 'Pending' },\r\n+              { key: 'complete', label: 'Complete' },\r\n+            ].map(opt => (\r\n+              <button\r\n+                key={opt.key}\r\n+                type=\"button\"\r\n+                onClick={() => setStatusFilter(opt.key)}\r\n+                className={`px-3 py-1 rounded-full text-sm border ${statusFilter === opt.key ? 'bg-blue-600 text-white border-blue-600' : 'bg-white text-blue-700 border-blue-200 hover:bg-blue-50'}`}\r\n+              >\r\n+                {opt.label}\r\n+              </button>\r\n+            ))}\r\n+          </div>\r\n+          <table className=\"w-full text-left border-collapse\">\r\n+            <thead>\r\n+              <tr style={{ background: '#f5f5f5' }}>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Time</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n+              </tr>\r\n+            </thead>\r\n+            <tbody>\r\n+              {[...bookings]\r\n+                .filter(b => statusFilter === 'all' ? true : b.status === statusFilter)\r\n+                .sort((a, b) => {\r\n+                  const aDT = new Date(`${a.date || '1970-01-01'}T${(a.time || '00:00')}:00`).getTime();\r\n+                  const bDT = new Date(`${b.date || '1970-01-01'}T${(b.time || '00:00')}:00`).getTime();\r\n+                  return bDT - aDT; // most recent first\r\n+                })\r\n+                .map(b => (\r\n+                <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleShowDetail(b)}>{b.name}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.service}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{formatDateShort(b.date)}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.time || \"--\"}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>${b.amount}</td>\r\n+                  <td className=\"py-2 px-3\">\r\n+                    <span className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}>{b.status}</span>\r\n+                  </td>\r\n+                </tr>\r\n+              ))}\r\n+            </tbody>\r\n+          </table>\r\n+        </div>\r\n+        {/* Booking details modal */}\r\n+        {showDetail && detailBooking && (\r\n+          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n+              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n+              <div className=\"space-y-3 text-gray-800\">\r\n+                <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n+                <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n+                {detailBooking.addOns && detailBooking.addOns.length > 0 && (\r\n+                  <div>\r\n+                    <span className=\"font-semibold\">Add-Ons:</span>\r\n+                    <ul className=\"list-disc ml-6 mt-1\">\r\n+                      {detailBooking.addOns.map((a, i) => (\r\n+                        <li key={i}>{a.label}</li>\r\n+                      ))}\r\n+                    </ul>\r\n+                  </div>\r\n+                )}\r\n+                <div><span className=\"font-semibold\">Date:</span> {formatDateShort(detailBooking.date)}</div>\r\n+                <div><span className=\"font-semibold\">Time:</span> {detailBooking.time || \"--\"}</div>\r\n+                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n+                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n+                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n+                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n+                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n+                \r\n+              </div>\r\n+              <div className=\"mt-8 flex gap-3\">\r\n+                {!showDeleteConfirm ? (\r\n+                  <>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-red-600 hover:bg-red-700 text-white font-semibold\"\r\n+                      onClick={() => setShowDeleteConfirm(true)}\r\n+                    >\r\n+                      Delete\r\n+                    </button>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+                      onClick={() => {\r\n+                        setShowDetail(false);\r\n+                        setShowDeleteConfirm(false);\r\n+                      }}\r\n+                    >\r\n+                      Close\r\n+                    </button>\r\n+                  </>\r\n+                ) : (\r\n+                  <>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\"\r\n+                      onClick={() => setShowDeleteConfirm(false)}\r\n+                    >\r\n+                      Cancel\r\n+                    </button>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-red-600 hover:bg-red-700 text-white font-semibold\"\r\n+                      onClick={() => {\r\n+                        setBookings(prev => prev.filter(b => b.id !== detailBooking.id));\r\n+                        setShowDeleteConfirm(false);\r\n+                        setShowDetail(false);\r\n+                        setDetailBooking(null);\r\n+                      }}\r\n+                    >\r\n+                      Confirm Delete\r\n+                    </button>\r\n+                  </>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+        {/* Add booking modal */}\r\n+        {showAdd && (\r\n+          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+            <div\r\n+              className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n+              style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n+            >\r\n+              {/* Close (X) button */}\r\n+              <button\r\n+                type=\"button\"\r\n+                aria-label=\"Close\"\r\n+                onClick={() => setShowAdd(false)}\r\n+                className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n+                style={{ background: 'none', border: 'none' }}\r\n+              >\r\n+                &times;\r\n+              </button>\r\n+              <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n+              <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n+                <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n+                  {/* Name */}\r\n+                  <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Service dropdown */}\r\n+                  <select required value={newBooking.service} onChange={e => {\r\n+                    const selectedService = e.target.value;\r\n+                    setNewBooking(nb => ({\r\n+                      ...nb,\r\n+                      service: selectedService,\r\n+                      addOns: [],\r\n+                      amount: calculatePrice(selectedService, [], nb.carType),\r\n+                    }));\r\n+                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+                    {serviceOptions.map(s => (\r\n+                      <option key={s.title} value={s.title}>{s.title}</option>\r\n+                    ))}\r\n+                  </select>\r\n+                  {/* Car type dropdown */}\r\n+                  <select required value={newBooking.carType} onChange={e => {\r\n+                    const carType = e.target.value;\r\n+                    setNewBooking(nb => ({\r\n+                      ...nb,\r\n+                      carType,\r\n+                      amount: calculatePrice(nb.service, nb.addOns, carType),\r\n+                    }));\r\n+                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+                    {carTypeOptions.map(c => (\r\n+                      <option key={c.label} value={c.label}>{c.label}</option>\r\n+                    ))}\r\n+                  </select>\r\n+                  {/* Add-ons (always show for Premium Exterior Wash, and for other services as per rules) */}\r\n+                  <div>\r\n+                    <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n+                    <div className=\"flex flex-wrap gap-3 mb-2\">\r\n+                      {(() => {\r\n+                        let validAddOns = [];\r\n+                        if (newBooking.service === \"Premium Exterior Wash\") {\r\n+                          validAddOns = addOnOptions.filter(opt => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(opt.label));\r\n+                        } else if (newBooking.service === \"Complete Interior Detail\") {\r\n+                          validAddOns = addOnOptions.filter(opt => opt.label === \"Pet Hair Removal\");\r\n+                        } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n+                          validAddOns = addOnOptions;\r\n+                        }\r\n+                        return validAddOns.map(opt => (\r\n+                          <button\r\n+                            key={opt.label}\r\n+                            type=\"button\"\r\n+                            onClick={() => {\r\n+                              setNewBooking(nb => {\r\n+                                const exists = nb.addOns.find(a => a.label === opt.label);\r\n+                                const updated = exists\r\n+                                  ? nb.addOns.filter(a => a.label !== opt.label)\r\n+                                  : [...nb.addOns, opt];\r\n+                                return {\r\n+                                  ...nb,\r\n+                                  addOns: updated,\r\n+                                  amount: calculatePrice(nb.service, updated, nb.carType),\r\n+                                };\r\n+                              });\r\n+                            }}\r\n+                            className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n+                          >\r\n+                            {opt.label}\r\n+                          </button>\r\n+                        ));\r\n+                      })()}\r\n+                    </div>\r\n+                    {/* Combo discount message */}\r\n+                    {(() => {\r\n+                      let validAddOns = [];\r\n+                      if (newBooking.service === \"Premium Exterior Wash\") {\r\n+                        validAddOns = newBooking.addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n+                      } else if (newBooking.service === \"Complete Interior Detail\") {\r\n+                        validAddOns = newBooking.addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n+                      } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n+                        validAddOns = newBooking.addOns;\r\n+                      }\r\n+                      return validAddOns.find(a => a.label === \"Clay Bar\") && validAddOns.find(a => a.label === \"Iron Removal\") ? (\r\n+                        <div className=\"text-xs text-blue-600 mt-2 font-semibold\">Combo discount applied (-$5)</div>\r\n+                      ) : null;\r\n+                    })()}\r\n+                  </div>\r\n+                  {/* Date */}\r\n+                  <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Time (enabled after selecting date) */}\r\n+                  <input\r\n+                    type=\"time\"\r\n+                    required\r\n+                    disabled={!newBooking.date}\r\n+                    value={newBooking.time}\r\n+                    onChange={e => setNewBooking({ ...newBooking, time: e.target.value })}\r\n+                    className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800 disabled:bg-gray-100\"\r\n+                  />\r\n+                  {/* Amount (auto-calculated, read-only) */}\r\n+                  <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n+                  {/* Phone (numbers only) */}\r\n+                  <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n+                    // Only allow numbers\r\n+                    const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n+                    setNewBooking({ ...newBooking, phone: val });\r\n+                  }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Email */}\r\n+                  <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Location autocomplete (Google Places API) */}\r\n+                  <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n+                    const val = e.target.value;\r\n+                    setNewBooking({ ...newBooking, location: val });\r\n+                    // Simple Google Places Autocomplete (client-side only)\r\n+                    if (window && val.length > 2) {\r\n+                      try {\r\n+                        const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n+                        const data = await resp.json();\r\n+                        setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n+                      } catch {}\r\n+                    } else {\r\n+                      setLocationSuggestions([]);\r\n+                    }\r\n+                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n+                  {/* Location suggestions dropdown */}\r\n+                  {locationSuggestions.length > 0 && (\r\n+                    <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n+                      {locationSuggestions.map((sug, i) => (\r\n+                        <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n+                          setNewBooking(nb => ({ ...nb, location: sug }));\r\n+                          setLocationSuggestions([]);\r\n+                        }}>{sug}</div>\r\n+                      ))}\r\n+                    </div>\r\n+                  )}\r\n+                  {/* Status dropdown */}\r\n+                  <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+                    <option value=\"pending\">Pending</option>\r\n+                    <option value=\"complete\">Complete</option>\r\n+                  </select>\r\n+                  <div className=\"flex gap-4 mt-4 pb-4\">\r\n+                    <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n+                    <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={() => setShowAdd(false)}>Cancel</button>\r\n+                  </div>\r\n+                </form>\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1760672461970,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,522 @@\n+import { useEffect, useState } from \"react\";\r\n+import { useRouter } from \"next/router\";\r\n+\r\n+// Mock booking data for demo\r\n+const initialBookings = [\r\n+  {\r\n+    id: 1,\r\n+    name: \"John Doe\",\r\n+    service: \"Complete Interior Detail\",\r\n+    date: \"2025-10-10\",\r\n+    time: \"14:30\",\r\n+    amount: 130,\r\n+    status: \"complete\",\r\n+    phone: \"902-555-1234\",\r\n+    email: \"john@example.com\",\r\n+    location: \"Halifax\",\r\n+    addOns: [{ label: \"Pet Hair Removal\", price: 20 }],\r\n+    carType: \"SUV\"\r\n+  },\r\n+  {\r\n+    id: 2,\r\n+    name: \"Jane Smith\",\r\n+    service: \"Premium Exterior Wash\",\r\n+    date: \"2025-10-12\",\r\n+    time: \"10:00\",\r\n+    amount: 50,\r\n+    status: \"pending\",\r\n+    phone: \"902-555-5678\",\r\n+    email: \"jane@example.com\",\r\n+    location: \"Dartmouth\",\r\n+    addOns: [\r\n+      { label: \"Clay Bar\", price: 20 },\r\n+      { label: \"Iron Removal\", price: 25 },\r\n+      { label: \"Ceramic Sealant\", price: 10 }\r\n+    ],\r\n+    carType: \"Sedan\"\r\n+  },\r\n+  {\r\n+    id: 3,\r\n+    name: \"Alex Lee\",\r\n+    service: \"Ultimate Full Detail\",\r\n+    date: \"2025-10-15\",\r\n+    time: \"09:15\",\r\n+    amount: 160,\r\n+    status: \"complete\",\r\n+    phone: \"902-555-9999\",\r\n+    email: \"alex@example.com\",\r\n+    location: \"Bedford\",\r\n+    addOns: [\r\n+      { label: \"Pet Hair Removal\", price: 20 },\r\n+      { label: \"Clay Bar\", price: 20 },\r\n+      { label: \"Iron Removal\", price: 25 }\r\n+    ],\r\n+    carType: \"Truck\"\r\n+  },\r\n+];\r\n+\r\n+export default function AdminDashboard() {\r\n+  const router = useRouter();\r\n+  const [bookings, setBookings] = useState(initialBookings);\r\n+  const [showAdd, setShowAdd] = useState(false);\r\n+  const [showDetail, setShowDetail] = useState(false);\r\n+  const [detailBooking, setDetailBooking] = useState(null);\r\n+  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n+  const [statusFilter, setStatusFilter] = useState(\"all\");\r\n+  // Service/add-on logic\r\n+  const serviceOptions = [\r\n+    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: true },\r\n+    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n+    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n+  ];\r\n+  const addOnOptions = [\r\n+    { label: \"Pet Hair Removal\", price: 20 },\r\n+    { label: \"Clay Bar\", price: 20 },\r\n+    { label: \"Iron Removal\", price: 25 },\r\n+    { label: \"Ceramic Sealant\", price: 10 },\r\n+  ];\r\n+  const carTypeOptions = [\r\n+    { label: \"Sedan\", price: 0 },\r\n+    { label: \"SUV\", price: 10 },\r\n+    { label: \"Truck\", price: 20 },\r\n+  ];\r\n+  // Booking state\r\n+  const [newBooking, setNewBooking] = useState({\r\n+    name: \"\",\r\n+    service: serviceOptions[0].title,\r\n+    date: \"\",\r\n+    time: \"\",\r\n+    amount: serviceOptions[0].basePrice,\r\n+    status: \"pending\",\r\n+    phone: \"\",\r\n+    email: \"\",\r\n+    location: \"\",\r\n+    addOns: [],\r\n+    carType: carTypeOptions[0].label,\r\n+  });\r\n+  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n+\r\n+  // Display date as \"oct-19\" while keeping year in stored value\r\n+  const formatDateShort = (dateStr) => {\r\n+    if (!dateStr) return \"\";\r\n+    const parts = dateStr.split(\"-\");\r\n+    if (parts.length !== 3) return dateStr;\r\n+    const y = parseInt(parts[0], 10);\r\n+    const m = parseInt(parts[1], 10);\r\n+    const d = parseInt(parts[2], 10);\r\n+    if (isNaN(y) || isNaN(m) || isNaN(d)) return dateStr;\r\n+    const months = [\"jan\",\"feb\",\"mar\",\"apr\",\"may\",\"jun\",\"jul\",\"aug\",\"sep\",\"oct\",\"nov\",\"dec\"];\r\n+    return `${months[m - 1]}-${d}`;\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    if (typeof window !== \"undefined\") {\r\n+      const saved = window.localStorage.getItem(\"adminAuth\");\r\n+      if (saved !== \"Detailing1313!\") {\r\n+        router.replace(\"/admin\");\r\n+      }\r\n+    }\r\n+  }, [router]);\r\n+\r\n+  // Calculate total revenue\r\n+  const totalRevenue = bookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n+\r\n+  // Add new booking\r\n+  // Calculate price\r\n+  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n+    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n+    // 1) Base price\r\n+    let base = service ? service.basePrice : 0;\r\n+    // Complete Interior Detail uses fixed base by car type\r\n+    if (serviceTitle === \"Complete Interior Detail\") {\r\n+      if (carTypeLabel === \"SUV\") base = 130;\r\n+      else if (carTypeLabel === \"Truck\") base = 140;\r\n+      else base = 110; // Sedan\r\n+    } else {\r\n+      // For other services, generic car type surcharge applies\r\n+      const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n+      if (carType) base += carType.price;\r\n+    }\r\n+\r\n+    // 2) Add-ons total according to service rules\r\n+    let addOnTotal = 0;\r\n+    if (service && service.hasAddOns && addOns.length) {\r\n+      let filteredAddOns = [];\r\n+      if (serviceTitle === \"Premium Exterior Wash\") {\r\n+        filteredAddOns = addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n+      } else if (serviceTitle === \"Complete Interior Detail\") {\r\n+        filteredAddOns = addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n+      } else if (serviceTitle === \"Ultimate Full Detail\") {\r\n+        filteredAddOns = addOns; // show all\r\n+      }\r\n+      addOnTotal = filteredAddOns.reduce((sum, a) => sum + a.price, 0);\r\n+      // Combo discount for Clay Bar + Iron Removal\r\n+      const clay = filteredAddOns.find(a => a.label === \"Clay Bar\");\r\n+      const iron = filteredAddOns.find(a => a.label === \"Iron Removal\");\r\n+      if (clay && iron) addOnTotal -= 5;\r\n+    }\r\n+\r\n+    return base + addOnTotal;\r\n+  };\r\n+\r\n+  // Add booking\r\n+  const handleAddBooking = (e) => {\r\n+    e.preventDefault();\r\n+    setBookings([\r\n+      ...bookings,\r\n+      {\r\n+        ...newBooking,\r\n+        id: bookings.length + 1,\r\n+        amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n+      }\r\n+    ]);\r\n+    setNewBooking({\r\n+      name: \"\",\r\n+      service: serviceOptions[0].title,\r\n+      date: \"\",\r\n+      time: \"\",\r\n+      amount: serviceOptions[0].basePrice,\r\n+      status: \"pending\",\r\n+      phone: \"\",\r\n+      email: \"\",\r\n+      location: \"\",\r\n+      addOns: [],\r\n+      carType: carTypeOptions[0].label,\r\n+    });\r\n+    setShowAdd(false);\r\n+  };\r\n+\r\n+  // Show booking details modal\r\n+  const handleShowDetail = (booking) => {\r\n+    setDetailBooking(booking);\r\n+    setShowDeleteConfirm(false);\r\n+    setShowDetail(true);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n+      <div className=\"max-w-5xl mx-auto\">\r\n+        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n+        {/* Revenue summary */}\r\n+        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n+          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n+            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n+            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n+            <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Pending</div>\r\n+            <div className=\"text-3xl font-bold text-yellow-600\">{bookings.filter(b => b.status === \"pending\").length}</div>\r\n+          </div>\r\n+        </div>\r\n+        {/* Booking list */}\r\n+        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n+          <div className=\"flex justify-between items-center mb-4\">\r\n+            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n+            <button\r\n+              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+              onClick={() => setShowAdd(true)}\r\n+            >\r\n+              Add Booking\r\n+            </button>\r\n+          </div>\r\n+          {/* Status Filter */}\r\n+          <div className=\"flex items-center gap-2 mb-4\">\r\n+            <span className=\"text-sm text-gray-600\">Filter:</span>\r\n+            {[\r\n+              { key: 'all', label: 'All' },\r\n+              { key: 'pending', label: 'Pending' },\r\n+              { key: 'complete', label: 'Complete' },\r\n+            ].map(opt => (\r\n+              <button\r\n+                key={opt.key}\r\n+                type=\"button\"\r\n+                onClick={() => setStatusFilter(opt.key)}\r\n+                className={`px-3 py-1 rounded-full text-sm border ${statusFilter === opt.key ? 'bg-blue-600 text-white border-blue-600' : 'bg-white text-blue-700 border-blue-200 hover:bg-blue-50'}`}\r\n+              >\r\n+                {opt.label}\r\n+              </button>\r\n+            ))}\r\n+          </div>\r\n+          <table className=\"w-full text-left border-collapse\">\r\n+            <thead>\r\n+              <tr style={{ background: '#f5f5f5' }}>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Time</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n+                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n+              </tr>\r\n+            </thead>\r\n+            <tbody>\r\n+              {[...bookings]\r\n+                .filter(b => statusFilter === 'all' ? true : b.status === statusFilter)\r\n+                .sort((a, b) => {\r\n+                  const aDT = new Date(`${a.date || '1970-01-01'}T${(a.time || '00:00')}:00`).getTime();\r\n+                  const bDT = new Date(`${b.date || '1970-01-01'}T${(b.time || '00:00')}:00`).getTime();\r\n+                  return bDT - aDT; // most recent first\r\n+                })\r\n+                .map(b => (\r\n+                <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleShowDetail(b)}>{b.name}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.service}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{formatDateShort(b.date)}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.time || \"--\"}</td>\r\n+                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>${b.amount}</td>\r\n+                  <td className=\"py-2 px-3\">\r\n+                    <span\r\n+                      aria-label={b.status}\r\n+                      className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}\r\n+                    >\r\n+                      <span className=\"sm:hidden\">\r\n+                        {b.status === 'complete' ? 'C' : b.status === 'pending' ? 'P' : (b.status?.[0]?.toUpperCase() || '')}\r\n+                      </span>\r\n+                      <span className=\"hidden sm:inline\">{b.status}</span>\r\n+                    </span>\r\n+                  </td>\r\n+                </tr>\r\n+              ))}\r\n+            </tbody>\r\n+          </table>\r\n+        </div>\r\n+        {/* Booking details modal */}\r\n+        {showDetail && detailBooking && (\r\n+          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n+              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n+              <div className=\"space-y-3 text-gray-800\">\r\n+                <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n+                <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n+                {detailBooking.addOns && detailBooking.addOns.length > 0 && (\r\n+                  <div>\r\n+                    <span className=\"font-semibold\">Add-Ons:</span>\r\n+                    <ul className=\"list-disc ml-6 mt-1\">\r\n+                      {detailBooking.addOns.map((a, i) => (\r\n+                        <li key={i}>{a.label}</li>\r\n+                      ))}\r\n+                    </ul>\r\n+                  </div>\r\n+                )}\r\n+                <div><span className=\"font-semibold\">Date:</span> {formatDateShort(detailBooking.date)}</div>\r\n+                <div><span className=\"font-semibold\">Time:</span> {detailBooking.time || \"--\"}</div>\r\n+                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n+                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n+                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n+                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n+                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n+                \r\n+              </div>\r\n+              <div className=\"mt-8 flex gap-3\">\r\n+                {!showDeleteConfirm ? (\r\n+                  <>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-red-600 hover:bg-red-700 text-white font-semibold\"\r\n+                      onClick={() => setShowDeleteConfirm(true)}\r\n+                    >\r\n+                      Delete\r\n+                    </button>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+                      onClick={() => {\r\n+                        setShowDetail(false);\r\n+                        setShowDeleteConfirm(false);\r\n+                      }}\r\n+                    >\r\n+                      Close\r\n+                    </button>\r\n+                  </>\r\n+                ) : (\r\n+                  <>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\"\r\n+                      onClick={() => setShowDeleteConfirm(false)}\r\n+                    >\r\n+                      Cancel\r\n+                    </button>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-red-600 hover:bg-red-700 text-white font-semibold\"\r\n+                      onClick={() => {\r\n+                        setBookings(prev => prev.filter(b => b.id !== detailBooking.id));\r\n+                        setShowDeleteConfirm(false);\r\n+                        setShowDetail(false);\r\n+                        setDetailBooking(null);\r\n+                      }}\r\n+                    >\r\n+                      Confirm Delete\r\n+                    </button>\r\n+                  </>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+        {/* Add booking modal */}\r\n+        {showAdd && (\r\n+          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+            <div\r\n+              className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n+              style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n+            >\r\n+              {/* Close (X) button */}\r\n+              <button\r\n+                type=\"button\"\r\n+                aria-label=\"Close\"\r\n+                onClick={() => setShowAdd(false)}\r\n+                className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n+                style={{ background: 'none', border: 'none' }}\r\n+              >\r\n+                &times;\r\n+              </button>\r\n+              <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n+              <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n+                <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n+                  {/* Name */}\r\n+                  <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Service dropdown */}\r\n+                  <select required value={newBooking.service} onChange={e => {\r\n+                    const selectedService = e.target.value;\r\n+                    setNewBooking(nb => ({\r\n+                      ...nb,\r\n+                      service: selectedService,\r\n+                      addOns: [],\r\n+                      amount: calculatePrice(selectedService, [], nb.carType),\r\n+                    }));\r\n+                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+                    {serviceOptions.map(s => (\r\n+                      <option key={s.title} value={s.title}>{s.title}</option>\r\n+                    ))}\r\n+                  </select>\r\n+                  {/* Car type dropdown */}\r\n+                  <select required value={newBooking.carType} onChange={e => {\r\n+                    const carType = e.target.value;\r\n+                    setNewBooking(nb => ({\r\n+                      ...nb,\r\n+                      carType,\r\n+                      amount: calculatePrice(nb.service, nb.addOns, carType),\r\n+                    }));\r\n+                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+                    {carTypeOptions.map(c => (\r\n+                      <option key={c.label} value={c.label}>{c.label}</option>\r\n+                    ))}\r\n+                  </select>\r\n+                  {/* Add-ons (always show for Premium Exterior Wash, and for other services as per rules) */}\r\n+                  <div>\r\n+                    <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n+                    <div className=\"flex flex-wrap gap-3 mb-2\">\r\n+                      {(() => {\r\n+                        let validAddOns = [];\r\n+                        if (newBooking.service === \"Premium Exterior Wash\") {\r\n+                          validAddOns = addOnOptions.filter(opt => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(opt.label));\r\n+                        } else if (newBooking.service === \"Complete Interior Detail\") {\r\n+                          validAddOns = addOnOptions.filter(opt => opt.label === \"Pet Hair Removal\");\r\n+                        } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n+                          validAddOns = addOnOptions;\r\n+                        }\r\n+                        return validAddOns.map(opt => (\r\n+                          <button\r\n+                            key={opt.label}\r\n+                            type=\"button\"\r\n+                            onClick={() => {\r\n+                              setNewBooking(nb => {\r\n+                                const exists = nb.addOns.find(a => a.label === opt.label);\r\n+                                const updated = exists\r\n+                                  ? nb.addOns.filter(a => a.label !== opt.label)\r\n+                                  : [...nb.addOns, opt];\r\n+                                return {\r\n+                                  ...nb,\r\n+                                  addOns: updated,\r\n+                                  amount: calculatePrice(nb.service, updated, nb.carType),\r\n+                                };\r\n+                              });\r\n+                            }}\r\n+                            className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n+                          >\r\n+                            {opt.label}\r\n+                          </button>\r\n+                        ));\r\n+                      })()}\r\n+                    </div>\r\n+                    {/* Combo discount message */}\r\n+                    {(() => {\r\n+                      let validAddOns = [];\r\n+                      if (newBooking.service === \"Premium Exterior Wash\") {\r\n+                        validAddOns = newBooking.addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n+                      } else if (newBooking.service === \"Complete Interior Detail\") {\r\n+                        validAddOns = newBooking.addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n+                      } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n+                        validAddOns = newBooking.addOns;\r\n+                      }\r\n+                      return validAddOns.find(a => a.label === \"Clay Bar\") && validAddOns.find(a => a.label === \"Iron Removal\") ? (\r\n+                        <div className=\"text-xs text-blue-600 mt-2 font-semibold\">Combo discount applied (-$5)</div>\r\n+                      ) : null;\r\n+                    })()}\r\n+                  </div>\r\n+                  {/* Date */}\r\n+                  <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Time (enabled after selecting date) */}\r\n+                  <input\r\n+                    type=\"time\"\r\n+                    required\r\n+                    disabled={!newBooking.date}\r\n+                    value={newBooking.time}\r\n+                    onChange={e => setNewBooking({ ...newBooking, time: e.target.value })}\r\n+                    className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800 disabled:bg-gray-100\"\r\n+                  />\r\n+                  {/* Amount (auto-calculated, read-only) */}\r\n+                  <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n+                  {/* Phone (numbers only) */}\r\n+                  <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n+                    // Only allow numbers\r\n+                    const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n+                    setNewBooking({ ...newBooking, phone: val });\r\n+                  }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Email */}\r\n+                  <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+                  {/* Location autocomplete (Google Places API) */}\r\n+                  <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n+                    const val = e.target.value;\r\n+                    setNewBooking({ ...newBooking, location: val });\r\n+                    // Simple Google Places Autocomplete (client-side only)\r\n+                    if (window && val.length > 2) {\r\n+                      try {\r\n+                        const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n+                        const data = await resp.json();\r\n+                        setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n+                      } catch {}\r\n+                    } else {\r\n+                      setLocationSuggestions([]);\r\n+                    }\r\n+                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n+                  {/* Location suggestions dropdown */}\r\n+                  {locationSuggestions.length > 0 && (\r\n+                    <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n+                      {locationSuggestions.map((sug, i) => (\r\n+                        <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n+                          setNewBooking(nb => ({ ...nb, location: sug }));\r\n+                          setLocationSuggestions([]);\r\n+                        }}>{sug}</div>\r\n+                      ))}\r\n+                    </div>\r\n+                  )}\r\n+                  {/* Status dropdown */}\r\n+                  <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+                    <option value=\"pending\">Pending</option>\r\n+                    <option value=\"complete\">Complete</option>\r\n+                  </select>\r\n+                  <div className=\"flex gap-4 mt-4 pb-4\">\r\n+                    <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n+                    <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={() => setShowAdd(false)}>Cancel</button>\r\n+                  </div>\r\n+                </form>\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1760672657945,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -240,17 +240,18 @@\n                 {opt.label}\r\n               </button>\r\n             ))}\r\n           </div>\r\n-          <table className=\"w-full text-left border-collapse\">\r\n+          <div className=\"overflow-x-auto\">\r\n+          <table className=\"w-full text-left border-collapse min-w-[640px] text-xs sm:text-sm\">\r\n             <thead>\r\n               <tr style={{ background: '#f5f5f5' }}>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Time</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n+                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n+                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n+                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n+                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n+                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Time</th>\r\n+                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n               </tr>\r\n             </thead>\r\n             <tbody>\r\n               {[...bookings]\r\n@@ -261,14 +262,9 @@\n                   return bDT - aDT; // most recent first\r\n                 })\r\n                 .map(b => (\r\n                 <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleShowDetail(b)}>{b.name}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.service}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{formatDateShort(b.date)}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.time || \"--\"}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>${b.amount}</td>\r\n-                  <td className=\"py-2 px-3\">\r\n+                  <td className=\"py-2 px-2 sm:px-3\">\r\n                     <span\r\n                       aria-label={b.status}\r\n                       className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}\r\n                     >\r\n@@ -277,527 +273,19 @@\n                       </span>\r\n                       <span className=\"hidden sm:inline\">{b.status}</span>\r\n                     </span>\r\n                   </td>\r\n+                  <td className=\"py-2 px-2 sm:px-3 max-w-[140px] sm:max-w-none truncate\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleShowDetail(b)}>{b.name}</td>\r\n+                  <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{b.service}</td>\r\n+                  <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{formatDateShort(b.date)}</td>\r\n+                  <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{b.time || \"--\"}</td>\r\n+                  <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>${b.amount}</td>\r\n                 </tr>\r\n               ))}\r\n             </tbody>\r\n           </table>\r\n-        </div>\r\n-        {/* Booking details modal */}\r\n-        {showDetail && detailBooking && (\r\n-          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n-              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n-              <div className=\"space-y-3 text-gray-800\">\r\n-                <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n-                <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n-                {detailBooking.addOns && detailBooking.addOns.length > 0 && (\r\n-                  <div>\r\n-                    <span className=\"font-semibold\">Add-Ons:</span>\r\n-                    <ul className=\"list-disc ml-6 mt-1\">\r\n-                      {detailBooking.addOns.map((a, i) => (\r\n-                        <li key={i}>{a.label}</li>\r\n-                      ))}\r\n-                    </ul>\r\n-                  </div>\r\n-                )}\r\n-                <div><span className=\"font-semibold\">Date:</span> {formatDateShort(detailBooking.date)}</div>\r\n-                <div><span className=\"font-semibold\">Time:</span> {detailBooking.time || \"--\"}</div>\r\n-                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n-                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n-                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n-                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n-                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n-                \r\n-              </div>\r\n-              <div className=\"mt-8 flex gap-3\">\r\n-                {!showDeleteConfirm ? (\r\n-                  <>\r\n-                    <button\r\n-                      className=\"w-1/2 py-3 rounded-lg bg-red-600 hover:bg-red-700 text-white font-semibold\"\r\n-                      onClick={() => setShowDeleteConfirm(true)}\r\n-                    >\r\n-                      Delete\r\n-                    </button>\r\n-                    <button\r\n-                      className=\"w-1/2 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-                      onClick={() => {\r\n-                        setShowDetail(false);\r\n-                        setShowDeleteConfirm(false);\r\n-                      }}\r\n-                    >\r\n-                      Close\r\n-                    </button>\r\n-                  </>\r\n-                ) : (\r\n-                  <>\r\n-                    <button\r\n-                      className=\"w-1/2 py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\"\r\n-                      onClick={() => setShowDeleteConfirm(false)}\r\n-                    >\r\n-                      Cancel\r\n-                    </button>\r\n-                    <button\r\n-                      className=\"w-1/2 py-3 rounded-lg bg-red-600 hover:bg-red-700 text-white font-semibold\"\r\n-                      onClick={() => {\r\n-                        setBookings(prev => prev.filter(b => b.id !== detailBooking.id));\r\n-                        setShowDeleteConfirm(false);\r\n-                        setShowDetail(false);\r\n-                        setDetailBooking(null);\r\n-                      }}\r\n-                    >\r\n-                      Confirm Delete\r\n-                    </button>\r\n-                  </>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n           </div>\r\n-        )}\r\n-        {/* Add booking modal */}\r\n-        {showAdd && (\r\n-          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-            <div\r\n-              className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n-              style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n-            >\r\n-              {/* Close (X) button */}\r\n-              <button\r\n-                type=\"button\"\r\n-                aria-label=\"Close\"\r\n-                onClick={() => setShowAdd(false)}\r\n-                className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n-                style={{ background: 'none', border: 'none' }}\r\n-              >\r\n-                &times;\r\n-              </button>\r\n-              <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n-              <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n-                <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n-                  {/* Name */}\r\n-                  <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Service dropdown */}\r\n-                  <select required value={newBooking.service} onChange={e => {\r\n-                    const selectedService = e.target.value;\r\n-                    setNewBooking(nb => ({\r\n-                      ...nb,\r\n-                      service: selectedService,\r\n-                      addOns: [],\r\n-                      amount: calculatePrice(selectedService, [], nb.carType),\r\n-                    }));\r\n-                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-                    {serviceOptions.map(s => (\r\n-                      <option key={s.title} value={s.title}>{s.title}</option>\r\n-                    ))}\r\n-                  </select>\r\n-                  {/* Car type dropdown */}\r\n-                  <select required value={newBooking.carType} onChange={e => {\r\n-                    const carType = e.target.value;\r\n-                    setNewBooking(nb => ({\r\n-                      ...nb,\r\n-                      carType,\r\n-                      amount: calculatePrice(nb.service, nb.addOns, carType),\r\n-                    }));\r\n-                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-                    {carTypeOptions.map(c => (\r\n-                      <option key={c.label} value={c.label}>{c.label}</option>\r\n-                    ))}\r\n-                  </select>\r\n-                  {/* Add-ons (always show for Premium Exterior Wash, and for other services as per rules) */}\r\n-                  <div>\r\n-                    <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n-                    <div className=\"flex flex-wrap gap-3 mb-2\">\r\n-                      {(() => {\r\n-                        let validAddOns = [];\r\n-                        if (newBooking.service === \"Premium Exterior Wash\") {\r\n-                          validAddOns = addOnOptions.filter(opt => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(opt.label));\r\n-                        } else if (newBooking.service === \"Complete Interior Detail\") {\r\n-                          validAddOns = addOnOptions.filter(opt => opt.label === \"Pet Hair Removal\");\r\n-                        } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n-                          validAddOns = addOnOptions;\r\n-                        }\r\n-                        return validAddOns.map(opt => (\r\n-                          <button\r\n-                            key={opt.label}\r\n-                            type=\"button\"\r\n-                            onClick={() => {\r\n-                              setNewBooking(nb => {\r\n-                                const exists = nb.addOns.find(a => a.label === opt.label);\r\n-                                const updated = exists\r\n-                                  ? nb.addOns.filter(a => a.label !== opt.label)\r\n-                                  : [...nb.addOns, opt];\r\n-                                return {\r\n-                                  ...nb,\r\n-                                  addOns: updated,\r\n-                                  amount: calculatePrice(nb.service, updated, nb.carType),\r\n-                                };\r\n-                              });\r\n-                            }}\r\n-                            className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n-                          >\r\n-                            {opt.label}\r\n-                          </button>\r\n-                        ));\r\n-                      })()}\r\n-                    </div>\r\n-                    {/* Combo discount message */}\r\n-                    {(() => {\r\n-                      let validAddOns = [];\r\n-                      if (newBooking.service === \"Premium Exterior Wash\") {\r\n-                        validAddOns = newBooking.addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n-                      } else if (newBooking.service === \"Complete Interior Detail\") {\r\n-                        validAddOns = newBooking.addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n-                      } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n-                        validAddOns = newBooking.addOns;\r\n-                      }\r\n-                      return validAddOns.find(a => a.label === \"Clay Bar\") && validAddOns.find(a => a.label === \"Iron Removal\") ? (\r\n-                        <div className=\"text-xs text-blue-600 mt-2 font-semibold\">Combo discount applied (-$5)</div>\r\n-                      ) : null;\r\n-                    })()}\r\n-                  </div>\r\n-                  {/* Date */}\r\n-                  <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Time (enabled after selecting date) */}\r\n-                  <input\r\n-                    type=\"time\"\r\n-                    required\r\n-                    disabled={!newBooking.date}\r\n-                    value={newBooking.time}\r\n-                    onChange={e => setNewBooking({ ...newBooking, time: e.target.value })}\r\n-                    className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800 disabled:bg-gray-100\"\r\n-                  />\r\n-                  {/* Amount (auto-calculated, read-only) */}\r\n-                  <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n-                  {/* Phone (numbers only) */}\r\n-                  <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n-                    // Only allow numbers\r\n-                    const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n-                    setNewBooking({ ...newBooking, phone: val });\r\n-                  }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Email */}\r\n-                  <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Location autocomplete (Google Places API) */}\r\n-                  <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n-                    const val = e.target.value;\r\n-                    setNewBooking({ ...newBooking, location: val });\r\n-                    // Simple Google Places Autocomplete (client-side only)\r\n-                    if (window && val.length > 2) {\r\n-                      try {\r\n-                        const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n-                        const data = await resp.json();\r\n-                        setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n-                      } catch {}\r\n-                    } else {\r\n-                      setLocationSuggestions([]);\r\n-                    }\r\n-                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n-                  {/* Location suggestions dropdown */}\r\n-                  {locationSuggestions.length > 0 && (\r\n-                    <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n-                      {locationSuggestions.map((sug, i) => (\r\n-                        <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n-                          setNewBooking(nb => ({ ...nb, location: sug }));\r\n-                          setLocationSuggestions([]);\r\n-                        }}>{sug}</div>\r\n-                      ))}\r\n-                    </div>\r\n-                  )}\r\n-                  {/* Status dropdown */}\r\n-                  <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-                    <option value=\"pending\">Pending</option>\r\n-                    <option value=\"complete\">Complete</option>\r\n-                  </select>\r\n-                  <div className=\"flex gap-4 mt-4 pb-4\">\r\n-                    <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n-                    <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={() => setShowAdd(false)}>Cancel</button>\r\n-                  </div>\r\n-                </form>\r\n-              </div>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import { useEffect, useState } from \"react\";\r\n-import { useRouter } from \"next/router\";\r\n-\r\n-// Mock booking data for demo\r\n-const initialBookings = [\r\n-  {\r\n-    id: 1,\r\n-    name: \"John Doe\",\r\n-    service: \"Complete Interior Detail\",\r\n-    date: \"2025-10-10\",\r\n-    time: \"14:30\",\r\n-    amount: 130,\r\n-    status: \"complete\",\r\n-    phone: \"902-555-1234\",\r\n-    email: \"john@example.com\",\r\n-    location: \"Halifax\",\r\n-    addOns: [{ label: \"Pet Hair Removal\", price: 20 }],\r\n-    carType: \"SUV\"\r\n-  },\r\n-  {\r\n-    id: 2,\r\n-    name: \"Jane Smith\",\r\n-    service: \"Premium Exterior Wash\",\r\n-    date: \"2025-10-12\",\r\n-    time: \"10:00\",\r\n-    amount: 50,\r\n-    status: \"pending\",\r\n-    phone: \"902-555-5678\",\r\n-    email: \"jane@example.com\",\r\n-    location: \"Dartmouth\",\r\n-    addOns: [\r\n-      { label: \"Clay Bar\", price: 20 },\r\n-      { label: \"Iron Removal\", price: 25 },\r\n-      { label: \"Ceramic Sealant\", price: 10 }\r\n-    ],\r\n-    carType: \"Sedan\"\r\n-  },\r\n-  {\r\n-    id: 3,\r\n-    name: \"Alex Lee\",\r\n-    service: \"Ultimate Full Detail\",\r\n-    date: \"2025-10-15\",\r\n-    time: \"09:15\",\r\n-    amount: 160,\r\n-    status: \"complete\",\r\n-    phone: \"902-555-9999\",\r\n-    email: \"alex@example.com\",\r\n-    location: \"Bedford\",\r\n-    addOns: [\r\n-      { label: \"Pet Hair Removal\", price: 20 },\r\n-      { label: \"Clay Bar\", price: 20 },\r\n-      { label: \"Iron Removal\", price: 25 }\r\n-    ],\r\n-    carType: \"Truck\"\r\n-  },\r\n-];\r\n-\r\n-export default function AdminDashboard() {\r\n-  const router = useRouter();\r\n-  const [bookings, setBookings] = useState(initialBookings);\r\n-  const [showAdd, setShowAdd] = useState(false);\r\n-  const [showDetail, setShowDetail] = useState(false);\r\n-  const [detailBooking, setDetailBooking] = useState(null);\r\n-  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n-  const [statusFilter, setStatusFilter] = useState(\"all\");\r\n-  // Service/add-on logic\r\n-  const serviceOptions = [\r\n-    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: true },\r\n-    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n-    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n-  ];\r\n-  const addOnOptions = [\r\n-    { label: \"Pet Hair Removal\", price: 20 },\r\n-    { label: \"Clay Bar\", price: 20 },\r\n-    { label: \"Iron Removal\", price: 25 },\r\n-    { label: \"Ceramic Sealant\", price: 10 },\r\n-  ];\r\n-  const carTypeOptions = [\r\n-    { label: \"Sedan\", price: 0 },\r\n-    { label: \"SUV\", price: 10 },\r\n-    { label: \"Truck\", price: 20 },\r\n-  ];\r\n-  // Booking state\r\n-  const [newBooking, setNewBooking] = useState({\r\n-    name: \"\",\r\n-    service: serviceOptions[0].title,\r\n-    date: \"\",\r\n-    time: \"\",\r\n-    amount: serviceOptions[0].basePrice,\r\n-    status: \"pending\",\r\n-    phone: \"\",\r\n-    email: \"\",\r\n-    location: \"\",\r\n-    addOns: [],\r\n-    carType: carTypeOptions[0].label,\r\n-  });\r\n-  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n-\r\n-  // Display date as \"oct-19\" while keeping year in stored value\r\n-  const formatDateShort = (dateStr) => {\r\n-    if (!dateStr) return \"\";\r\n-    const parts = dateStr.split(\"-\");\r\n-    if (parts.length !== 3) return dateStr;\r\n-    const y = parseInt(parts[0], 10);\r\n-    const m = parseInt(parts[1], 10);\r\n-    const d = parseInt(parts[2], 10);\r\n-    if (isNaN(y) || isNaN(m) || isNaN(d)) return dateStr;\r\n-    const months = [\"jan\",\"feb\",\"mar\",\"apr\",\"may\",\"jun\",\"jul\",\"aug\",\"sep\",\"oct\",\"nov\",\"dec\"];\r\n-    return `${months[m - 1]}-${d}`;\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    if (typeof window !== \"undefined\") {\r\n-      const saved = window.localStorage.getItem(\"adminAuth\");\r\n-      if (saved !== \"Detailing1313!\") {\r\n-        router.replace(\"/admin\");\r\n-      }\r\n-    }\r\n-  }, [router]);\r\n-\r\n-  // Calculate total revenue\r\n-  const totalRevenue = bookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n-\r\n-  // Add new booking\r\n-  // Calculate price\r\n-  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n-    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n-    // 1) Base price\r\n-    let base = service ? service.basePrice : 0;\r\n-    // Complete Interior Detail uses fixed base by car type\r\n-    if (serviceTitle === \"Complete Interior Detail\") {\r\n-      if (carTypeLabel === \"SUV\") base = 130;\r\n-      else if (carTypeLabel === \"Truck\") base = 140;\r\n-      else base = 110; // Sedan\r\n-    } else {\r\n-      // For other services, generic car type surcharge applies\r\n-      const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n-      if (carType) base += carType.price;\r\n-    }\r\n-\r\n-    // 2) Add-ons total according to service rules\r\n-    let addOnTotal = 0;\r\n-    if (service && service.hasAddOns && addOns.length) {\r\n-      let filteredAddOns = [];\r\n-      if (serviceTitle === \"Premium Exterior Wash\") {\r\n-        filteredAddOns = addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n-      } else if (serviceTitle === \"Complete Interior Detail\") {\r\n-        filteredAddOns = addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n-      } else if (serviceTitle === \"Ultimate Full Detail\") {\r\n-        filteredAddOns = addOns; // show all\r\n-      }\r\n-      addOnTotal = filteredAddOns.reduce((sum, a) => sum + a.price, 0);\r\n-      // Combo discount for Clay Bar + Iron Removal\r\n-      const clay = filteredAddOns.find(a => a.label === \"Clay Bar\");\r\n-      const iron = filteredAddOns.find(a => a.label === \"Iron Removal\");\r\n-      if (clay && iron) addOnTotal -= 5;\r\n-    }\r\n-\r\n-    return base + addOnTotal;\r\n-  };\r\n-\r\n-  // Add booking\r\n-  const handleAddBooking = (e) => {\r\n-    e.preventDefault();\r\n-    setBookings([\r\n-      ...bookings,\r\n-      {\r\n-        ...newBooking,\r\n-        id: bookings.length + 1,\r\n-        amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n-      }\r\n-    ]);\r\n-    setNewBooking({\r\n-      name: \"\",\r\n-      service: serviceOptions[0].title,\r\n-      date: \"\",\r\n-      time: \"\",\r\n-      amount: serviceOptions[0].basePrice,\r\n-      status: \"pending\",\r\n-      phone: \"\",\r\n-      email: \"\",\r\n-      location: \"\",\r\n-      addOns: [],\r\n-      carType: carTypeOptions[0].label,\r\n-    });\r\n-    setShowAdd(false);\r\n-  };\r\n-\r\n-  // Show booking details modal\r\n-  const handleShowDetail = (booking) => {\r\n-    setDetailBooking(booking);\r\n-    setShowDeleteConfirm(false);\r\n-    setShowDetail(true);\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n-      <div className=\"max-w-5xl mx-auto\">\r\n-        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n-        {/* Revenue summary */}\r\n-        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n-          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n-            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n-            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n-          </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n-            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n-            <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n-          </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n-            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Pending</div>\r\n-            <div className=\"text-3xl font-bold text-yellow-600\">{bookings.filter(b => b.status === \"pending\").length}</div>\r\n-          </div>\r\n         </div>\r\n-        {/* Booking list */}\r\n-        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n-          <div className=\"flex justify-between items-center mb-4\">\r\n-            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n-            <button\r\n-              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-              onClick={() => setShowAdd(true)}\r\n-            >\r\n-              Add Booking\r\n-            </button>\r\n-          </div>\r\n-          {/* Status Filter */}\r\n-          <div className=\"flex items-center gap-2 mb-4\">\r\n-            <span className=\"text-sm text-gray-600\">Filter:</span>\r\n-            {[\r\n-              { key: 'all', label: 'All' },\r\n-              { key: 'pending', label: 'Pending' },\r\n-              { key: 'complete', label: 'Complete' },\r\n-            ].map(opt => (\r\n-              <button\r\n-                key={opt.key}\r\n-                type=\"button\"\r\n-                onClick={() => setStatusFilter(opt.key)}\r\n-                className={`px-3 py-1 rounded-full text-sm border ${statusFilter === opt.key ? 'bg-blue-600 text-white border-blue-600' : 'bg-white text-blue-700 border-blue-200 hover:bg-blue-50'}`}\r\n-              >\r\n-                {opt.label}\r\n-              </button>\r\n-            ))}\r\n-          </div>\r\n-          <table className=\"w-full text-left border-collapse\">\r\n-            <thead>\r\n-              <tr style={{ background: '#f5f5f5' }}>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Time</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n-              </tr>\r\n-            </thead>\r\n-            <tbody>\r\n-              {[...bookings]\r\n-                .filter(b => statusFilter === 'all' ? true : b.status === statusFilter)\r\n-                .sort((a, b) => {\r\n-                  const aDT = new Date(`${a.date || '1970-01-01'}T${(a.time || '00:00')}:00`).getTime();\r\n-                  const bDT = new Date(`${b.date || '1970-01-01'}T${(b.time || '00:00')}:00`).getTime();\r\n-                  return bDT - aDT; // most recent first\r\n-                })\r\n-                .map(b => (\r\n-                <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleShowDetail(b)}>{b.name}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.service}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{formatDateShort(b.date)}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.time || \"--\"}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>${b.amount}</td>\r\n-                  <td className=\"py-2 px-3\">\r\n-                    <span className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}>{b.status}</span>\r\n-                  </td>\r\n-                </tr>\r\n-              ))}\r\n-            </tbody>\r\n-          </table>\r\n-        </div>\r\n         {/* Booking details modal */}\r\n         {showDetail && detailBooking && (\r\n           <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n             <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n@@ -1033,833 +521,4 @@\n       </div>\r\n     </div>\r\n   );\r\n }\r\n-import { useEffect, useState } from \"react\";\r\n-import { useRouter } from \"next/router\";\r\n-\r\n-// Mock booking data for demo\r\n-const initialBookings = [\r\n-  {\r\n-    id: 1,\r\n-    name: \"John Doe\",\r\n-    service: \"Complete Interior Detail\",\r\n-    date: \"2025-10-10\",\r\n-    amount: 130,\r\n-    status: \"complete\",\r\n-    phone: \"902-555-1234\",\r\n-    email: \"john@example.com\",\r\n-    location: \"Halifax\",\r\n-    addOns: [{ label: \"Pet Hair Removal\", price: 20 }],\r\n-    carType: \"SUV\"\r\n-  },\r\n-  {\r\n-    id: 2,\r\n-    name: \"Jane Smith\",\r\n-    service: \"Premium Exterior Wash\",\r\n-    date: \"2025-10-12\",\r\n-    amount: 50,\r\n-    status: \"pending\",\r\n-    phone: \"902-555-5678\",\r\n-    email: \"jane@example.com\",\r\n-    location: \"Dartmouth\",\r\n-    addOns: [\r\n-      { label: \"Clay Bar\", price: 20 },\r\n-      { label: \"Iron Removal\", price: 25 },\r\n-      { label: \"Ceramic Sealant\", price: 10 }\r\n-    ],\r\n-    carType: \"Sedan\"\r\n-  },\r\n-  {\r\n-    id: 3,\r\n-    name: \"Alex Lee\",\r\n-    service: \"Ultimate Full Detail\",\r\n-    date: \"2025-10-15\",\r\n-    amount: 160,\r\n-    status: \"complete\",\r\n-    phone: \"902-555-9999\",\r\n-    email: \"alex@example.com\",\r\n-    location: \"Bedford\",\r\n-    addOns: [\r\n-      { label: \"Pet Hair Removal\", price: 20 },\r\n-      { label: \"Clay Bar\", price: 20 },\r\n-      { label: \"Iron Removal\", price: 25 }\r\n-    ],\r\n-    carType: \"Truck\"\r\n-  },\r\n-];\r\n-\r\n-export default function AdminDashboard() {\r\n-  const router = useRouter();\r\n-  const [bookings, setBookings] = useState(initialBookings);\r\n-  const [showAdd, setShowAdd] = useState(false);\r\n-  const [showDetail, setShowDetail] = useState(false);\r\n-  const [detailBooking, setDetailBooking] = useState(null);\r\n-  // Service/add-on logic\r\n-  const serviceOptions = [\r\n-    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: true },\r\n-    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n-    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n-  ];\r\n-  const addOnOptions = [\r\n-    { label: \"Pet Hair Removal\", price: 20 },\r\n-    { label: \"Clay Bar\", price: 20 },\r\n-    { label: \"Iron Removal\", price: 25 },\r\n-    { label: \"Ceramic Sealant\", price: 10 },\r\n-  ];\r\n-  const carTypeOptions = [\r\n-    { label: \"Sedan\", price: 0 },\r\n-    { label: \"SUV\", price: 10 },\r\n-    { label: \"Truck\", price: 20 },\r\n-  ];\r\n-  // Booking state\r\n-  const [newBooking, setNewBooking] = useState({\r\n-    name: \"\",\r\n-    service: serviceOptions[0].title,\r\n-    date: \"\",\r\n-    amount: serviceOptions[0].basePrice,\r\n-    status: \"pending\",\r\n-    phone: \"\",\r\n-    email: \"\",\r\n-    location: \"\",\r\n-    addOns: [],\r\n-    carType: carTypeOptions[0].label,\r\n-  });\r\n-  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n-\r\n-  useEffect(() => {\r\n-    if (typeof window !== \"undefined\") {\r\n-      const saved = window.localStorage.getItem(\"adminAuth\");\r\n-      if (saved !== \"Detailing1313!\") {\r\n-        router.replace(\"/admin\");\r\n-      }\r\n-    }\r\n-  }, [router]);\r\n-\r\n-  // Calculate total revenue\r\n-  const totalRevenue = bookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n-\r\n-  // Add new booking\r\n-  // Calculate price\r\n-  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n-    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n-    // 1) Base price\r\n-    let base = service ? service.basePrice : 0;\r\n-    // Complete Interior Detail uses fixed base by car type\r\n-    if (serviceTitle === \"Complete Interior Detail\") {\r\n-      if (carTypeLabel === \"SUV\") base = 130;\r\n-      else if (carTypeLabel === \"Truck\") base = 140;\r\n-      else base = 110; // Sedan\r\n-    } else {\r\n-      // For other services, generic car type surcharge applies\r\n-      const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n-      if (carType) base += carType.price;\r\n-    }\r\n-\r\n-    // 2) Add-ons total according to service rules\r\n-    let addOnTotal = 0;\r\n-    if (service && service.hasAddOns && addOns.length) {\r\n-      let filteredAddOns = [];\r\n-      if (serviceTitle === \"Premium Exterior Wash\") {\r\n-        filteredAddOns = addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n-      } else if (serviceTitle === \"Complete Interior Detail\") {\r\n-        filteredAddOns = addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n-      } else if (serviceTitle === \"Ultimate Full Detail\") {\r\n-        filteredAddOns = addOns; // show all\r\n-      }\r\n-      addOnTotal = filteredAddOns.reduce((sum, a) => sum + a.price, 0);\r\n-      // Combo discount for Clay Bar + Iron Removal\r\n-      const clay = filteredAddOns.find(a => a.label === \"Clay Bar\");\r\n-      const iron = filteredAddOns.find(a => a.label === \"Iron Removal\");\r\n-      if (clay && iron) addOnTotal -= 5;\r\n-    }\r\n-\r\n-    return base + addOnTotal;\r\n-  };\r\n-\r\n-  // Add booking\r\n-  const handleAddBooking = (e) => {\r\n-    e.preventDefault();\r\n-    setBookings([\r\n-      ...bookings,\r\n-      {\r\n-        ...newBooking,\r\n-        id: bookings.length + 1,\r\n-        amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n-      }\r\n-    ]);\r\n-    setNewBooking({\r\n-      name: \"\",\r\n-      service: serviceOptions[0].title,\r\n-      date: \"\",\r\n-      amount: serviceOptions[0].basePrice,\r\n-      status: \"pending\",\r\n-      phone: \"\",\r\n-      email: \"\",\r\n-      location: \"\",\r\n-      addOns: [],\r\n-      carType: carTypeOptions[0].label,\r\n-    });\r\n-    setShowAdd(false);\r\n-  };\r\n-\r\n-  // Show booking details modal\r\n-  const handleShowDetail = (booking) => {\r\n-    setDetailBooking(booking);\r\n-    setShowDetail(true);\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n-      <div className=\"max-w-5xl mx-auto\">\r\n-        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n-        {/* Revenue summary */}\r\n-        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n-          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n-            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n-            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n-          </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n-            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n-            <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n-          </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n-            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Pending</div>\r\n-            <div className=\"text-3xl font-bold text-yellow-600\">{bookings.filter(b => b.status === \"pending\").length}</div>\r\n-          </div>\r\n-        </div>\r\n-        {/* Booking list */}\r\n-        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n-          <div className=\"flex justify-between items-center mb-4\">\r\n-            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n-            <button\r\n-              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-              onClick={() => setShowAdd(true)}\r\n-            >\r\n-              Add Booking\r\n-            </button>\r\n-          </div>\r\n-          <table className=\"w-full text-left border-collapse\">\r\n-            <thead>\r\n-              <tr style={{ background: '#f5f5f5' }}>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n-              </tr>\r\n-            </thead>\r\n-            <tbody>\r\n-              {bookings.map(b => (\r\n-                <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleShowDetail(b)}>{b.name}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.service}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.date}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>${b.amount}</td>\r\n-                  <td className=\"py-2 px-3\">\r\n-                    <span className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}>{b.status}</span>\r\n-                  </td>\r\n-                </tr>\r\n-              ))}\r\n-            </tbody>\r\n-          </table>\r\n-        </div>\r\n-        {/* Booking details modal */}\r\n-        {showDetail && detailBooking && (\r\n-          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n-              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n-              <div className=\"space-y-3 text-gray-800\">\r\n-                <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n-                <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n-                {detailBooking.addOns && detailBooking.addOns.length > 0 && (\r\n-                  <div>\r\n-                    <span className=\"font-semibold\">Add-Ons:</span>\r\n-                    <ul className=\"list-disc ml-6 mt-1\">\r\n-                      {detailBooking.addOns.map((a, i) => (\r\n-                        <li key={i}>{a.label}</li>\r\n-                      ))}\r\n-                    </ul>\r\n-                  </div>\r\n-                )}\r\n-                <div><span className=\"font-semibold\">Date:</span> {detailBooking.date}</div>\r\n-                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n-                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n-                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n-                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n-                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n-                \r\n-              </div>\r\n-              <button className=\"mt-8 w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\" onClick={() => setShowDetail(false)}>Close</button>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-        {/* Add booking modal */}\r\n-        {showAdd && (\r\n-          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-            <div\r\n-              className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n-              style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n-            >\r\n-              {/* Close (X) button */}\r\n-              <button\r\n-                type=\"button\"\r\n-                aria-label=\"Close\"\r\n-                onClick={() => setShowAdd(false)}\r\n-                className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n-                style={{ background: 'none', border: 'none' }}\r\n-              >\r\n-                &times;\r\n-              </button>\r\n-              <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n-              <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n-                <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n-                  {/* Name */}\r\n-                  <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Service dropdown */}\r\n-                  <select required value={newBooking.service} onChange={e => {\r\n-                    const selectedService = e.target.value;\r\n-                    setNewBooking(nb => ({\r\n-                      ...nb,\r\n-                      service: selectedService,\r\n-                      addOns: [],\r\n-                      amount: calculatePrice(selectedService, [], nb.carType),\r\n-                    }));\r\n-                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-                    {serviceOptions.map(s => (\r\n-                      <option key={s.title} value={s.title}>{s.title}</option>\r\n-                    ))}\r\n-                  </select>\r\n-                  {/* Car type dropdown */}\r\n-                  <select required value={newBooking.carType} onChange={e => {\r\n-                    const carType = e.target.value;\r\n-                    setNewBooking(nb => ({\r\n-                      ...nb,\r\n-                      carType,\r\n-                      amount: calculatePrice(nb.service, nb.addOns, carType),\r\n-                    }));\r\n-                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-                    {carTypeOptions.map(c => (\r\n-                      <option key={c.label} value={c.label}>{c.label}</option>\r\n-                    ))}\r\n-                  </select>\r\n-                  {/* Add-ons (always show for Premium Exterior Wash, and for other services as per rules) */}\r\n-                  <div>\r\n-                    <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n-                    <div className=\"flex flex-wrap gap-3 mb-2\">\r\n-                      {(() => {\r\n-                        let validAddOns = [];\r\n-                        if (newBooking.service === \"Premium Exterior Wash\") {\r\n-                          validAddOns = addOnOptions.filter(opt => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(opt.label));\r\n-                        } else if (newBooking.service === \"Complete Interior Detail\") {\r\n-                          validAddOns = addOnOptions.filter(opt => opt.label === \"Pet Hair Removal\");\r\n-                        } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n-                          validAddOns = addOnOptions;\r\n-                        }\r\n-                        return validAddOns.map(opt => (\r\n-                          <button\r\n-                            key={opt.label}\r\n-                            type=\"button\"\r\n-                            onClick={() => {\r\n-                              setNewBooking(nb => {\r\n-                                const exists = nb.addOns.find(a => a.label === opt.label);\r\n-                                const updated = exists\r\n-                                  ? nb.addOns.filter(a => a.label !== opt.label)\r\n-                                  : [...nb.addOns, opt];\r\n-                                return {\r\n-                                  ...nb,\r\n-                                  addOns: updated,\r\n-                                  amount: calculatePrice(nb.service, updated, nb.carType),\r\n-                                };\r\n-                              });\r\n-                            }}\r\n-                            className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n-                          >\r\n-                            {opt.label}\r\n-                          </button>\r\n-                        ));\r\n-                      })()}\r\n-                    </div>\r\n-                    {/* Combo discount message */}\r\n-                    {(() => {\r\n-                      let validAddOns = [];\r\n-                      if (newBooking.service === \"Premium Exterior Wash\") {\r\n-                        validAddOns = newBooking.addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n-                      } else if (newBooking.service === \"Complete Interior Detail\") {\r\n-                        validAddOns = newBooking.addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n-                      } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n-                        validAddOns = newBooking.addOns;\r\n-                      }\r\n-                      return validAddOns.find(a => a.label === \"Clay Bar\") && validAddOns.find(a => a.label === \"Iron Removal\") ? (\r\n-                        <div className=\"text-xs text-blue-600 mt-2 font-semibold\">Combo discount applied (-$5)</div>\r\n-                      ) : null;\r\n-                    })()}\r\n-                  </div>\r\n-                  {/* Date */}\r\n-                  <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Amount (auto-calculated, read-only) */}\r\n-                  <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n-                  {/* Phone (numbers only) */}\r\n-                  <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n-                    // Only allow numbers\r\n-                    const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n-                    setNewBooking({ ...newBooking, phone: val });\r\n-                  }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Email */}\r\n-                  <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Location autocomplete (Google Places API) */}\r\n-                  <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n-                    const val = e.target.value;\r\n-                    setNewBooking({ ...newBooking, location: val });\r\n-                    // Simple Google Places Autocomplete (client-side only)\r\n-                    if (window && val.length > 2) {\r\n-                      try {\r\n-                        const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n-                        const data = await resp.json();\r\n-                        setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n-                      } catch {}\r\n-                    } else {\r\n-                      setLocationSuggestions([]);\r\n-                    }\r\n-                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n-                  {/* Location suggestions dropdown */}\r\n-                  {locationSuggestions.length > 0 && (\r\n-                    <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n-                      {locationSuggestions.map((sug, i) => (\r\n-                        <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n-                          setNewBooking(nb => ({ ...nb, location: sug }));\r\n-                          setLocationSuggestions([]);\r\n-                        }}>{sug}</div>\r\n-                      ))}\r\n-                    </div>\r\n-                  )}\r\n-                  {/* Status dropdown */}\r\n-                  <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-                    <option value=\"pending\">Pending</option>\r\n-                    <option value=\"complete\">Complete</option>\r\n-                  </select>\r\n-                  <div className=\"flex gap-4 mt-4 pb-4\">\r\n-                    <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n-                    <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={() => setShowAdd(false)}>Cancel</button>\r\n-                  </div>\r\n-                </form>\r\n-              </div>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import { useEffect, useState } from \"react\";\r\n-import { useRouter } from \"next/router\";\r\n-\r\n-// Mock booking data for demo\r\n-const initialBookings = [\r\n-  {\r\n-    id: 1,\r\n-    name: \"John Doe\",\r\n-    service: \"Complete Interior Detail\",\r\n-    date: \"2025-10-10\",\r\n-    amount: 130,\r\n-    status: \"complete\",\r\n-    phone: \"902-555-1234\",\r\n-    email: \"john@example.com\",\r\n-    location: \"Halifax\",\r\n-    addOns: [{ label: \"Pet Hair Removal\", price: 20 }],\r\n-    carType: \"SUV\"\r\n-  },\r\n-  {\r\n-    id: 2,\r\n-    name: \"Jane Smith\",\r\n-    service: \"Premium Exterior Wash\",\r\n-    date: \"2025-10-12\",\r\n-    amount: 50,\r\n-    status: \"pending\",\r\n-    phone: \"902-555-5678\",\r\n-    email: \"jane@example.com\",\r\n-    location: \"Dartmouth\",\r\n-    addOns: [\r\n-      { label: \"Clay Bar\", price: 20 },\r\n-      { label: \"Iron Removal\", price: 25 },\r\n-      { label: \"Ceramic Sealant\", price: 10 }\r\n-    ],\r\n-    carType: \"Sedan\"\r\n-  },\r\n-  {\r\n-    id: 3,\r\n-    name: \"Alex Lee\",\r\n-    service: \"Ultimate Full Detail\",\r\n-    date: \"2025-10-15\",\r\n-    amount: 160,\r\n-    status: \"complete\",\r\n-    phone: \"902-555-9999\",\r\n-    email: \"alex@example.com\",\r\n-    location: \"Bedford\",\r\n-    addOns: [\r\n-      { label: \"Pet Hair Removal\", price: 20 },\r\n-      { label: \"Clay Bar\", price: 20 },\r\n-      { label: \"Iron Removal\", price: 25 }\r\n-    ],\r\n-    carType: \"Truck\"\r\n-  },\r\n-];\r\n-\r\n-export default function AdminDashboard() {\r\n-  const router = useRouter();\r\n-  const [bookings, setBookings] = useState(initialBookings);\r\n-  const [showAdd, setShowAdd] = useState(false);\r\n-  const [showDetail, setShowDetail] = useState(false);\r\n-  const [detailBooking, setDetailBooking] = useState(null);\r\n-  // Service/add-on logic\r\n-  const serviceOptions = [\r\n-    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: false },\r\n-    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n-    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n-  ];\r\n-  const addOnOptions = [\r\n-    { label: \"Pet Hair Removal\", price: 20 },\r\n-    { label: \"Clay Bar\", price: 20 },\r\n-    { label: \"Iron Removal\", price: 25 },\r\n-    { label: \"Ceramic Sealant\", price: 10 },\r\n-  ];\r\n-  const carTypeOptions = [\r\n-    { label: \"Sedan\", price: 0 },\r\n-    { label: \"SUV\", price: 10 },\r\n-    { label: \"Truck\", price: 20 },\r\n-  ];\r\n-  // Booking state\r\n-  const [newBooking, setNewBooking] = useState({\r\n-    name: \"\",\r\n-    service: serviceOptions[0].title,\r\n-    date: \"\",\r\n-    amount: serviceOptions[0].basePrice,\r\n-    status: \"pending\",\r\n-    phone: \"\",\r\n-    email: \"\",\r\n-    location: \"\",\r\n-    addOns: [],\r\n-    carType: carTypeOptions[0].label,\r\n-  });\r\n-  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n-\r\n-  useEffect(() => {\r\n-    if (typeof window !== \"undefined\") {\r\n-      const saved = window.localStorage.getItem(\"adminAuth\");\r\n-      if (saved !== \"Detailing1313!\") {\r\n-        router.replace(\"/admin\");\r\n-      }\r\n-    }\r\n-  }, [router]);\r\n-\r\n-  // Calculate total revenue\r\n-  const totalRevenue = bookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n-\r\n-  // Add new booking\r\n-  // Calculate price\r\n-  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n-    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n-    let price = service ? service.basePrice : 0;\r\n-    let addOnTotal = 0;\r\n-    let filteredAddOns = [];\r\n-    if (service && service.hasAddOns && addOns.length) {\r\n-      if (serviceTitle === \"Premium Exterior Wash\") {\r\n-        filteredAddOns = addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n-      } else if (serviceTitle === \"Complete Interior Detail\") {\r\n-        filteredAddOns = addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n-      } else if (serviceTitle === \"Ultimate Full Detail\") {\r\n-        filteredAddOns = addOns; // show all\r\n-      }\r\n-      addOnTotal = filteredAddOns.reduce((sum, a) => sum + a.price, 0);\r\n-      // Subtract $5 if both Clay Bar and Iron Removal are selected\r\n-      const clay = filteredAddOns.find(a => a.label === \"Clay Bar\");\r\n-      const iron = filteredAddOns.find(a => a.label === \"Iron Removal\");\r\n-      if (clay && iron) {\r\n-        addOnTotal -= 5;\r\n-      }\r\n-      price += addOnTotal;\r\n-    }\r\n-    const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n-    if (carType) price += carType.price;\r\n-    // Special rule for Complete Interior Detail\r\n-    if (serviceTitle === \"Complete Interior Detail\") {\r\n-      if (carTypeLabel === \"SUV\") price = 130;\r\n-      else if (carTypeLabel === \"Truck\") price = 140;\r\n-      else price = 110;\r\n-    }\r\n-    return price;\r\n-  };\r\n-\r\n-  // Add booking\r\n-  const handleAddBooking = (e) => {\r\n-    e.preventDefault();\r\n-    setBookings([\r\n-      ...bookings,\r\n-      {\r\n-        ...newBooking,\r\n-        id: bookings.length + 1,\r\n-        amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n-      }\r\n-    ]);\r\n-    setNewBooking({\r\n-      name: \"\",\r\n-      service: serviceOptions[0].title,\r\n-      date: \"\",\r\n-      amount: serviceOptions[0].basePrice,\r\n-      status: \"pending\",\r\n-      phone: \"\",\r\n-      email: \"\",\r\n-      location: \"\",\r\n-      addOns: [],\r\n-      carType: carTypeOptions[0].label,\r\n-    });\r\n-    setShowAdd(false);\r\n-  };\r\n-\r\n-  // Show booking details modal\r\n-  const handleShowDetail = (booking) => {\r\n-    setDetailBooking(booking);\r\n-    setShowDetail(true);\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n-      <div className=\"max-w-5xl mx-auto\">\r\n-        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n-        {/* Revenue summary */}\r\n-        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n-          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n-            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n-            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n-          </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n-            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n-            <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n-          </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n-            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Pending</div>\r\n-            <div className=\"text-3xl font-bold text-yellow-600\">{bookings.filter(b => b.status === \"pending\").length}</div>\r\n-          </div>\r\n-        </div>\r\n-        {/* Booking list */}\r\n-        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n-          <div className=\"flex justify-between items-center mb-4\">\r\n-            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n-            <button\r\n-              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-              onClick={() => setShowAdd(true)}\r\n-            >\r\n-              Add Booking\r\n-            </button>\r\n-          </div>\r\n-          <table className=\"w-full text-left border-collapse\">\r\n-            <thead>\r\n-              <tr style={{ background: '#f5f5f5' }}>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n-                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n-              </tr>\r\n-            </thead>\r\n-            <tbody>\r\n-              {bookings.map(b => (\r\n-                <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleShowDetail(b)}>{b.name}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.service}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.date}</td>\r\n-                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>${b.amount}</td>\r\n-                  <td className=\"py-2 px-3\">\r\n-                    <span className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}>{b.status}</span>\r\n-                  </td>\r\n-                </tr>\r\n-              ))}\r\n-            </tbody>\r\n-          </table>\r\n-        </div>\r\n-        {/* Booking details modal */}\r\n-        {showDetail && detailBooking && (\r\n-          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n-              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n-              <div className=\"space-y-3 text-gray-800\">\r\n-                <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n-                <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n-                {detailBooking.addOns && detailBooking.addOns.length > 0 && (\r\n-                  <div>\r\n-                    <span className=\"font-semibold\">Add-Ons:</span>\r\n-                    <ul className=\"list-disc ml-6 mt-1\">\r\n-                      {detailBooking.addOns.map((a, i) => (\r\n-                        <li key={i}>{a.label}</li>\r\n-                      ))}\r\n-                    </ul>\r\n-                  </div>\r\n-                )}\r\n-                <div><span className=\"font-semibold\">Date:</span> {detailBooking.date}</div>\r\n-                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n-                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n-                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n-                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n-                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n-                \r\n-              </div>\r\n-              <button className=\"mt-8 w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\" onClick={() => setShowDetail(false)}>Close</button>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-        {/* Add booking modal */}\r\n-        {showAdd && (\r\n-          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-            <div\r\n-              className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n-              style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n-            >\r\n-              {/* Close (X) button */}\r\n-              <button\r\n-                type=\"button\"\r\n-                aria-label=\"Close\"\r\n-                onClick={() => setShowAdd(false)}\r\n-                className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n-                style={{ background: 'none', border: 'none' }}\r\n-              >\r\n-                &times;\r\n-              </button>\r\n-              <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n-              <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n-                <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n-                  {/* Name */}\r\n-                  <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Service dropdown */}\r\n-                  <select required value={newBooking.service} onChange={e => {\r\n-                    const selectedService = e.target.value;\r\n-                    setNewBooking(nb => ({\r\n-                      ...nb,\r\n-                      service: selectedService,\r\n-                      addOns: [],\r\n-                      amount: calculatePrice(selectedService, [], nb.carType),\r\n-                    }));\r\n-                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-                    {serviceOptions.map(s => (\r\n-                      <option key={s.title} value={s.title}>{s.title}</option>\r\n-                    ))}\r\n-                  </select>\r\n-                  {/* Car type dropdown */}\r\n-                  <select required value={newBooking.carType} onChange={e => {\r\n-                    const carType = e.target.value;\r\n-                    setNewBooking(nb => ({\r\n-                      ...nb,\r\n-                      carType,\r\n-                      amount: calculatePrice(nb.service, nb.addOns, carType),\r\n-                    }));\r\n-                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-                    {carTypeOptions.map(c => (\r\n-                      <option key={c.label} value={c.label}>{c.label}</option>\r\n-                    ))}\r\n-                  </select>\r\n-                  {/* Add-ons (always show for Premium Exterior Wash, and for other services as per rules) */}\r\n-                  <div>\r\n-                    <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n-                    <div className=\"flex flex-wrap gap-3 mb-2\">\r\n-                      {(() => {\r\n-                        let validAddOns = [];\r\n-                        if (newBooking.service === \"Premium Exterior Wash\") {\r\n-                          validAddOns = addOnOptions.filter(opt => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(opt.label));\r\n-                        } else if (newBooking.service === \"Complete Interior Detail\") {\r\n-                          validAddOns = addOnOptions.filter(opt => opt.label === \"Pet Hair Removal\");\r\n-                        } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n-                          validAddOns = addOnOptions;\r\n-                        }\r\n-                        return validAddOns.map(opt => (\r\n-                          <button\r\n-                            key={opt.label}\r\n-                            type=\"button\"\r\n-                            onClick={() => {\r\n-                              setNewBooking(nb => {\r\n-                                const exists = nb.addOns.find(a => a.label === opt.label);\r\n-                                const updated = exists\r\n-                                  ? nb.addOns.filter(a => a.label !== opt.label)\r\n-                                  : [...nb.addOns, opt];\r\n-                                return {\r\n-                                  ...nb,\r\n-                                  addOns: updated,\r\n-                                  amount: calculatePrice(nb.service, updated, nb.carType),\r\n-                                };\r\n-                              });\r\n-                            }}\r\n-                            className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n-                          >\r\n-                            {opt.label}\r\n-                          </button>\r\n-                        ));\r\n-                      })()}\r\n-                    </div>\r\n-                    {/* Combo discount message */}\r\n-                    {(() => {\r\n-                      let validAddOns = [];\r\n-                      if (newBooking.service === \"Premium Exterior Wash\") {\r\n-                        validAddOns = newBooking.addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n-                      } else if (newBooking.service === \"Complete Interior Detail\") {\r\n-                        validAddOns = newBooking.addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n-                      } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n-                        validAddOns = newBooking.addOns;\r\n-                      }\r\n-                      return validAddOns.find(a => a.label === \"Clay Bar\") && validAddOns.find(a => a.label === \"Iron Removal\") ? (\r\n-                        <div className=\"text-xs text-blue-600 mt-2 font-semibold\">Combo discount applied (-$5)</div>\r\n-                      ) : null;\r\n-                    })()}\r\n-                  </div>\r\n-                  {/* Date */}\r\n-                  <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Amount (auto-calculated, read-only) */}\r\n-                  <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n-                  {/* Phone (numbers only) */}\r\n-                  <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n-                    // Only allow numbers\r\n-                    const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n-                    setNewBooking({ ...newBooking, phone: val });\r\n-                  }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Email */}\r\n-                  <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Location autocomplete (Google Places API) */}\r\n-                  <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n-                    const val = e.target.value;\r\n-                    setNewBooking({ ...newBooking, location: val });\r\n-                    // Simple Google Places Autocomplete (client-side only)\r\n-                    if (window && val.length > 2) {\r\n-                      try {\r\n-                        const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n-                        const data = await resp.json();\r\n-                        setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n-                      } catch {}\r\n-                    } else {\r\n-                      setLocationSuggestions([]);\r\n-                    }\r\n-                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n-                  {/* Location suggestions dropdown */}\r\n-                  {locationSuggestions.length > 0 && (\r\n-                    <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n-                      {locationSuggestions.map((sug, i) => (\r\n-                        <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n-                          setNewBooking(nb => ({ ...nb, location: sug }));\r\n-                          setLocationSuggestions([]);\r\n-                        }}>{sug}</div>\r\n-                      ))}\r\n-                    </div>\r\n-                  )}\r\n-                  {/* Status dropdown */}\r\n-                  <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-                    <option value=\"pending\">Pending</option>\r\n-                    <option value=\"complete\">Complete</option>\r\n-                  </select>\r\n-                  <div className=\"flex gap-4 mt-4 pb-4\">\r\n-                    <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n-                    <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={() => setShowAdd(false)}>Cancel</button>\r\n-                  </div>\r\n-                </form>\r\n-              </div>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1760672897221,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,289 @@\n+import { useEffect, useState } from \"react\";\r\n+import AdminAddBooking from \"../components/AdminAddBooking\";\r\n+import { useRouter } from \"next/router\";\r\n+\r\n+// Mock booking data for demo\r\n+const initialBookings = [\r\n+  {\r\n+    id: 1,\r\n+    name: \"John Doe\",\r\n+    service: \"Complete Interior Detail\",\r\n+    date: \"2025-10-10\",\r\n+    time: \"14:30\",\r\n+    amount: 130,\r\n+    status: \"complete\",\r\n+    phone: \"902-555-1234\",\r\n+    email: \"john@example.com\",\r\n+    location: \"Halifax\",\r\n+    addOns: [{ label: \"Pet Hair Removal\", price: 20 }],\r\n+    carType: \"SUV\"\r\n+  },\r\n+  {\r\n+    id: 2,\r\n+    name: \"Jane Smith\",\r\n+    service: \"Premium Exterior Wash\",\r\n+    date: \"2025-10-12\",\r\n+    time: \"10:00\",\r\n+    amount: 50,\r\n+    status: \"pending\",\r\n+    phone: \"902-555-5678\",\r\n+    email: \"jane@example.com\",\r\n+    location: \"Dartmouth\",\r\n+    addOns: [\r\n+      { label: \"Clay Bar\", price: 20 },\r\n+      { label: \"Iron Removal\", price: 25 },\r\n+      { label: \"Ceramic Sealant\", price: 10 }\r\n+    ],\r\n+    carType: \"Sedan\"\r\n+  },\r\n+  {\r\n+    id: 3,\r\n+    name: \"Alex Lee\",\r\n+    service: \"Ultimate Full Detail\",\r\n+    date: \"2025-10-15\",\r\n+    time: \"09:15\",\r\n+    amount: 160,\r\n+    status: \"complete\",\r\n+    phone: \"902-555-9999\",\r\n+    email: \"alex@example.com\",\r\n+    location: \"Bedford\",\r\n+    addOns: [\r\n+      { label: \"Pet Hair Removal\", price: 20 },\r\n+      { label: \"Clay Bar\", price: 20 },\r\n+      { label: \"Iron Removal\", price: 25 }\r\n+    ],\r\n+    carType: \"Truck\"\r\n+  },\r\n+];\r\n+\r\n+export default function AdminDashboard() {\r\n+  const router = useRouter();\r\n+  const [bookings, setBookings] = useState(initialBookings);\r\n+  const [showAdd, setShowAdd] = useState(false);\r\n+  const [showDetail, setShowDetail] = useState(false);\r\n+  const [detailBooking, setDetailBooking] = useState(null);\r\n+  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n+  const [statusFilter, setStatusFilter] = useState(\"all\");\r\n+  // Booking add modal is handled in AdminAddBooking component\r\n+\r\n+  // Display date as \"oct-19\" while keeping year in stored value\r\n+  const formatDateShort = (dateStr) => {\r\n+    if (!dateStr) return \"\";\r\n+    const parts = dateStr.split(\"-\");\r\n+    if (parts.length !== 3) return dateStr;\r\n+    const y = parseInt(parts[0], 10);\r\n+    const m = parseInt(parts[1], 10);\r\n+    const d = parseInt(parts[2], 10);\r\n+    if (isNaN(y) || isNaN(m) || isNaN(d)) return dateStr;\r\n+    const months = [\"jan\",\"feb\",\"mar\",\"apr\",\"may\",\"jun\",\"jul\",\"aug\",\"sep\",\"oct\",\"nov\",\"dec\"];\r\n+    return `${months[m - 1]}-${d}`;\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    if (typeof window !== \"undefined\") {\r\n+      const saved = window.localStorage.getItem(\"adminAuth\");\r\n+      if (saved !== \"Detailing1313!\") {\r\n+        router.replace(\"/admin\");\r\n+      }\r\n+    }\r\n+  }, [router]);\r\n+\r\n+  // Calculate total revenue\r\n+  const totalRevenue = bookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n+\r\n+  // Add new booking handled by child callback\r\n+\r\n+  // Add booking via child component callback\r\n+  const handleAddFromChild = (payload) => {\r\n+    setBookings(prev => {\r\n+      const maxId = prev.reduce((m, b) => Math.max(m, b.id || 0), 0);\r\n+      return [\r\n+        ...prev,\r\n+        {\r\n+          ...payload,\r\n+          id: maxId + 1,\r\n+        }\r\n+      ];\r\n+    });\r\n+  };\r\n+\r\n+  // Show booking details modal\r\n+  const handleShowDetail = (booking) => {\r\n+    setDetailBooking(booking);\r\n+    setShowDeleteConfirm(false);\r\n+    setShowDetail(true);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n+      <div className=\"max-w-5xl mx-auto\">\r\n+        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n+        {/* Revenue summary */}\r\n+        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n+          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n+            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n+            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n+            <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Pending</div>\r\n+            <div className=\"text-3xl font-bold text-yellow-600\">{bookings.filter(b => b.status === \"pending\").length}</div>\r\n+          </div>\r\n+        </div>\r\n+        {/* Booking list */}\r\n+        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n+          <div className=\"flex justify-between items-center mb-4\">\r\n+            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n+            <button\r\n+              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+              onClick={() => setShowAdd(true)}\r\n+            >\r\n+              Add Booking\r\n+            </button>\r\n+          </div>\r\n+          {/* Status Filter */}\r\n+          <div className=\"flex items-center gap-2 mb-4\">\r\n+            <span className=\"text-sm text-gray-600\">Filter:</span>\r\n+            {[\r\n+              { key: 'all', label: 'All' },\r\n+              { key: 'pending', label: 'Pending' },\r\n+              { key: 'complete', label: 'Complete' },\r\n+            ].map(opt => (\r\n+              <button\r\n+                key={opt.key}\r\n+                type=\"button\"\r\n+                onClick={() => setStatusFilter(opt.key)}\r\n+                className={`px-3 py-1 rounded-full text-sm border ${statusFilter === opt.key ? 'bg-blue-600 text-white border-blue-600' : 'bg-white text-blue-700 border-blue-200 hover:bg-blue-50'}`}\r\n+              >\r\n+                {opt.label}\r\n+              </button>\r\n+            ))}\r\n+          </div>\r\n+          <div className=\"overflow-x-auto\">\r\n+          <table className=\"w-full text-left border-collapse min-w-[640px] text-xs sm:text-sm\">\r\n+            <thead>\r\n+              <tr style={{ background: '#f5f5f5' }}>\r\n+                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n+                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n+                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n+                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n+                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Time</th>\r\n+                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n+              </tr>\r\n+            </thead>\r\n+            <tbody>\r\n+              {[...bookings]\r\n+                .filter(b => statusFilter === 'all' ? true : b.status === statusFilter)\r\n+                .sort((a, b) => {\r\n+                  const aDT = new Date(`${a.date || '1970-01-01'}T${(a.time || '00:00')}:00`).getTime();\r\n+                  const bDT = new Date(`${b.date || '1970-01-01'}T${(b.time || '00:00')}:00`).getTime();\r\n+                  return bDT - aDT; // most recent first\r\n+                })\r\n+                .map(b => (\r\n+                <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n+                  <td className=\"py-2 px-2 sm:px-3\">\r\n+                    <span\r\n+                      aria-label={b.status}\r\n+                      className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}\r\n+                    >\r\n+                      <span className=\"sm:hidden\">\r\n+                        {b.status === 'complete' ? 'C' : b.status === 'pending' ? 'P' : (b.status?.[0]?.toUpperCase() || '')}\r\n+                      </span>\r\n+                      <span className=\"hidden sm:inline\">{b.status}</span>\r\n+                    </span>\r\n+                  </td>\r\n+                  <td className=\"py-2 px-2 sm:px-3 max-w-[140px] sm:max-w-none truncate\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleShowDetail(b)}>{b.name}</td>\r\n+                  <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{b.service}</td>\r\n+                  <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{formatDateShort(b.date)}</td>\r\n+                  <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{b.time || \"--\"}</td>\r\n+                  <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>${b.amount}</td>\r\n+                </tr>\r\n+              ))}\r\n+            </tbody>\r\n+          </table>\r\n+          </div>\r\n+        </div>\r\n+        {/* Booking details modal */}\r\n+        {showDetail && detailBooking && (\r\n+          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n+              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n+              <div className=\"space-y-3 text-gray-800\">\r\n+                <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n+                <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n+                {detailBooking.addOns && detailBooking.addOns.length > 0 && (\r\n+                  <div>\r\n+                    <span className=\"font-semibold\">Add-Ons:</span>\r\n+                    <ul className=\"list-disc ml-6 mt-1\">\r\n+                      {detailBooking.addOns.map((a, i) => (\r\n+                        <li key={i}>{a.label}</li>\r\n+                      ))}\r\n+                    </ul>\r\n+                  </div>\r\n+                )}\r\n+                <div><span className=\"font-semibold\">Date:</span> {formatDateShort(detailBooking.date)}</div>\r\n+                <div><span className=\"font-semibold\">Time:</span> {detailBooking.time || \"--\"}</div>\r\n+                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n+                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n+                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n+                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n+                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n+                \r\n+              </div>\r\n+              <div className=\"mt-8 flex gap-3\">\r\n+                {!showDeleteConfirm ? (\r\n+                  <>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-red-600 hover:bg-red-700 text-white font-semibold\"\r\n+                      onClick={() => setShowDeleteConfirm(true)}\r\n+                    >\r\n+                      Delete\r\n+                    </button>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+                      onClick={() => {\r\n+                        setShowDetail(false);\r\n+                        setShowDeleteConfirm(false);\r\n+                      }}\r\n+                    >\r\n+                      Close\r\n+                    </button>\r\n+                  </>\r\n+                ) : (\r\n+                  <>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\"\r\n+                      onClick={() => setShowDeleteConfirm(false)}\r\n+                    >\r\n+                      Cancel\r\n+                    </button>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-red-600 hover:bg-red-700 text-white font-semibold\"\r\n+                      onClick={() => {\r\n+                        setBookings(prev => prev.filter(b => b.id !== detailBooking.id));\r\n+                        setShowDeleteConfirm(false);\r\n+                        setShowDetail(false);\r\n+                        setDetailBooking(null);\r\n+                      }}\r\n+                    >\r\n+                      Confirm Delete\r\n+                    </button>\r\n+                  </>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+        {/* Add booking modal (component) */}\r\n+        <AdminAddBooking\r\n+          open={showAdd}\r\n+          onClose={() => setShowAdd(false)}\r\n+          onAdd={(payload) => handleAddFromChild(payload)}\r\n+        />\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1760673148313,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,296 @@\n+import { useEffect, useState } from \"react\";\r\n+import AdminAddBooking from \"../components/AdminAddBooking\";\r\n+import { useRouter } from \"next/router\";\r\n+\r\n+// Mock booking data for demo\r\n+const initialBookings = [\r\n+  {\r\n+    id: 1,\r\n+    name: \"John Doe\",\r\n+    carName: \"Toyota Camry\",\r\n+    service: \"Complete Interior Detail\",\r\n+    date: \"2025-10-10\",\r\n+    time: \"14:30\",\r\n+    amount: 130,\r\n+    status: \"complete\",\r\n+    phone: \"902-555-1234\",\r\n+    email: \"john@example.com\",\r\n+    location: \"Halifax\",\r\n+    addOns: [{ label: \"Pet Hair Removal\", price: 20 }],\r\n+    carType: \"SUV\"\r\n+  },\r\n+  {\r\n+    id: 2,\r\n+    name: \"Jane Smith\",\r\n+    carName: \"Honda Civic\",\r\n+    service: \"Premium Exterior Wash\",\r\n+    date: \"2025-10-12\",\r\n+    time: \"10:00\",\r\n+    amount: 50,\r\n+    status: \"pending\",\r\n+    phone: \"902-555-5678\",\r\n+    email: \"jane@example.com\",\r\n+    location: \"Dartmouth\",\r\n+    addOns: [\r\n+      { label: \"Clay Bar\", price: 20 },\r\n+      { label: \"Iron Removal\", price: 25 },\r\n+      { label: \"Ceramic Sealant\", price: 10 }\r\n+    ],\r\n+    carType: \"Sedan\"\r\n+  },\r\n+  {\r\n+    id: 3,\r\n+    name: \"Alex Lee\",\r\n+    carName: \"Ford F-150\",\r\n+    service: \"Ultimate Full Detail\",\r\n+    date: \"2025-10-15\",\r\n+    time: \"09:15\",\r\n+    amount: 160,\r\n+    status: \"complete\",\r\n+    phone: \"902-555-9999\",\r\n+    email: \"alex@example.com\",\r\n+    location: \"Bedford\",\r\n+    addOns: [\r\n+      { label: \"Pet Hair Removal\", price: 20 },\r\n+      { label: \"Clay Bar\", price: 20 },\r\n+      { label: \"Iron Removal\", price: 25 }\r\n+    ],\r\n+    carType: \"Truck\"\r\n+  },\r\n+];\r\n+\r\n+export default function AdminDashboard() {\r\n+  const router = useRouter();\r\n+  const [bookings, setBookings] = useState(initialBookings);\r\n+  const [showAdd, setShowAdd] = useState(false);\r\n+  const [showDetail, setShowDetail] = useState(false);\r\n+  const [detailBooking, setDetailBooking] = useState(null);\r\n+  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n+  const [statusFilter, setStatusFilter] = useState(\"all\");\r\n+  // Booking add modal is handled in AdminAddBooking component\r\n+\r\n+  // Display date as \"oct-19\" while keeping year in stored value\r\n+  const formatDateShort = (dateStr) => {\r\n+    if (!dateStr) return \"\";\r\n+    const parts = dateStr.split(\"-\");\r\n+    if (parts.length !== 3) return dateStr;\r\n+    const y = parseInt(parts[0], 10);\r\n+    const m = parseInt(parts[1], 10);\r\n+    const d = parseInt(parts[2], 10);\r\n+    if (isNaN(y) || isNaN(m) || isNaN(d)) return dateStr;\r\n+    const months = [\"jan\",\"feb\",\"mar\",\"apr\",\"may\",\"jun\",\"jul\",\"aug\",\"sep\",\"oct\",\"nov\",\"dec\"];\r\n+    return `${months[m - 1]}-${d}`;\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    if (typeof window !== \"undefined\") {\r\n+      const saved = window.localStorage.getItem(\"adminAuth\");\r\n+      if (saved !== \"Detailing1313!\") {\r\n+        router.replace(\"/admin\");\r\n+      }\r\n+    }\r\n+  }, [router]);\r\n+\r\n+  // Calculate total revenue\r\n+  const totalRevenue = bookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n+\r\n+  // Add new booking handled by child callback\r\n+\r\n+  // Add booking via child component callback\r\n+  const handleAddFromChild = (payload) => {\r\n+    setBookings(prev => {\r\n+      const maxId = prev.reduce((m, b) => Math.max(m, b.id || 0), 0);\r\n+      return [\r\n+        ...prev,\r\n+        {\r\n+          ...payload,\r\n+          id: maxId + 1,\r\n+        }\r\n+      ];\r\n+    });\r\n+  };\r\n+\r\n+  // Show booking details modal\r\n+  const handleShowDetail = (booking) => {\r\n+    setDetailBooking(booking);\r\n+    setShowDeleteConfirm(false);\r\n+    setShowDetail(true);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n+      <div className=\"max-w-5xl mx-auto\">\r\n+        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n+        {/* Revenue summary */}\r\n+        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n+          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n+            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n+            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n+            <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Pending</div>\r\n+            <div className=\"text-3xl font-bold text-yellow-600\">{bookings.filter(b => b.status === \"pending\").length}</div>\r\n+          </div>\r\n+        </div>\r\n+        {/* Booking list */}\r\n+        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n+          <div className=\"flex justify-between items-center mb-4\">\r\n+            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n+            <button\r\n+              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+              onClick={() => setShowAdd(true)}\r\n+            >\r\n+              Add Booking\r\n+            </button>\r\n+          </div>\r\n+          {/* Status Filter */}\r\n+          <div className=\"flex items-center gap-2 mb-4\">\r\n+            <span className=\"text-sm text-gray-600\">Filter:</span>\r\n+            {[\r\n+              { key: 'all', label: 'All' },\r\n+              { key: 'pending', label: 'Pending' },\r\n+              { key: 'complete', label: 'Complete' },\r\n+            ].map(opt => (\r\n+              <button\r\n+                key={opt.key}\r\n+                type=\"button\"\r\n+                onClick={() => setStatusFilter(opt.key)}\r\n+                className={`px-3 py-1 rounded-full text-sm border ${statusFilter === opt.key ? 'bg-blue-600 text-white border-blue-600' : 'bg-white text-blue-700 border-blue-200 hover:bg-blue-50'}`}\r\n+              >\r\n+                {opt.label}\r\n+              </button>\r\n+            ))}\r\n+          </div>\r\n+          <div className=\"overflow-x-auto\">\r\n+          <table className=\"w-full text-left border-collapse min-w-[760px] text-xs sm:text-sm\">\r\n+            <thead>\r\n+              <tr style={{ background: '#f5f5f5' }}>\r\n+                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n+                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n+                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Car</th>\r\n+                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n+                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n+                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Time</th>\r\n+                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n+              </tr>\r\n+            </thead>\r\n+            <tbody>\r\n+              {[...bookings]\r\n+                .filter(b => statusFilter === 'all' ? true : b.status === statusFilter)\r\n+                .sort((a, b) => {\r\n+                  const aDT = new Date(`${a.date || '1970-01-01'}T${(a.time || '00:00')}:00`).getTime();\r\n+                  const bDT = new Date(`${b.date || '1970-01-01'}T${(b.time || '00:00')}:00`).getTime();\r\n+                  return bDT - aDT; // most recent first\r\n+                })\r\n+                .map(b => (\r\n+                <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n+                  <td className=\"py-2 px-2 sm:px-3\">\r\n+                    <span\r\n+                      aria-label={b.status}\r\n+                      className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}\r\n+                    >\r\n+                      <span className=\"sm:hidden\">\r\n+                        {b.status === 'complete' ? 'C' : b.status === 'pending' ? 'P' : (b.status?.[0]?.toUpperCase() || '')}\r\n+                      </span>\r\n+                      <span className=\"hidden sm:inline\">{b.status}</span>\r\n+                    </span>\r\n+                  </td>\r\n+                  <td className=\"py-2 px-2 sm:px-3 max-w-[140px] sm:max-w-none truncate\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleShowDetail(b)}>{b.name}</td>\r\n+                  <td className=\"py-2 px-2 sm:px-3 max-w-[160px] truncate\" style={{ color: '#222' }}>{b.carName || \"--\"}</td>\r\n+                  <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{b.service}</td>\r\n+                  <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{formatDateShort(b.date)}</td>\r\n+                  <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{b.time || \"--\"}</td>\r\n+                  <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>${b.amount}</td>\r\n+                </tr>\r\n+              ))}\r\n+            </tbody>\r\n+          </table>\r\n+          </div>\r\n+        </div>\r\n+        {/* Booking details modal */}\r\n+        {showDetail && detailBooking && (\r\n+          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n+              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n+              <div className=\"space-y-3 text-gray-800\">\r\n+                <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n+                <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n+                <div><span className=\"font-semibold\">Car:</span> {detailBooking.carName || \"--\"}</div>\r\n+                <div><span className=\"font-semibold\">Car Type:</span> {detailBooking.carType || \"--\"}</div>\r\n+                {detailBooking.addOns && detailBooking.addOns.length > 0 && (\r\n+                  <div>\r\n+                    <span className=\"font-semibold\">Add-Ons:</span>\r\n+                    <ul className=\"list-disc ml-6 mt-1\">\r\n+                      {detailBooking.addOns.map((a, i) => (\r\n+                        <li key={i}>{a.label}</li>\r\n+                      ))}\r\n+                    </ul>\r\n+                  </div>\r\n+                )}\r\n+                <div><span className=\"font-semibold\">Date:</span> {formatDateShort(detailBooking.date)}</div>\r\n+                <div><span className=\"font-semibold\">Time:</span> {detailBooking.time || \"--\"}</div>\r\n+                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n+                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n+                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n+                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n+                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n+                \r\n+              </div>\r\n+              <div className=\"mt-8 flex gap-3\">\r\n+                {!showDeleteConfirm ? (\r\n+                  <>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-red-600 hover:bg-red-700 text-white font-semibold\"\r\n+                      onClick={() => setShowDeleteConfirm(true)}\r\n+                    >\r\n+                      Delete\r\n+                    </button>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+                      onClick={() => {\r\n+                        setShowDetail(false);\r\n+                        setShowDeleteConfirm(false);\r\n+                      }}\r\n+                    >\r\n+                      Close\r\n+                    </button>\r\n+                  </>\r\n+                ) : (\r\n+                  <>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\"\r\n+                      onClick={() => setShowDeleteConfirm(false)}\r\n+                    >\r\n+                      Cancel\r\n+                    </button>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-red-600 hover:bg-red-700 text-white font-semibold\"\r\n+                      onClick={() => {\r\n+                        setBookings(prev => prev.filter(b => b.id !== detailBooking.id));\r\n+                        setShowDeleteConfirm(false);\r\n+                        setShowDetail(false);\r\n+                        setDetailBooking(null);\r\n+                      }}\r\n+                    >\r\n+                      Confirm Delete\r\n+                    </button>\r\n+                  </>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+        {/* Add booking modal (component) */}\r\n+        <AdminAddBooking\r\n+          open={showAdd}\r\n+          onClose={() => setShowAdd(false)}\r\n+          onAdd={(payload) => handleAddFromChild(payload)}\r\n+        />\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1760675209255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,114 +1,29 @@\n import { useEffect, useState } from \"react\";\r\n import AdminAddBooking from \"../components/AdminAddBooking\";\r\n import { useRouter } from \"next/router\";\r\n \r\n-// Mock booking data for demo\r\n-const initialBookings = [\r\n-  {\r\n-    id: 1,\r\n-    name: \"John Doe\",\r\n-    carName: \"Toyota Camry\",\r\n-    service: \"Complete Interior Detail\",\r\n-    date: \"2025-10-10\",\r\n-    time: \"14:30\",\r\n-    amount: 130,\r\n-    status: \"complete\",\r\n-    phone: \"902-555-1234\",\r\n-    email: \"john@example.com\",\r\n-    location: \"Halifax\",\r\n-    addOns: [{ label: \"Pet Hair Removal\", price: 20 }],\r\n-    carType: \"SUV\"\r\n-  },\r\n-  {\r\n-    id: 2,\r\n-    name: \"Jane Smith\",\r\n-    carName: \"Honda Civic\",\r\n-    service: \"Premium Exterior Wash\",\r\n-    date: \"2025-10-12\",\r\n-    time: \"10:00\",\r\n-    amount: 50,\r\n-    status: \"pending\",\r\n-    phone: \"902-555-5678\",\r\n-    email: \"jane@example.com\",\r\n-    location: \"Dartmouth\",\r\n-    addOns: [\r\n-      { label: \"Clay Bar\", price: 20 },\r\n-      { label: \"Iron Removal\", price: 25 },\r\n-      { label: \"Ceramic Sealant\", price: 10 }\r\n-    ],\r\n-    carType: \"Sedan\"\r\n-  },\r\n-  {\r\n-    id: 3,\r\n-    name: \"Alex Lee\",\r\n-    carName: \"Ford F-150\",\r\n-    service: \"Ultimate Full Detail\",\r\n-    date: \"2025-10-15\",\r\n-    time: \"09:15\",\r\n-    amount: 160,\r\n-    status: \"complete\",\r\n-    phone: \"902-555-9999\",\r\n-    email: \"alex@example.com\",\r\n-    location: \"Bedford\",\r\n-    addOns: [\r\n-      { label: \"Pet Hair Removal\", price: 20 },\r\n-      { label: \"Clay Bar\", price: 20 },\r\n-      { label: \"Iron Removal\", price: 25 }\r\n-    ],\r\n-    carType: \"Truck\"\r\n-  },\r\n-];\r\n-\r\n export default function AdminDashboard() {\r\n   const router = useRouter();\r\n-  const [bookings, setBookings] = useState(initialBookings);\r\n+  const [bookings, setBookings] = useState([]);\r\n+  const [loading, setLoading] = useState(true);\r\n   const [showAdd, setShowAdd] = useState(false);\r\n   const [showDetail, setShowDetail] = useState(false);\r\n   const [detailBooking, setDetailBooking] = useState(null);\r\n   const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n   const [statusFilter, setStatusFilter] = useState(\"all\");\r\n-  // Booking add modal is handled in AdminAddBooking component\r\n \r\n-  // Display date as \"oct-19\" while keeping year in stored value\r\n-  const formatDateShort = (dateStr) => {\r\n-    if (!dateStr) return \"\";\r\n-    const parts = dateStr.split(\"-\");\r\n-    if (parts.length !== 3) return dateStr;\r\n-    const y = parseInt(parts[0], 10);\r\n-    const m = parseInt(parts[1], 10);\r\n-    const d = parseInt(parts[2], 10);\r\n-    if (isNaN(y) || isNaN(m) || isNaN(d)) return dateStr;\r\n-    const months = [\"jan\",\"feb\",\"mar\",\"apr\",\"may\",\"jun\",\"jul\",\"aug\",\"sep\",\"oct\",\"nov\",\"dec\"];\r\n-    return `${months[m - 1]}-${d}`;\r\n-  };\r\n-\r\n+  // Fetch bookings from MongoDB\r\n   useEffect(() => {\r\n-    if (typeof window !== \"undefined\") {\r\n-      const saved = window.localStorage.getItem(\"adminAuth\");\r\n-      if (saved !== \"Detailing1313!\") {\r\n-        router.replace(\"/admin\");\r\n-      }\r\n-    }\r\n-  }, [router]);\r\n-\r\n-  // Calculate total revenue\r\n-  const totalRevenue = bookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n-\r\n-  // Add new booking handled by child callback\r\n-\r\n-  // Add booking via child component callback\r\n-  const handleAddFromChild = (payload) => {\r\n-    setBookings(prev => {\r\n-      const maxId = prev.reduce((m, b) => Math.max(m, b.id || 0), 0);\r\n-      return [\r\n-        ...prev,\r\n-        {\r\n-          ...payload,\r\n-          id: maxId + 1,\r\n+    async function fetchBookings() {\r\n+      }, []);\r\n+      .then(data => {\r\n+        if (data.success) {\r\n+          setBookings(data.bookings.map(b => ({ ...b, id: b._id || b.id })));\r\n         }\r\n-      ];\r\n-    });\r\n+        setLoading(false);\r\n+      })\r\n+      .catch(() => setLoading(false));\r\n   };\r\n \r\n   // Show booking details modal\r\n   const handleShowDetail = (booking) => {\r\n@@ -165,51 +80,55 @@\n               </button>\r\n             ))}\r\n           </div>\r\n           <div className=\"overflow-x-auto\">\r\n-          <table className=\"w-full text-left border-collapse min-w-[760px] text-xs sm:text-sm\">\r\n-            <thead>\r\n-              <tr style={{ background: '#f5f5f5' }}>\r\n-                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n-                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n-                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Car</th>\r\n-                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n-                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n-                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Time</th>\r\n-                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n-              </tr>\r\n-            </thead>\r\n-            <tbody>\r\n-              {[...bookings]\r\n-                .filter(b => statusFilter === 'all' ? true : b.status === statusFilter)\r\n-                .sort((a, b) => {\r\n-                  const aDT = new Date(`${a.date || '1970-01-01'}T${(a.time || '00:00')}:00`).getTime();\r\n-                  const bDT = new Date(`${b.date || '1970-01-01'}T${(b.time || '00:00')}:00`).getTime();\r\n-                  return bDT - aDT; // most recent first\r\n-                })\r\n-                .map(b => (\r\n-                <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n-                  <td className=\"py-2 px-2 sm:px-3\">\r\n-                    <span\r\n-                      aria-label={b.status}\r\n-                      className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}\r\n-                    >\r\n-                      <span className=\"sm:hidden\">\r\n-                        {b.status === 'complete' ? 'C' : b.status === 'pending' ? 'P' : (b.status?.[0]?.toUpperCase() || '')}\r\n-                      </span>\r\n-                      <span className=\"hidden sm:inline\">{b.status}</span>\r\n-                    </span>\r\n-                  </td>\r\n-                  <td className=\"py-2 px-2 sm:px-3 max-w-[140px] sm:max-w-none truncate\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleShowDetail(b)}>{b.name}</td>\r\n-                  <td className=\"py-2 px-2 sm:px-3 max-w-[160px] truncate\" style={{ color: '#222' }}>{b.carName || \"--\"}</td>\r\n-                  <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{b.service}</td>\r\n-                  <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{formatDateShort(b.date)}</td>\r\n-                  <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{b.time || \"--\"}</td>\r\n-                  <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>${b.amount}</td>\r\n-                </tr>\r\n-              ))}\r\n-            </tbody>\r\n-          </table>\r\n+            {loading ? (\r\n+              <div className=\"py-10 text-center text-blue-600 font-semibold text-lg\">Loading bookings...</div>\r\n+            ) : (\r\n+              <table className=\"w-full text-left border-collapse min-w-[760px] text-xs sm:text-sm\">\r\n+                <thead>\r\n+                  <tr style={{ background: '#f5f5f5' }}>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Car</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Time</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n+                  </tr>\r\n+                </thead>\r\n+                <tbody>\r\n+                  {[...bookings]\r\n+                    .filter(b => statusFilter === 'all' ? true : b.status === statusFilter)\r\n+                    .sort((a, b) => {\r\n+                      const aDT = new Date(`${a.date || '1970-01-01'}T${(a.time || '00:00')}:00`).getTime();\r\n+                      const bDT = new Date(`${b.date || '1970-01-01'}T${(b.time || '00:00')}:00`).getTime();\r\n+                      return bDT - aDT; // most recent first\r\n+                    })\r\n+                    .map(b => (\r\n+                    <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n+                      <td className=\"py-2 px-2 sm:px-3\">\r\n+                        <span\r\n+                          aria-label={b.status}\r\n+                          className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}\r\n+                        >\r\n+                          <span className=\"sm:hidden\">\r\n+                            {b.status === 'complete' ? 'C' : b.status === 'pending' ? 'P' : (b.status?.[0]?.toUpperCase() || '')}\r\n+                          </span>\r\n+                          <span className=\"hidden sm:inline\">{b.status}</span>\r\n+                        </span>\r\n+                      </td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 max-w-[140px] sm:max-w-none truncate\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleShowDetail(b)}>{b.name}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 max-w-[160px] truncate\" style={{ color: '#222' }}>{b.carName || \"--\"}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{b.service}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{formatDateShort(b.date)}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{b.time || \"--\"}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>${b.amount}</td>\r\n+                    </tr>\r\n+                  ))}\r\n+                </tbody>\r\n+              </table>\r\n+            )}\r\n           </div>\r\n         </div>\r\n         {/* Booking details modal */}\r\n         {showDetail && detailBooking && (\r\n@@ -293,817 +212,4 @@\n       </div>\r\n     </div>\r\n   );\r\n }\r\n-import { useEffect, useState } from \"react\";\r\n-import AdminAddBooking from \"../components/AdminAddBooking\";\r\n-import { useRouter } from \"next/router\";\r\n-\r\n-// Mock booking data for demo\r\n-const initialBookings = [\r\n-  {\r\n-    id: 1,\r\n-    name: \"John Doe\",\r\n-    service: \"Complete Interior Detail\",\r\n-    date: \"2025-10-10\",\r\n-    time: \"14:30\",\r\n-    amount: 130,\r\n-    status: \"complete\",\r\n-    phone: \"902-555-1234\",\r\n-    email: \"john@example.com\",\r\n-    location: \"Halifax\",\r\n-    addOns: [{ label: \"Pet Hair Removal\", price: 20 }],\r\n-    carType: \"SUV\"\r\n-  },\r\n-  {\r\n-    id: 2,\r\n-    name: \"Jane Smith\",\r\n-    service: \"Premium Exterior Wash\",\r\n-    date: \"2025-10-12\",\r\n-    time: \"10:00\",\r\n-    amount: 50,\r\n-    status: \"pending\",\r\n-    phone: \"902-555-5678\",\r\n-    email: \"jane@example.com\",\r\n-    location: \"Dartmouth\",\r\n-    addOns: [\r\n-      { label: \"Clay Bar\", price: 20 },\r\n-      { label: \"Iron Removal\", price: 25 },\r\n-      { label: \"Ceramic Sealant\", price: 10 }\r\n-    ],\r\n-    carType: \"Sedan\"\r\n-  },\r\n-  {\r\n-    id: 3,\r\n-    name: \"Alex Lee\",\r\n-    service: \"Ultimate Full Detail\",\r\n-    date: \"2025-10-15\",\r\n-    time: \"09:15\",\r\n-    amount: 160,\r\n-    status: \"complete\",\r\n-    phone: \"902-555-9999\",\r\n-    email: \"alex@example.com\",\r\n-    location: \"Bedford\",\r\n-    addOns: [\r\n-      { label: \"Pet Hair Removal\", price: 20 },\r\n-      { label: \"Clay Bar\", price: 20 },\r\n-      { label: \"Iron Removal\", price: 25 }\r\n-    ],\r\n-    carType: \"Truck\"\r\n-  },\r\n-];\r\n-\r\n-export default function AdminDashboard() {\r\n-  const router = useRouter();\r\n-  const [bookings, setBookings] = useState(initialBookings);\r\n-  const [showAdd, setShowAdd] = useState(false);\r\n-  const [showDetail, setShowDetail] = useState(false);\r\n-  const [detailBooking, setDetailBooking] = useState(null);\r\n-  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n-  const [statusFilter, setStatusFilter] = useState(\"all\");\r\n-  // Booking add modal is handled in AdminAddBooking component\r\n-\r\n-  // Display date as \"oct-19\" while keeping year in stored value\r\n-  const formatDateShort = (dateStr) => {\r\n-    if (!dateStr) return \"\";\r\n-    const parts = dateStr.split(\"-\");\r\n-    if (parts.length !== 3) return dateStr;\r\n-    const y = parseInt(parts[0], 10);\r\n-    const m = parseInt(parts[1], 10);\r\n-    const d = parseInt(parts[2], 10);\r\n-    if (isNaN(y) || isNaN(m) || isNaN(d)) return dateStr;\r\n-    const months = [\"jan\",\"feb\",\"mar\",\"apr\",\"may\",\"jun\",\"jul\",\"aug\",\"sep\",\"oct\",\"nov\",\"dec\"];\r\n-    return `${months[m - 1]}-${d}`;\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    if (typeof window !== \"undefined\") {\r\n-      const saved = window.localStorage.getItem(\"adminAuth\");\r\n-      if (saved !== \"Detailing1313!\") {\r\n-        router.replace(\"/admin\");\r\n-      }\r\n-    }\r\n-  }, [router]);\r\n-\r\n-  // Calculate total revenue\r\n-  const totalRevenue = bookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n-\r\n-  // Add new booking handled by child callback\r\n-\r\n-  // Add booking via child component callback\r\n-  const handleAddFromChild = (payload) => {\r\n-    setBookings(prev => {\r\n-      const maxId = prev.reduce((m, b) => Math.max(m, b.id || 0), 0);\r\n-      return [\r\n-        ...prev,\r\n-        {\r\n-          ...payload,\r\n-          id: maxId + 1,\r\n-        }\r\n-      ];\r\n-    });\r\n-  };\r\n-\r\n-  // Show booking details modal\r\n-  const handleShowDetail = (booking) => {\r\n-    setDetailBooking(booking);\r\n-    setShowDeleteConfirm(false);\r\n-    setShowDetail(true);\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n-      <div className=\"max-w-5xl mx-auto\">\r\n-        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n-        {/* Revenue summary */}\r\n-        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n-          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n-            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n-            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n-          </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n-            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n-            <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n-          </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n-            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Pending</div>\r\n-            <div className=\"text-3xl font-bold text-yellow-600\">{bookings.filter(b => b.status === \"pending\").length}</div>\r\n-          </div>\r\n-        </div>\r\n-        {/* Booking list */}\r\n-        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n-          <div className=\"flex justify-between items-center mb-4\">\r\n-            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n-            <button\r\n-              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-              onClick={() => setShowAdd(true)}\r\n-            >\r\n-              Add Booking\r\n-            </button>\r\n-          </div>\r\n-          {/* Status Filter */}\r\n-          <div className=\"flex items-center gap-2 mb-4\">\r\n-            <span className=\"text-sm text-gray-600\">Filter:</span>\r\n-            {[\r\n-              { key: 'all', label: 'All' },\r\n-              { key: 'pending', label: 'Pending' },\r\n-              { key: 'complete', label: 'Complete' },\r\n-            ].map(opt => (\r\n-              <button\r\n-                key={opt.key}\r\n-                type=\"button\"\r\n-                onClick={() => setStatusFilter(opt.key)}\r\n-                className={`px-3 py-1 rounded-full text-sm border ${statusFilter === opt.key ? 'bg-blue-600 text-white border-blue-600' : 'bg-white text-blue-700 border-blue-200 hover:bg-blue-50'}`}\r\n-              >\r\n-                {opt.label}\r\n-              </button>\r\n-            ))}\r\n-          </div>\r\n-          <div className=\"overflow-x-auto\">\r\n-          <table className=\"w-full text-left border-collapse min-w-[640px] text-xs sm:text-sm\">\r\n-            <thead>\r\n-              <tr style={{ background: '#f5f5f5' }}>\r\n-                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n-                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n-                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n-                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n-                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Time</th>\r\n-                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n-              </tr>\r\n-            </thead>\r\n-            <tbody>\r\n-              {[...bookings]\r\n-                .filter(b => statusFilter === 'all' ? true : b.status === statusFilter)\r\n-                .sort((a, b) => {\r\n-                  const aDT = new Date(`${a.date || '1970-01-01'}T${(a.time || '00:00')}:00`).getTime();\r\n-                  const bDT = new Date(`${b.date || '1970-01-01'}T${(b.time || '00:00')}:00`).getTime();\r\n-                  return bDT - aDT; // most recent first\r\n-                })\r\n-                .map(b => (\r\n-                <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n-                  <td className=\"py-2 px-2 sm:px-3\">\r\n-                    <span\r\n-                      aria-label={b.status}\r\n-                      className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}\r\n-                    >\r\n-                      <span className=\"sm:hidden\">\r\n-                        {b.status === 'complete' ? 'C' : b.status === 'pending' ? 'P' : (b.status?.[0]?.toUpperCase() || '')}\r\n-                      </span>\r\n-                      <span className=\"hidden sm:inline\">{b.status}</span>\r\n-                    </span>\r\n-                  </td>\r\n-                  <td className=\"py-2 px-2 sm:px-3 max-w-[140px] sm:max-w-none truncate\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleShowDetail(b)}>{b.name}</td>\r\n-                  <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{b.service}</td>\r\n-                  <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{formatDateShort(b.date)}</td>\r\n-                  <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{b.time || \"--\"}</td>\r\n-                  <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>${b.amount}</td>\r\n-                </tr>\r\n-              ))}\r\n-            </tbody>\r\n-          </table>\r\n-          </div>\r\n-        </div>\r\n-        {/* Booking details modal */}\r\n-        {showDetail && detailBooking && (\r\n-          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n-              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n-              <div className=\"space-y-3 text-gray-800\">\r\n-                <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n-                <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n-                {detailBooking.addOns && detailBooking.addOns.length > 0 && (\r\n-                  <div>\r\n-                    <span className=\"font-semibold\">Add-Ons:</span>\r\n-                    <ul className=\"list-disc ml-6 mt-1\">\r\n-                      {detailBooking.addOns.map((a, i) => (\r\n-                        <li key={i}>{a.label}</li>\r\n-                      ))}\r\n-                    </ul>\r\n-                  </div>\r\n-                )}\r\n-                <div><span className=\"font-semibold\">Date:</span> {formatDateShort(detailBooking.date)}</div>\r\n-                <div><span className=\"font-semibold\">Time:</span> {detailBooking.time || \"--\"}</div>\r\n-                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n-                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n-                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n-                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n-                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n-                \r\n-              </div>\r\n-              <div className=\"mt-8 flex gap-3\">\r\n-                {!showDeleteConfirm ? (\r\n-                  <>\r\n-                    <button\r\n-                      className=\"w-1/2 py-3 rounded-lg bg-red-600 hover:bg-red-700 text-white font-semibold\"\r\n-                      onClick={() => setShowDeleteConfirm(true)}\r\n-                    >\r\n-                      Delete\r\n-                    </button>\r\n-                    <button\r\n-                      className=\"w-1/2 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-                      onClick={() => {\r\n-                        setShowDetail(false);\r\n-                        setShowDeleteConfirm(false);\r\n-                      }}\r\n-                    >\r\n-                      Close\r\n-                    </button>\r\n-                  </>\r\n-                ) : (\r\n-                  <>\r\n-                    <button\r\n-                      className=\"w-1/2 py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\"\r\n-                      onClick={() => setShowDeleteConfirm(false)}\r\n-                    >\r\n-                      Cancel\r\n-                    </button>\r\n-                    <button\r\n-                      className=\"w-1/2 py-3 rounded-lg bg-red-600 hover:bg-red-700 text-white font-semibold\"\r\n-                      onClick={() => {\r\n-                        setBookings(prev => prev.filter(b => b.id !== detailBooking.id));\r\n-                        setShowDeleteConfirm(false);\r\n-                        setShowDetail(false);\r\n-                        setDetailBooking(null);\r\n-                      }}\r\n-                    >\r\n-                      Confirm Delete\r\n-                    </button>\r\n-                  </>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-        {/* Add booking modal (component) */}\r\n-        <AdminAddBooking\r\n-          open={showAdd}\r\n-          onClose={() => setShowAdd(false)}\r\n-          onAdd={(payload) => handleAddFromChild(payload)}\r\n-        />\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import { useEffect, useState } from \"react\";\r\n-import { useRouter } from \"next/router\";\r\n-\r\n-// Mock booking data for demo\r\n-const initialBookings = [\r\n-  {\r\n-    id: 1,\r\n-    name: \"John Doe\",\r\n-    service: \"Complete Interior Detail\",\r\n-    date: \"2025-10-10\",\r\n-    time: \"14:30\",\r\n-    amount: 130,\r\n-    status: \"complete\",\r\n-    phone: \"902-555-1234\",\r\n-    email: \"john@example.com\",\r\n-    location: \"Halifax\",\r\n-    addOns: [{ label: \"Pet Hair Removal\", price: 20 }],\r\n-    carType: \"SUV\"\r\n-  },\r\n-  {\r\n-    id: 2,\r\n-    name: \"Jane Smith\",\r\n-    service: \"Premium Exterior Wash\",\r\n-    date: \"2025-10-12\",\r\n-    time: \"10:00\",\r\n-    amount: 50,\r\n-    status: \"pending\",\r\n-    phone: \"902-555-5678\",\r\n-    email: \"jane@example.com\",\r\n-    location: \"Dartmouth\",\r\n-    addOns: [\r\n-      { label: \"Clay Bar\", price: 20 },\r\n-      { label: \"Iron Removal\", price: 25 },\r\n-      { label: \"Ceramic Sealant\", price: 10 }\r\n-    ],\r\n-    carType: \"Sedan\"\r\n-  },\r\n-  {\r\n-    id: 3,\r\n-    name: \"Alex Lee\",\r\n-    service: \"Ultimate Full Detail\",\r\n-    date: \"2025-10-15\",\r\n-    time: \"09:15\",\r\n-    amount: 160,\r\n-    status: \"complete\",\r\n-    phone: \"902-555-9999\",\r\n-    email: \"alex@example.com\",\r\n-    location: \"Bedford\",\r\n-    addOns: [\r\n-      { label: \"Pet Hair Removal\", price: 20 },\r\n-      { label: \"Clay Bar\", price: 20 },\r\n-      { label: \"Iron Removal\", price: 25 }\r\n-    ],\r\n-    carType: \"Truck\"\r\n-  },\r\n-];\r\n-\r\n-export default function AdminDashboard() {\r\n-  const router = useRouter();\r\n-  const [bookings, setBookings] = useState(initialBookings);\r\n-  const [showAdd, setShowAdd] = useState(false);\r\n-  const [showDetail, setShowDetail] = useState(false);\r\n-  const [detailBooking, setDetailBooking] = useState(null);\r\n-  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n-  const [statusFilter, setStatusFilter] = useState(\"all\");\r\n-  // Service/add-on logic\r\n-  const serviceOptions = [\r\n-    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: true },\r\n-    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n-    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n-  ];\r\n-  const addOnOptions = [\r\n-    { label: \"Pet Hair Removal\", price: 20 },\r\n-    { label: \"Clay Bar\", price: 20 },\r\n-    { label: \"Iron Removal\", price: 25 },\r\n-    { label: \"Ceramic Sealant\", price: 10 },\r\n-  ];\r\n-  const carTypeOptions = [\r\n-    { label: \"Sedan\", price: 0 },\r\n-    { label: \"SUV\", price: 10 },\r\n-    { label: \"Truck\", price: 20 },\r\n-  ];\r\n-  // Booking state\r\n-  const [newBooking, setNewBooking] = useState({\r\n-    name: \"\",\r\n-    service: serviceOptions[0].title,\r\n-    date: \"\",\r\n-    time: \"\",\r\n-    amount: serviceOptions[0].basePrice,\r\n-    status: \"pending\",\r\n-    phone: \"\",\r\n-    email: \"\",\r\n-    location: \"\",\r\n-    addOns: [],\r\n-    carType: carTypeOptions[0].label,\r\n-  });\r\n-  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n-\r\n-  // Display date as \"oct-19\" while keeping year in stored value\r\n-  const formatDateShort = (dateStr) => {\r\n-    if (!dateStr) return \"\";\r\n-    const parts = dateStr.split(\"-\");\r\n-    if (parts.length !== 3) return dateStr;\r\n-    const y = parseInt(parts[0], 10);\r\n-    const m = parseInt(parts[1], 10);\r\n-    const d = parseInt(parts[2], 10);\r\n-    if (isNaN(y) || isNaN(m) || isNaN(d)) return dateStr;\r\n-    const months = [\"jan\",\"feb\",\"mar\",\"apr\",\"may\",\"jun\",\"jul\",\"aug\",\"sep\",\"oct\",\"nov\",\"dec\"];\r\n-    return `${months[m - 1]}-${d}`;\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    if (typeof window !== \"undefined\") {\r\n-      const saved = window.localStorage.getItem(\"adminAuth\");\r\n-      if (saved !== \"Detailing1313!\") {\r\n-        router.replace(\"/admin\");\r\n-      }\r\n-    }\r\n-  }, [router]);\r\n-\r\n-  // Calculate total revenue\r\n-  const totalRevenue = bookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n-\r\n-  // Add new booking\r\n-  // Calculate price\r\n-  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n-    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n-    // 1) Base price\r\n-    let base = service ? service.basePrice : 0;\r\n-    // Complete Interior Detail uses fixed base by car type\r\n-    if (serviceTitle === \"Complete Interior Detail\") {\r\n-      if (carTypeLabel === \"SUV\") base = 130;\r\n-      else if (carTypeLabel === \"Truck\") base = 140;\r\n-      else base = 110; // Sedan\r\n-    } else {\r\n-      // For other services, generic car type surcharge applies\r\n-      const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n-      if (carType) base += carType.price;\r\n-    }\r\n-\r\n-    // 2) Add-ons total according to service rules\r\n-    let addOnTotal = 0;\r\n-    if (service && service.hasAddOns && addOns.length) {\r\n-      let filteredAddOns = [];\r\n-      if (serviceTitle === \"Premium Exterior Wash\") {\r\n-        filteredAddOns = addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n-      } else if (serviceTitle === \"Complete Interior Detail\") {\r\n-        filteredAddOns = addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n-      } else if (serviceTitle === \"Ultimate Full Detail\") {\r\n-        filteredAddOns = addOns; // show all\r\n-      }\r\n-      addOnTotal = filteredAddOns.reduce((sum, a) => sum + a.price, 0);\r\n-      // Combo discount for Clay Bar + Iron Removal\r\n-      const clay = filteredAddOns.find(a => a.label === \"Clay Bar\");\r\n-      const iron = filteredAddOns.find(a => a.label === \"Iron Removal\");\r\n-      if (clay && iron) addOnTotal -= 5;\r\n-    }\r\n-\r\n-    return base + addOnTotal;\r\n-  };\r\n-\r\n-  // Add booking\r\n-  const handleAddBooking = (e) => {\r\n-    e.preventDefault();\r\n-    setBookings([\r\n-      ...bookings,\r\n-      {\r\n-        ...newBooking,\r\n-        id: bookings.length + 1,\r\n-        amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n-      }\r\n-    ]);\r\n-    setNewBooking({\r\n-      name: \"\",\r\n-      service: serviceOptions[0].title,\r\n-      date: \"\",\r\n-      time: \"\",\r\n-      amount: serviceOptions[0].basePrice,\r\n-      status: \"pending\",\r\n-      phone: \"\",\r\n-      email: \"\",\r\n-      location: \"\",\r\n-      addOns: [],\r\n-      carType: carTypeOptions[0].label,\r\n-    });\r\n-    setShowAdd(false);\r\n-  };\r\n-\r\n-  // Show booking details modal\r\n-  const handleShowDetail = (booking) => {\r\n-    setDetailBooking(booking);\r\n-    setShowDeleteConfirm(false);\r\n-    setShowDetail(true);\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n-      <div className=\"max-w-5xl mx-auto\">\r\n-        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n-        {/* Revenue summary */}\r\n-        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n-          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n-            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n-            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n-          </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n-            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n-            <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n-          </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n-            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Pending</div>\r\n-            <div className=\"text-3xl font-bold text-yellow-600\">{bookings.filter(b => b.status === \"pending\").length}</div>\r\n-          </div>\r\n-        </div>\r\n-        {/* Booking list */}\r\n-        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n-          <div className=\"flex justify-between items-center mb-4\">\r\n-            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n-            <button\r\n-              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-              onClick={() => setShowAdd(true)}\r\n-            >\r\n-              Add Booking\r\n-            </button>\r\n-          </div>\r\n-          {/* Status Filter */}\r\n-          <div className=\"flex items-center gap-2 mb-4\">\r\n-            <span className=\"text-sm text-gray-600\">Filter:</span>\r\n-            {[\r\n-              { key: 'all', label: 'All' },\r\n-              { key: 'pending', label: 'Pending' },\r\n-              { key: 'complete', label: 'Complete' },\r\n-            ].map(opt => (\r\n-              <button\r\n-                key={opt.key}\r\n-                type=\"button\"\r\n-                onClick={() => setStatusFilter(opt.key)}\r\n-                className={`px-3 py-1 rounded-full text-sm border ${statusFilter === opt.key ? 'bg-blue-600 text-white border-blue-600' : 'bg-white text-blue-700 border-blue-200 hover:bg-blue-50'}`}\r\n-              >\r\n-                {opt.label}\r\n-              </button>\r\n-            ))}\r\n-          </div>\r\n-          <div className=\"overflow-x-auto\">\r\n-          <table className=\"w-full text-left border-collapse min-w-[640px] text-xs sm:text-sm\">\r\n-            <thead>\r\n-              <tr style={{ background: '#f5f5f5' }}>\r\n-                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n-                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n-                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n-                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n-                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Time</th>\r\n-                <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n-              </tr>\r\n-            </thead>\r\n-            <tbody>\r\n-              {[...bookings]\r\n-                .filter(b => statusFilter === 'all' ? true : b.status === statusFilter)\r\n-                .sort((a, b) => {\r\n-                  const aDT = new Date(`${a.date || '1970-01-01'}T${(a.time || '00:00')}:00`).getTime();\r\n-                  const bDT = new Date(`${b.date || '1970-01-01'}T${(b.time || '00:00')}:00`).getTime();\r\n-                  return bDT - aDT; // most recent first\r\n-                })\r\n-                .map(b => (\r\n-                <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n-                  <td className=\"py-2 px-2 sm:px-3\">\r\n-                    <span\r\n-                      aria-label={b.status}\r\n-                      className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}\r\n-                    >\r\n-                      <span className=\"sm:hidden\">\r\n-                        {b.status === 'complete' ? 'C' : b.status === 'pending' ? 'P' : (b.status?.[0]?.toUpperCase() || '')}\r\n-                      </span>\r\n-                      <span className=\"hidden sm:inline\">{b.status}</span>\r\n-                    </span>\r\n-                  </td>\r\n-                  <td className=\"py-2 px-2 sm:px-3 max-w-[140px] sm:max-w-none truncate\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleShowDetail(b)}>{b.name}</td>\r\n-                  <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{b.service}</td>\r\n-                  <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{formatDateShort(b.date)}</td>\r\n-                  <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{b.time || \"--\"}</td>\r\n-                  <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>${b.amount}</td>\r\n-                </tr>\r\n-              ))}\r\n-            </tbody>\r\n-          </table>\r\n-          </div>\r\n-        </div>\r\n-        {/* Booking details modal */}\r\n-        {showDetail && detailBooking && (\r\n-          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n-              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n-              <div className=\"space-y-3 text-gray-800\">\r\n-                <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n-                <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n-                {detailBooking.addOns && detailBooking.addOns.length > 0 && (\r\n-                  <div>\r\n-                    <span className=\"font-semibold\">Add-Ons:</span>\r\n-                    <ul className=\"list-disc ml-6 mt-1\">\r\n-                      {detailBooking.addOns.map((a, i) => (\r\n-                        <li key={i}>{a.label}</li>\r\n-                      ))}\r\n-                    </ul>\r\n-                  </div>\r\n-                )}\r\n-                <div><span className=\"font-semibold\">Date:</span> {formatDateShort(detailBooking.date)}</div>\r\n-                <div><span className=\"font-semibold\">Time:</span> {detailBooking.time || \"--\"}</div>\r\n-                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n-                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n-                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n-                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n-                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n-                \r\n-              </div>\r\n-              <div className=\"mt-8 flex gap-3\">\r\n-                {!showDeleteConfirm ? (\r\n-                  <>\r\n-                    <button\r\n-                      className=\"w-1/2 py-3 rounded-lg bg-red-600 hover:bg-red-700 text-white font-semibold\"\r\n-                      onClick={() => setShowDeleteConfirm(true)}\r\n-                    >\r\n-                      Delete\r\n-                    </button>\r\n-                    <button\r\n-                      className=\"w-1/2 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-                      onClick={() => {\r\n-                        setShowDetail(false);\r\n-                        setShowDeleteConfirm(false);\r\n-                      }}\r\n-                    >\r\n-                      Close\r\n-                    </button>\r\n-                  </>\r\n-                ) : (\r\n-                  <>\r\n-                    <button\r\n-                      className=\"w-1/2 py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\"\r\n-                      onClick={() => setShowDeleteConfirm(false)}\r\n-                    >\r\n-                      Cancel\r\n-                    </button>\r\n-                    <button\r\n-                      className=\"w-1/2 py-3 rounded-lg bg-red-600 hover:bg-red-700 text-white font-semibold\"\r\n-                      onClick={() => {\r\n-                        setBookings(prev => prev.filter(b => b.id !== detailBooking.id));\r\n-                        setShowDeleteConfirm(false);\r\n-                        setShowDetail(false);\r\n-                        setDetailBooking(null);\r\n-                      }}\r\n-                    >\r\n-                      Confirm Delete\r\n-                    </button>\r\n-                  </>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-        {/* Add booking modal */}\r\n-        {showAdd && (\r\n-          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-            <div\r\n-              className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n-              style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n-            >\r\n-              {/* Close (X) button */}\r\n-              <button\r\n-                type=\"button\"\r\n-                aria-label=\"Close\"\r\n-                onClick={() => setShowAdd(false)}\r\n-                className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n-                style={{ background: 'none', border: 'none' }}\r\n-              >\r\n-                &times;\r\n-              </button>\r\n-              <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n-              <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n-                <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n-                  {/* Name */}\r\n-                  <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Service dropdown */}\r\n-                  <select required value={newBooking.service} onChange={e => {\r\n-                    const selectedService = e.target.value;\r\n-                    setNewBooking(nb => ({\r\n-                      ...nb,\r\n-                      service: selectedService,\r\n-                      addOns: [],\r\n-                      amount: calculatePrice(selectedService, [], nb.carType),\r\n-                    }));\r\n-                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-                    {serviceOptions.map(s => (\r\n-                      <option key={s.title} value={s.title}>{s.title}</option>\r\n-                    ))}\r\n-                  </select>\r\n-                  {/* Car type dropdown */}\r\n-                  <select required value={newBooking.carType} onChange={e => {\r\n-                    const carType = e.target.value;\r\n-                    setNewBooking(nb => ({\r\n-                      ...nb,\r\n-                      carType,\r\n-                      amount: calculatePrice(nb.service, nb.addOns, carType),\r\n-                    }));\r\n-                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-                    {carTypeOptions.map(c => (\r\n-                      <option key={c.label} value={c.label}>{c.label}</option>\r\n-                    ))}\r\n-                  </select>\r\n-                  {/* Add-ons (always show for Premium Exterior Wash, and for other services as per rules) */}\r\n-                  <div>\r\n-                    <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n-                    <div className=\"flex flex-wrap gap-3 mb-2\">\r\n-                      {(() => {\r\n-                        let validAddOns = [];\r\n-                        if (newBooking.service === \"Premium Exterior Wash\") {\r\n-                          validAddOns = addOnOptions.filter(opt => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(opt.label));\r\n-                        } else if (newBooking.service === \"Complete Interior Detail\") {\r\n-                          validAddOns = addOnOptions.filter(opt => opt.label === \"Pet Hair Removal\");\r\n-                        } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n-                          validAddOns = addOnOptions;\r\n-                        }\r\n-                        return validAddOns.map(opt => (\r\n-                          <button\r\n-                            key={opt.label}\r\n-                            type=\"button\"\r\n-                            onClick={() => {\r\n-                              setNewBooking(nb => {\r\n-                                const exists = nb.addOns.find(a => a.label === opt.label);\r\n-                                const updated = exists\r\n-                                  ? nb.addOns.filter(a => a.label !== opt.label)\r\n-                                  : [...nb.addOns, opt];\r\n-                                return {\r\n-                                  ...nb,\r\n-                                  addOns: updated,\r\n-                                  amount: calculatePrice(nb.service, updated, nb.carType),\r\n-                                };\r\n-                              });\r\n-                            }}\r\n-                            className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n-                          >\r\n-                            {opt.label}\r\n-                          </button>\r\n-                        ));\r\n-                      })()}\r\n-                    </div>\r\n-                    {/* Combo discount message */}\r\n-                    {(() => {\r\n-                      let validAddOns = [];\r\n-                      if (newBooking.service === \"Premium Exterior Wash\") {\r\n-                        validAddOns = newBooking.addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n-                      } else if (newBooking.service === \"Complete Interior Detail\") {\r\n-                        validAddOns = newBooking.addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n-                      } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n-                        validAddOns = newBooking.addOns;\r\n-                      }\r\n-                      return validAddOns.find(a => a.label === \"Clay Bar\") && validAddOns.find(a => a.label === \"Iron Removal\") ? (\r\n-                        <div className=\"text-xs text-blue-600 mt-2 font-semibold\">Combo discount applied (-$5)</div>\r\n-                      ) : null;\r\n-                    })()}\r\n-                  </div>\r\n-                  {/* Date */}\r\n-                  <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Time (enabled after selecting date) */}\r\n-                  <input\r\n-                    type=\"time\"\r\n-                    required\r\n-                    disabled={!newBooking.date}\r\n-                    value={newBooking.time}\r\n-                    onChange={e => setNewBooking({ ...newBooking, time: e.target.value })}\r\n-                    className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800 disabled:bg-gray-100\"\r\n-                  />\r\n-                  {/* Amount (auto-calculated, read-only) */}\r\n-                  <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n-                  {/* Phone (numbers only) */}\r\n-                  <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n-                    // Only allow numbers\r\n-                    const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n-                    setNewBooking({ ...newBooking, phone: val });\r\n-                  }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Email */}\r\n-                  <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-                  {/* Location autocomplete (Google Places API) */}\r\n-                  <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n-                    const val = e.target.value;\r\n-                    setNewBooking({ ...newBooking, location: val });\r\n-                    // Simple Google Places Autocomplete (client-side only)\r\n-                    if (window && val.length > 2) {\r\n-                      try {\r\n-                        const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n-                        const data = await resp.json();\r\n-                        setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n-                      } catch {}\r\n-                    } else {\r\n-                      setLocationSuggestions([]);\r\n-                    }\r\n-                  }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n-                  {/* Location suggestions dropdown */}\r\n-                  {locationSuggestions.length > 0 && (\r\n-                    <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n-                      {locationSuggestions.map((sug, i) => (\r\n-                        <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n-                          setNewBooking(nb => ({ ...nb, location: sug }));\r\n-                          setLocationSuggestions([]);\r\n-                        }}>{sug}</div>\r\n-                      ))}\r\n-                    </div>\r\n-                  )}\r\n-                  {/* Status dropdown */}\r\n-                  <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-                    <option value=\"pending\">Pending</option>\r\n-                    <option value=\"complete\">Complete</option>\r\n-                  </select>\r\n-                  <div className=\"flex gap-4 mt-4 pb-4\">\r\n-                    <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n-                    <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={() => setShowAdd(false)}>Cancel</button>\r\n-                  </div>\r\n-                </form>\r\n-              </div>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1760675561190,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,38 +1,101 @@\n import { useEffect, useState } from \"react\";\r\n+import { useCallback } from \"react\";\r\n import AdminAddBooking from \"../components/AdminAddBooking\";\r\n import { useRouter } from \"next/router\";\r\n \r\n export default function AdminDashboard() {\r\n+  // Format date as 'oct-19'\r\n+  function formatDateShort(dateStr) {\r\n+    if (!dateStr) return \"\";\r\n+    const parts = dateStr.split(\"-\");\r\n+    if (parts.length !== 3) return dateStr;\r\n+    const y = parseInt(parts[0], 10);\r\n+    const m = parseInt(parts[1], 10);\r\n+    const d = parseInt(parts[2], 10);\r\n+    if (isNaN(y) || isNaN(m) || isNaN(d)) return dateStr;\r\n+    const months = [\"jan\",\"feb\",\"mar\",\"apr\",\"may\",\"jun\",\"jul\",\"aug\",\"sep\",\"oct\",\"nov\",\"dec\"];\r\n+    return `${months[m - 1]}-${d}`;\r\n+  }\r\n   const router = useRouter();\r\n   const [bookings, setBookings] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n   const [showAdd, setShowAdd] = useState(false);\r\n   const [showDetail, setShowDetail] = useState(false);\r\n   const [detailBooking, setDetailBooking] = useState(null);\r\n+  const [editBooking, setEditBooking] = useState(null);\r\n   const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n   const [statusFilter, setStatusFilter] = useState(\"all\");\r\n+  // Calculate total revenue\r\n+  const totalRevenue = bookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n \r\n   // Fetch bookings from MongoDB\r\n+  const updatePendingToComplete = useCallback(async (bookingsList) => {\r\n+    const now = new Date();\r\n+    const updates = [];\r\n+    for (const b of bookingsList) {\r\n+      if (b.status === 'pending' && b.date && b.time) {\r\n+        const dt = new Date(`${b.date}T${b.time}:00`);\r\n+        if (dt < now) {\r\n+          // Update status in MongoDB\r\n+          updates.push(fetch(`/api/update-booking-status?id=${b.id}&status=complete`, { method: 'PATCH' }));\r\n+        }\r\n+      }\r\n+    }\r\n+    if (updates.length > 0) {\r\n+      await Promise.all(updates);\r\n+      // Refetch bookings after updates\r\n+      return true;\r\n+    }\r\n+    return false;\r\n+  }, []);\r\n+\r\n   useEffect(() => {\r\n-    async function fetchBookings() {\r\n-      }, []);\r\n-      .then(data => {\r\n-        if (data.success) {\r\n-          setBookings(data.bookings.map(b => ({ ...b, id: b._id || b.id })));\r\n+    async function fetchBookingsAndUpdate() {\r\n+      setLoading(true);\r\n+      try {\r\n+        const resp = await fetch(\"/api/get-bookings\");\r\n+        const data = await resp.json();\r\n+        if (resp.ok && data.success) {\r\n+          const bookingsArr = data.bookings.map(b => ({ ...b, id: b._id || b.id }));\r\n+          // Check and update pending bookings\r\n+          const didUpdate = await updatePendingToComplete(bookingsArr);\r\n+          if (didUpdate) {\r\n+            // Refetch after update\r\n+            const resp2 = await fetch(\"/api/get-bookings\");\r\n+            const data2 = await resp2.json();\r\n+            if (resp2.ok && data2.success) {\r\n+              setBookings(data2.bookings.map(b => ({ ...b, id: b._id || b.id })));\r\n+            } else {\r\n+              setBookings([]);\r\n+            }\r\n+          } else {\r\n+            setBookings(bookingsArr);\r\n+          }\r\n+        } else {\r\n+          setBookings([]);\r\n         }\r\n-        setLoading(false);\r\n-      })\r\n-      .catch(() => setLoading(false));\r\n-  };\r\n+      } catch {\r\n+        setBookings([]);\r\n+      }\r\n+      setLoading(false);\r\n+    }\r\n+    fetchBookingsAndUpdate();\r\n+  }, [updatePendingToComplete]);\r\n \r\n   // Show booking details modal\r\n   const handleShowDetail = (booking) => {\r\n     setDetailBooking(booking);\r\n     setShowDeleteConfirm(false);\r\n     setShowDetail(true);\r\n   };\r\n \r\n+  // Edit booking: open modal with data\r\n+  const handleEditBooking = (booking) => {\r\n+    setEditBooking(booking);\r\n+    setShowAdd(true);\r\n+  };\r\n+\r\n   return (\r\n     <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n       <div className=\"max-w-5xl mx-auto\">\r\n         <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n@@ -116,9 +179,9 @@\n                           </span>\r\n                           <span className=\"hidden sm:inline\">{b.status}</span>\r\n                         </span>\r\n                       </td>\r\n-                      <td className=\"py-2 px-2 sm:px-3 max-w-[140px] sm:max-w-none truncate\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleShowDetail(b)}>{b.name}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 max-w-[140px] sm:max-w-none truncate\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleEditBooking(b)}>{b.name}</td>\r\n                       <td className=\"py-2 px-2 sm:px-3 max-w-[160px] truncate\" style={{ color: '#222' }}>{b.carName || \"--\"}</td>\r\n                       <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{b.service}</td>\r\n                       <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{formatDateShort(b.date)}</td>\r\n                       <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{b.time || \"--\"}</td>\r\n@@ -187,10 +250,27 @@\n                       Cancel\r\n                     </button>\r\n                     <button\r\n                       className=\"w-1/2 py-3 rounded-lg bg-red-600 hover:bg-red-700 text-white font-semibold\"\r\n-                      onClick={() => {\r\n-                        setBookings(prev => prev.filter(b => b.id !== detailBooking.id));\r\n+                      onClick={async () => {\r\n+                        if (!detailBooking?.id) return;\r\n+                        setLoading(true);\r\n+                        try {\r\n+                          await fetch(`/api/delete-booking?id=${detailBooking.id}`, { method: 'DELETE' });\r\n+                        } catch {}\r\n+                        // Refresh bookings from DB\r\n+                        try {\r\n+                          const resp = await fetch(\"/api/get-bookings\");\r\n+                          const data = await resp.json();\r\n+                          if (resp.ok && data.success) {\r\n+                            setBookings(data.bookings.map(b => ({ ...b, id: b._id || b.id })));\r\n+                          } else {\r\n+                            setBookings([]);\r\n+                          }\r\n+                        } catch {\r\n+                          setBookings([]);\r\n+                        }\r\n+                        setLoading(false);\r\n                         setShowDeleteConfirm(false);\r\n                         setShowDetail(false);\r\n                         setDetailBooking(null);\r\n                       }}\r\n@@ -205,10 +285,38 @@\n         )}\r\n         {/* Add booking modal (component) */}\r\n         <AdminAddBooking\r\n           open={showAdd}\r\n-          onClose={() => setShowAdd(false)}\r\n+          onClose={() => { setShowAdd(false); setEditBooking(null); }}\r\n           onAdd={(payload) => handleAddFromChild(payload)}\r\n+          editBooking={editBooking}\r\n+          onEdit={async (updated) => {\r\n+            // PATCH to API\r\n+            if (!updated.id) return;\r\n+            setLoading(true);\r\n+            try {\r\n+              await fetch(`/api/update-booking?id=${updated.id}`, {\r\n+                method: 'PATCH',\r\n+                headers: { 'Content-Type': 'application/json' },\r\n+                body: JSON.stringify(updated),\r\n+              });\r\n+            } catch {}\r\n+            // Refresh bookings\r\n+            try {\r\n+              const resp = await fetch(\"/api/get-bookings\");\r\n+              const data = await resp.json();\r\n+              if (resp.ok && data.success) {\r\n+                setBookings(data.bookings.map(b => ({ ...b, id: b._id || b.id }));\r\n+              } else {\r\n+                setBookings([]);\r\n+              }\r\n+            } catch {\r\n+              setBookings([]);\r\n+            }\r\n+            setLoading(false);\r\n+            setShowAdd(false);\r\n+            setEditBooking(null);\r\n+          }}\r\n         />\r\n       </div>\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1760675998184,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,337 @@\n+import { useEffect, useState } from \"react\";\r\n+import { useCallback } from \"react\";\r\n+import AdminAddBooking from \"../components/AdminAddBooking\";\r\n+import { useRouter } from \"next/router\";\r\n+\r\n+export default function AdminDashboard() {\r\n+  // Format date as 'oct-19'\r\n+  function formatDateShort(dateStr) {\r\n+    if (!dateStr) return \"\";\r\n+    const parts = dateStr.split(\"-\");\r\n+    if (parts.length !== 3) return dateStr;\r\n+    const y = parseInt(parts[0], 10);\r\n+    const m = parseInt(parts[1], 10);\r\n+    const d = parseInt(parts[2], 10);\r\n+    if (isNaN(y) || isNaN(m) || isNaN(d)) return dateStr;\r\n+    const months = [\"jan\",\"feb\",\"mar\",\"apr\",\"may\",\"jun\",\"jul\",\"aug\",\"sep\",\"oct\",\"nov\",\"dec\"];\r\n+    return `${months[m - 1]}-${d}`;\r\n+  }\r\n+  const router = useRouter();\r\n+  const [bookings, setBookings] = useState([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+  const [showAdd, setShowAdd] = useState(false);\r\n+  const [showDetail, setShowDetail] = useState(false);\r\n+  const [detailBooking, setDetailBooking] = useState(null);\r\n+  const [editBooking, setEditBooking] = useState(null);\r\n+  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n+  const [statusFilter, setStatusFilter] = useState(\"all\");\r\n+  // Calculate total revenue\r\n+  const totalRevenue = bookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n+\r\n+  // Fetch bookings from MongoDB\r\n+  const updatePendingToComplete = useCallback(async (bookingsList) => {\r\n+    const now = new Date();\r\n+    const updates = [];\r\n+    for (const b of bookingsList) {\r\n+      if (b.status === 'pending' && b.date && b.time) {\r\n+        const dt = new Date(`${b.date}T${b.time}:00`);\r\n+        if (dt < now) {\r\n+          // Update status in MongoDB\r\n+          updates.push(fetch(`/api/update-booking-status?id=${b.id}&status=complete`, { method: 'PATCH' }));\r\n+        }\r\n+      }\r\n+    }\r\n+    if (updates.length > 0) {\r\n+      await Promise.all(updates);\r\n+      // Refetch bookings after updates\r\n+      return true;\r\n+    }\r\n+    return false;\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    async function fetchBookingsAndUpdate() {\r\n+      setLoading(true);\r\n+      try {\r\n+        const resp = await fetch(\"/api/get-bookings\");\r\n+        const data = await resp.json();\r\n+        if (resp.ok && data.success) {\r\n+          const bookingsArr = data.bookings.map(b => ({ ...b, id: b._id || b.id }));\r\n+          // Check and update pending bookings\r\n+          const didUpdate = await updatePendingToComplete(bookingsArr);\r\n+          if (didUpdate) {\r\n+            // Refetch after update\r\n+            const resp2 = await fetch(\"/api/get-bookings\");\r\n+            const data2 = await resp2.json();\r\n+            if (resp2.ok && data2.success) {\r\n+              setBookings(data2.bookings.map(b => ({ ...b, id: b._id || b.id })));\r\n+            } else {\r\n+              setBookings([]);\r\n+            }\r\n+          } else {\r\n+            setBookings(bookingsArr);\r\n+          }\r\n+        } else {\r\n+          setBookings([]);\r\n+        }\r\n+      } catch {\r\n+        setBookings([]);\r\n+      }\r\n+      setLoading(false);\r\n+    }\r\n+    fetchBookingsAndUpdate();\r\n+  }, [updatePendingToComplete]);\r\n+\r\n+  // Show booking details modal\r\n+  const handleShowDetail = (booking) => {\r\n+    setDetailBooking(booking);\r\n+    setShowDeleteConfirm(false);\r\n+    setShowDetail(true);\r\n+  };\r\n+\r\n+  // Edit booking: open modal with data\r\n+  const handleEditBooking = (booking) => {\r\n+    setEditBooking(booking);\r\n+    setShowAdd(true);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n+      <div className=\"max-w-5xl mx-auto\">\r\n+        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n+        {/* Revenue summary */}\r\n+        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n+          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n+            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n+            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n+            <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Pending</div>\r\n+            <div className=\"text-3xl font-bold text-yellow-600\">{bookings.filter(b => b.status === \"pending\").length}</div>\r\n+          </div>\r\n+        </div>\r\n+        {/* Booking list */}\r\n+        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n+          <div className=\"flex justify-between items-center mb-4\">\r\n+            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n+            <button\r\n+              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+              onClick={() => setShowAdd(true)}\r\n+            >\r\n+              Add Booking\r\n+            </button>\r\n+          </div>\r\n+          {/* Status Filter */}\r\n+          <div className=\"flex items-center gap-2 mb-4\">\r\n+            <span className=\"text-sm text-gray-600\">Filter:</span>\r\n+            {[\r\n+              { key: 'all', label: 'All' },\r\n+              { key: 'pending', label: 'Pending' },\r\n+              { key: 'complete', label: 'Complete' },\r\n+            ].map(opt => (\r\n+              <button\r\n+                key={opt.key}\r\n+                type=\"button\"\r\n+                onClick={() => setStatusFilter(opt.key)}\r\n+                className={`px-3 py-1 rounded-full text-sm border ${statusFilter === opt.key ? 'bg-blue-600 text-white border-blue-600' : 'bg-white text-blue-700 border-blue-200 hover:bg-blue-50'}`}\r\n+              >\r\n+                {opt.label}\r\n+              </button>\r\n+            ))}\r\n+          </div>\r\n+          <div className=\"overflow-x-auto\">\r\n+            {loading ? (\r\n+              <div className=\"py-10 text-center text-blue-600 font-semibold text-lg\">Loading bookings...</div>\r\n+            ) : (\r\n+              <table className=\"w-full text-left border-collapse min-w-[760px] text-xs sm:text-sm\">\r\n+                <thead>\r\n+                  <tr style={{ background: '#f5f5f5' }}>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Car</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Time</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Actions</th>\r\n+                  </tr>\r\n+                </thead>\r\n+                <tbody>\r\n+                  {[...bookings]\r\n+                    .filter(b => statusFilter === 'all' ? true : b.status === statusFilter)\r\n+                    .sort((a, b) => {\r\n+                      const aDT = new Date(`${a.date || '1970-01-01'}T${(a.time || '00:00')}:00`).getTime();\r\n+                      const bDT = new Date(`${b.date || '1970-01-01'}T${(b.time || '00:00')}:00`).getTime();\r\n+                      return bDT - aDT; // most recent first\r\n+                    })\r\n+                    .map(b => (\r\n+                    <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n+                      <td className=\"py-2 px-2 sm:px-3\">\r\n+                        <span\r\n+                          aria-label={b.status}\r\n+                          className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}\r\n+                        >\r\n+                          <span className=\"sm:hidden\">\r\n+                            {b.status === 'complete' ? 'C' : b.status === 'pending' ? 'P' : (b.status?.[0]?.toUpperCase() || '')}\r\n+                          </span>\r\n+                          <span className=\"hidden sm:inline\">{b.status}</span>\r\n+                        </span>\r\n+                      </td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 max-w-[140px] sm:max-w-none truncate\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleEditBooking(b)}>{b.name}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 max-w-[160px] truncate\" style={{ color: '#222' }}>{b.carName || \"--\"}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{b.service}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{formatDateShort(b.date)}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{b.time || \"--\"}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>${b.amount}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3\">\r\n+                        <button\r\n+                          type=\"button\"\r\n+                          className=\"px-3 py-1 text-xs rounded-full border border-blue-200 text-blue-700 hover:bg-blue-50\"\r\n+                          onClick={() => {\r\n+                            setDetailBooking(b);\r\n+                            setShowDeleteConfirm(false);\r\n+                            setShowDetail(true);\r\n+                          }}\r\n+                        >\r\n+                          Details\r\n+                        </button>\r\n+                      </td>\r\n+                    </tr>\r\n+                  ))}\r\n+                </tbody>\r\n+              </table>\r\n+            )}\r\n+          </div>\r\n+        </div>\r\n+        {/* Booking details modal */}\r\n+        {showDetail && detailBooking && (\r\n+          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n+              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n+              <div className=\"space-y-3 text-gray-800\">\r\n+                <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n+                <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n+                <div><span className=\"font-semibold\">Car:</span> {detailBooking.carName || \"--\"}</div>\r\n+                <div><span className=\"font-semibold\">Car Type:</span> {detailBooking.carType || \"--\"}</div>\r\n+                {detailBooking.addOns && detailBooking.addOns.length > 0 && (\r\n+                  <div>\r\n+                    <span className=\"font-semibold\">Add-Ons:</span>\r\n+                    <ul className=\"list-disc ml-6 mt-1\">\r\n+                      {detailBooking.addOns.map((a, i) => (\r\n+                        <li key={i}>{a.label}</li>\r\n+                      ))}\r\n+                    </ul>\r\n+                  </div>\r\n+                )}\r\n+                <div><span className=\"font-semibold\">Date:</span> {formatDateShort(detailBooking.date)}</div>\r\n+                <div><span className=\"font-semibold\">Time:</span> {detailBooking.time || \"--\"}</div>\r\n+                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n+                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n+                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n+                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n+                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n+                \r\n+              </div>\r\n+              <div className=\"mt-8 flex gap-3\">\r\n+                {!showDeleteConfirm ? (\r\n+                  <>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-red-600 hover:bg-red-700 text-white font-semibold\"\r\n+                      onClick={() => setShowDeleteConfirm(true)}\r\n+                    >\r\n+                      Delete\r\n+                    </button>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+                      onClick={() => {\r\n+                        setShowDetail(false);\r\n+                        setShowDeleteConfirm(false);\r\n+                      }}\r\n+                    >\r\n+                      Close\r\n+                    </button>\r\n+                  </>\r\n+                ) : (\r\n+                  <>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\"\r\n+                      onClick={() => setShowDeleteConfirm(false)}\r\n+                    >\r\n+                      Cancel\r\n+                    </button>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-red-600 hover:bg-red-700 text-white font-semibold\"\r\n+                      onClick={async () => {\r\n+                        if (!detailBooking?.id) return;\r\n+                        setLoading(true);\r\n+                        try {\r\n+                          await fetch(`/api/delete-booking?id=${detailBooking.id}`, { method: 'DELETE' });\r\n+                        } catch {}\r\n+                        // Refresh bookings from DB\r\n+                        try {\r\n+                          const resp = await fetch(\"/api/get-bookings\");\r\n+                          const data = await resp.json();\r\n+                          if (resp.ok && data.success) {\r\n+                            setBookings(data.bookings.map(b => ({ ...b, id: b._id || b.id })));\r\n+                          } else {\r\n+                            setBookings([]);\r\n+                          }\r\n+                        } catch {\r\n+                          setBookings([]);\r\n+                        }\r\n+                        setLoading(false);\r\n+                        setShowDeleteConfirm(false);\r\n+                        setShowDetail(false);\r\n+                        setDetailBooking(null);\r\n+                      }}\r\n+                    >\r\n+                      Confirm Delete\r\n+                    </button>\r\n+                  </>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+        {/* Add booking modal (component) */}\r\n+        <AdminAddBooking\r\n+          open={showAdd}\r\n+          onClose={() => { setShowAdd(false); setEditBooking(null); }}\r\n+          onAdd={(payload) => handleAddFromChild(payload)}\r\n+          editBooking={editBooking}\r\n+          onEdit={async (updated) => {\r\n+            // PATCH to API\r\n+            if (!updated.id) return;\r\n+            setLoading(true);\r\n+            try {\r\n+              await fetch(`/api/update-booking?id=${updated.id}`, {\r\n+                method: 'PATCH',\r\n+                headers: { 'Content-Type': 'application/json' },\r\n+                body: JSON.stringify(updated),\r\n+              });\r\n+            } catch {}\r\n+            // Refresh bookings\r\n+            try {\r\n+              const resp = await fetch(\"/api/get-bookings\");\r\n+              const data = await resp.json();\r\n+              if (resp.ok && data.success) {\r\n+                setBookings(data.bookings.map(b => ({ ...b, id: b._id || b.id })));\r\n+              } else {\r\n+                setBookings([]);\r\n+              }\r\n+            } catch {\r\n+              setBookings([]);\r\n+            }\r\n+            setLoading(false);\r\n+            setShowAdd(false);\r\n+            setEditBooking(null);\r\n+          }}\r\n+        />\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1760677447157,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,27 @@\n   const [statusFilter, setStatusFilter] = useState(\"all\");\r\n   // Calculate total revenue\r\n   const totalRevenue = bookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n \r\n+  // After a successful add from the child modal, refresh from DB and close the modal\r\n+  const handleAddFromChild = useCallback(async () => {\r\n+    setLoading(true);\r\n+    try {\r\n+      const resp = await fetch(\"/api/get-bookings\");\r\n+      const data = await resp.json();\r\n+      if (resp.ok && data.success) {\r\n+        setBookings(data.bookings.map(b => ({ ...b, id: b._id || b.id })));\r\n+      } else {\r\n+        setBookings([]);\r\n+      }\r\n+    } catch {\r\n+      setBookings([]);\r\n+    }\r\n+    setLoading(false);\r\n+    setShowAdd(false);\r\n+    setEditBooking(null);\r\n+  }, []);\r\n+\r\n   // Fetch bookings from MongoDB\r\n   const updatePendingToComplete = useCallback(async (bookingsList) => {\r\n     const now = new Date();\r\n     const updates = [];\r\n@@ -334,327 +353,4 @@\n       </div>\r\n     </div>\r\n   );\r\n }\r\n-import { useEffect, useState } from \"react\";\r\n-import { useCallback } from \"react\";\r\n-import AdminAddBooking from \"../components/AdminAddBooking\";\r\n-import { useRouter } from \"next/router\";\r\n-\r\n-export default function AdminDashboard() {\r\n-  // Format date as 'oct-19'\r\n-  function formatDateShort(dateStr) {\r\n-    if (!dateStr) return \"\";\r\n-    const parts = dateStr.split(\"-\");\r\n-    if (parts.length !== 3) return dateStr;\r\n-    const y = parseInt(parts[0], 10);\r\n-    const m = parseInt(parts[1], 10);\r\n-    const d = parseInt(parts[2], 10);\r\n-    if (isNaN(y) || isNaN(m) || isNaN(d)) return dateStr;\r\n-    const months = [\"jan\",\"feb\",\"mar\",\"apr\",\"may\",\"jun\",\"jul\",\"aug\",\"sep\",\"oct\",\"nov\",\"dec\"];\r\n-    return `${months[m - 1]}-${d}`;\r\n-  }\r\n-  const router = useRouter();\r\n-  const [bookings, setBookings] = useState([]);\r\n-  const [loading, setLoading] = useState(true);\r\n-  const [showAdd, setShowAdd] = useState(false);\r\n-  const [showDetail, setShowDetail] = useState(false);\r\n-  const [detailBooking, setDetailBooking] = useState(null);\r\n-  const [editBooking, setEditBooking] = useState(null);\r\n-  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n-  const [statusFilter, setStatusFilter] = useState(\"all\");\r\n-  // Calculate total revenue\r\n-  const totalRevenue = bookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n-\r\n-  // Fetch bookings from MongoDB\r\n-  const updatePendingToComplete = useCallback(async (bookingsList) => {\r\n-    const now = new Date();\r\n-    const updates = [];\r\n-    for (const b of bookingsList) {\r\n-      if (b.status === 'pending' && b.date && b.time) {\r\n-        const dt = new Date(`${b.date}T${b.time}:00`);\r\n-        if (dt < now) {\r\n-          // Update status in MongoDB\r\n-          updates.push(fetch(`/api/update-booking-status?id=${b.id}&status=complete`, { method: 'PATCH' }));\r\n-        }\r\n-      }\r\n-    }\r\n-    if (updates.length > 0) {\r\n-      await Promise.all(updates);\r\n-      // Refetch bookings after updates\r\n-      return true;\r\n-    }\r\n-    return false;\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    async function fetchBookingsAndUpdate() {\r\n-      setLoading(true);\r\n-      try {\r\n-        const resp = await fetch(\"/api/get-bookings\");\r\n-        const data = await resp.json();\r\n-        if (resp.ok && data.success) {\r\n-          const bookingsArr = data.bookings.map(b => ({ ...b, id: b._id || b.id }));\r\n-          // Check and update pending bookings\r\n-          const didUpdate = await updatePendingToComplete(bookingsArr);\r\n-          if (didUpdate) {\r\n-            // Refetch after update\r\n-            const resp2 = await fetch(\"/api/get-bookings\");\r\n-            const data2 = await resp2.json();\r\n-            if (resp2.ok && data2.success) {\r\n-              setBookings(data2.bookings.map(b => ({ ...b, id: b._id || b.id })));\r\n-            } else {\r\n-              setBookings([]);\r\n-            }\r\n-          } else {\r\n-            setBookings(bookingsArr);\r\n-          }\r\n-        } else {\r\n-          setBookings([]);\r\n-        }\r\n-      } catch {\r\n-        setBookings([]);\r\n-      }\r\n-      setLoading(false);\r\n-    }\r\n-    fetchBookingsAndUpdate();\r\n-  }, [updatePendingToComplete]);\r\n-\r\n-  // Show booking details modal\r\n-  const handleShowDetail = (booking) => {\r\n-    setDetailBooking(booking);\r\n-    setShowDeleteConfirm(false);\r\n-    setShowDetail(true);\r\n-  };\r\n-\r\n-  // Edit booking: open modal with data\r\n-  const handleEditBooking = (booking) => {\r\n-    setEditBooking(booking);\r\n-    setShowAdd(true);\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n-      <div className=\"max-w-5xl mx-auto\">\r\n-        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n-        {/* Revenue summary */}\r\n-        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n-          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n-            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n-            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n-          </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n-            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n-            <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n-          </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n-            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Pending</div>\r\n-            <div className=\"text-3xl font-bold text-yellow-600\">{bookings.filter(b => b.status === \"pending\").length}</div>\r\n-          </div>\r\n-        </div>\r\n-        {/* Booking list */}\r\n-        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n-          <div className=\"flex justify-between items-center mb-4\">\r\n-            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n-            <button\r\n-              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-              onClick={() => setShowAdd(true)}\r\n-            >\r\n-              Add Booking\r\n-            </button>\r\n-          </div>\r\n-          {/* Status Filter */}\r\n-          <div className=\"flex items-center gap-2 mb-4\">\r\n-            <span className=\"text-sm text-gray-600\">Filter:</span>\r\n-            {[\r\n-              { key: 'all', label: 'All' },\r\n-              { key: 'pending', label: 'Pending' },\r\n-              { key: 'complete', label: 'Complete' },\r\n-            ].map(opt => (\r\n-              <button\r\n-                key={opt.key}\r\n-                type=\"button\"\r\n-                onClick={() => setStatusFilter(opt.key)}\r\n-                className={`px-3 py-1 rounded-full text-sm border ${statusFilter === opt.key ? 'bg-blue-600 text-white border-blue-600' : 'bg-white text-blue-700 border-blue-200 hover:bg-blue-50'}`}\r\n-              >\r\n-                {opt.label}\r\n-              </button>\r\n-            ))}\r\n-          </div>\r\n-          <div className=\"overflow-x-auto\">\r\n-            {loading ? (\r\n-              <div className=\"py-10 text-center text-blue-600 font-semibold text-lg\">Loading bookings...</div>\r\n-            ) : (\r\n-              <table className=\"w-full text-left border-collapse min-w-[760px] text-xs sm:text-sm\">\r\n-                <thead>\r\n-                  <tr style={{ background: '#f5f5f5' }}>\r\n-                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n-                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n-                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Car</th>\r\n-                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n-                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n-                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Time</th>\r\n-                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n-                  </tr>\r\n-                </thead>\r\n-                <tbody>\r\n-                  {[...bookings]\r\n-                    .filter(b => statusFilter === 'all' ? true : b.status === statusFilter)\r\n-                    .sort((a, b) => {\r\n-                      const aDT = new Date(`${a.date || '1970-01-01'}T${(a.time || '00:00')}:00`).getTime();\r\n-                      const bDT = new Date(`${b.date || '1970-01-01'}T${(b.time || '00:00')}:00`).getTime();\r\n-                      return bDT - aDT; // most recent first\r\n-                    })\r\n-                    .map(b => (\r\n-                    <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n-                      <td className=\"py-2 px-2 sm:px-3\">\r\n-                        <span\r\n-                          aria-label={b.status}\r\n-                          className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}\r\n-                        >\r\n-                          <span className=\"sm:hidden\">\r\n-                            {b.status === 'complete' ? 'C' : b.status === 'pending' ? 'P' : (b.status?.[0]?.toUpperCase() || '')}\r\n-                          </span>\r\n-                          <span className=\"hidden sm:inline\">{b.status}</span>\r\n-                        </span>\r\n-                      </td>\r\n-                      <td className=\"py-2 px-2 sm:px-3 max-w-[140px] sm:max-w-none truncate\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleEditBooking(b)}>{b.name}</td>\r\n-                      <td className=\"py-2 px-2 sm:px-3 max-w-[160px] truncate\" style={{ color: '#222' }}>{b.carName || \"--\"}</td>\r\n-                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{b.service}</td>\r\n-                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{formatDateShort(b.date)}</td>\r\n-                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{b.time || \"--\"}</td>\r\n-                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>${b.amount}</td>\r\n-                    </tr>\r\n-                  ))}\r\n-                </tbody>\r\n-              </table>\r\n-            )}\r\n-          </div>\r\n-        </div>\r\n-        {/* Booking details modal */}\r\n-        {showDetail && detailBooking && (\r\n-          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n-              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n-              <div className=\"space-y-3 text-gray-800\">\r\n-                <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n-                <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n-                <div><span className=\"font-semibold\">Car:</span> {detailBooking.carName || \"--\"}</div>\r\n-                <div><span className=\"font-semibold\">Car Type:</span> {detailBooking.carType || \"--\"}</div>\r\n-                {detailBooking.addOns && detailBooking.addOns.length > 0 && (\r\n-                  <div>\r\n-                    <span className=\"font-semibold\">Add-Ons:</span>\r\n-                    <ul className=\"list-disc ml-6 mt-1\">\r\n-                      {detailBooking.addOns.map((a, i) => (\r\n-                        <li key={i}>{a.label}</li>\r\n-                      ))}\r\n-                    </ul>\r\n-                  </div>\r\n-                )}\r\n-                <div><span className=\"font-semibold\">Date:</span> {formatDateShort(detailBooking.date)}</div>\r\n-                <div><span className=\"font-semibold\">Time:</span> {detailBooking.time || \"--\"}</div>\r\n-                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n-                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n-                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n-                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n-                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n-                \r\n-              </div>\r\n-              <div className=\"mt-8 flex gap-3\">\r\n-                {!showDeleteConfirm ? (\r\n-                  <>\r\n-                    <button\r\n-                      className=\"w-1/2 py-3 rounded-lg bg-red-600 hover:bg-red-700 text-white font-semibold\"\r\n-                      onClick={() => setShowDeleteConfirm(true)}\r\n-                    >\r\n-                      Delete\r\n-                    </button>\r\n-                    <button\r\n-                      className=\"w-1/2 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-                      onClick={() => {\r\n-                        setShowDetail(false);\r\n-                        setShowDeleteConfirm(false);\r\n-                      }}\r\n-                    >\r\n-                      Close\r\n-                    </button>\r\n-                  </>\r\n-                ) : (\r\n-                  <>\r\n-                    <button\r\n-                      className=\"w-1/2 py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\"\r\n-                      onClick={() => setShowDeleteConfirm(false)}\r\n-                    >\r\n-                      Cancel\r\n-                    </button>\r\n-                    <button\r\n-                      className=\"w-1/2 py-3 rounded-lg bg-red-600 hover:bg-red-700 text-white font-semibold\"\r\n-                      onClick={async () => {\r\n-                        if (!detailBooking?.id) return;\r\n-                        setLoading(true);\r\n-                        try {\r\n-                          await fetch(`/api/delete-booking?id=${detailBooking.id}`, { method: 'DELETE' });\r\n-                        } catch {}\r\n-                        // Refresh bookings from DB\r\n-                        try {\r\n-                          const resp = await fetch(\"/api/get-bookings\");\r\n-                          const data = await resp.json();\r\n-                          if (resp.ok && data.success) {\r\n-                            setBookings(data.bookings.map(b => ({ ...b, id: b._id || b.id })));\r\n-                          } else {\r\n-                            setBookings([]);\r\n-                          }\r\n-                        } catch {\r\n-                          setBookings([]);\r\n-                        }\r\n-                        setLoading(false);\r\n-                        setShowDeleteConfirm(false);\r\n-                        setShowDetail(false);\r\n-                        setDetailBooking(null);\r\n-                      }}\r\n-                    >\r\n-                      Confirm Delete\r\n-                    </button>\r\n-                  </>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-        {/* Add booking modal (component) */}\r\n-        <AdminAddBooking\r\n-          open={showAdd}\r\n-          onClose={() => { setShowAdd(false); setEditBooking(null); }}\r\n-          onAdd={(payload) => handleAddFromChild(payload)}\r\n-          editBooking={editBooking}\r\n-          onEdit={async (updated) => {\r\n-            // PATCH to API\r\n-            if (!updated.id) return;\r\n-            setLoading(true);\r\n-            try {\r\n-              await fetch(`/api/update-booking?id=${updated.id}`, {\r\n-                method: 'PATCH',\r\n-                headers: { 'Content-Type': 'application/json' },\r\n-                body: JSON.stringify(updated),\r\n-              });\r\n-            } catch {}\r\n-            // Refresh bookings\r\n-            try {\r\n-              const resp = await fetch(\"/api/get-bookings\");\r\n-              const data = await resp.json();\r\n-              if (resp.ok && data.success) {\r\n-                setBookings(data.bookings.map(b => ({ ...b, id: b._id || b.id }));\r\n-              } else {\r\n-                setBookings([]);\r\n-              }\r\n-            } catch {\r\n-              setBookings([]);\r\n-            }\r\n-            setLoading(false);\r\n-            setShowAdd(false);\r\n-            setEditBooking(null);\r\n-          }}\r\n-        />\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1760679616913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,408 @@\n+import { useEffect, useState } from \"react\";\r\n+import { useCallback } from \"react\";\r\n+import AdminAddBooking from \"../components/AdminAddBooking\";\r\n+import { RevenueChart, BookingsCalendar, EstimatedRevenueChart } from \"../components/DashboardCharts\";\r\n+import { useRouter } from \"next/router\";\r\n+\r\n+export default function AdminDashboard() {\r\n+  // Format date as 'oct-19'\r\n+  function formatDateShort(dateStr) {\r\n+    if (!dateStr) return \"\";\r\n+    const parts = dateStr.split(\"-\");\r\n+    if (parts.length !== 3) return dateStr;\r\n+    const y = parseInt(parts[0], 10);\r\n+    const m = parseInt(parts[1], 10);\r\n+    const d = parseInt(parts[2], 10);\r\n+    if (isNaN(y) || isNaN(m) || isNaN(d)) return dateStr;\r\n+    const months = [\"jan\",\"feb\",\"mar\",\"apr\",\"may\",\"jun\",\"jul\",\"aug\",\"sep\",\"oct\",\"nov\",\"dec\"];\r\n+    return `${months[m - 1]}-${d}`;\r\n+  }\r\n+  const router = useRouter();\r\n+  const [bookings, setBookings] = useState([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+  const [showAdd, setShowAdd] = useState(false);\r\n+  const [showDetail, setShowDetail] = useState(false);\r\n+  const [detailBooking, setDetailBooking] = useState(null);\r\n+  const [editBooking, setEditBooking] = useState(null);\r\n+  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n+  const [statusFilter, setStatusFilter] = useState(\"all\");\r\n+  // Calculate total revenue (exclude pending)\r\n+  const totalRevenue = bookings.filter(b => b.status === 'complete').reduce((sum, b) => sum + (b.amount || 0), 0);\r\n+  // Pending count and estimated revenue\r\n+  const pendingBookings = bookings.filter(b => b.status === 'pending');\r\n+  const pendingCount = pendingBookings.length;\r\n+  const pendingRevenue = pendingBookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n+\r\n+  // Card click state\r\n+  const [showRevenueGraph, setShowRevenueGraph] = useState(false);\r\n+  const [showBookingsGraph, setShowBookingsGraph] = useState(false);\r\n+  const [showERGraph, setShowERGraph] = useState(false);\r\n+\r\n+  // After a successful add from the child modal, refresh from DB and close the modal\r\n+  const handleAddFromChild = useCallback(async () => {\r\n+    setLoading(true);\r\n+    try {\r\n+      const resp = await fetch(\"/api/get-bookings\");\r\n+      const data = await resp.json();\r\n+      if (resp.ok && data.success) {\r\n+        setBookings(data.bookings.map(b => ({ ...b, id: b._id || b.id })));\r\n+      } else {\r\n+        setBookings([]);\r\n+      }\r\n+    } catch {\r\n+      setBookings([]);\r\n+    }\r\n+    setLoading(false);\r\n+    setShowAdd(false);\r\n+    setEditBooking(null);\r\n+  }, []);\r\n+\r\n+  // Fetch bookings from MongoDB\r\n+  const updatePendingToComplete = useCallback(async (bookingsList) => {\r\n+    const now = new Date();\r\n+    const updates = [];\r\n+    for (const b of bookingsList) {\r\n+      if (b.status === 'pending' && b.date && b.time) {\r\n+        const dt = new Date(`${b.date}T${b.time}:00`);\r\n+        if (dt < now) {\r\n+          // Update status in MongoDB\r\n+          updates.push(fetch(`/api/update-booking-status?id=${b.id}&status=complete`, { method: 'PATCH' }));\r\n+        }\r\n+      }\r\n+    }\r\n+    if (updates.length > 0) {\r\n+      await Promise.all(updates);\r\n+      // Refetch bookings after updates\r\n+      return true;\r\n+    }\r\n+    return false;\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    async function fetchBookingsAndUpdate() {\r\n+      setLoading(true);\r\n+      try {\r\n+        const resp = await fetch(\"/api/get-bookings\");\r\n+        const data = await resp.json();\r\n+        if (resp.ok && data.success) {\r\n+          const bookingsArr = data.bookings.map(b => ({ ...b, id: b._id || b.id }));\r\n+          // Check and update pending bookings\r\n+          const didUpdate = await updatePendingToComplete(bookingsArr);\r\n+          if (didUpdate) {\r\n+            // Refetch after update\r\n+            const resp2 = await fetch(\"/api/get-bookings\");\r\n+            const data2 = await resp2.json();\r\n+            if (resp2.ok && data2.success) {\r\n+              setBookings(data2.bookings.map(b => ({ ...b, id: b._id || b.id })));\r\n+            } else {\r\n+              setBookings([]);\r\n+            }\r\n+          } else {\r\n+            setBookings(bookingsArr);\r\n+          }\r\n+        } else {\r\n+          setBookings([]);\r\n+        }\r\n+      } catch {\r\n+        setBookings([]);\r\n+      }\r\n+      setLoading(false);\r\n+    }\r\n+    fetchBookingsAndUpdate();\r\n+  }, [updatePendingToComplete]);\r\n+\r\n+  // Show booking details modal\r\n+  const handleShowDetail = (booking) => {\r\n+    setDetailBooking(booking);\r\n+    setShowDeleteConfirm(false);\r\n+    setShowDetail(true);\r\n+  };\r\n+\r\n+  // Edit booking: open modal with data\r\n+  const handleEditBooking = (booking) => {\r\n+    setEditBooking(booking);\r\n+    setShowAdd(true);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n+      <div className=\"max-w-5xl mx-auto\">\r\n+        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n+        {/* Revenue summary */}\r\n+        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n+          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center cursor-pointer transition-all duration-300\" onClick={() => {\r\n+            setShowRevenueGraph(v => !v);\r\n+            setShowBookingsGraph(false);\r\n+            setShowERGraph(false);\r\n+          }}>\r\n+            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n+            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n+            <div className=\"text-xs mt-2 text-white/80\">(Completed bookings only)</div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100 cursor-pointer transition-all duration-300\" onClick={() => {\r\n+            setShowBookingsGraph(v => !v);\r\n+            setShowRevenueGraph(false);\r\n+            setShowERGraph(false);\r\n+          }}>\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n+            <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n+            <div className=\"text-xs mt-2 text-blue-700/70\">(All statuses)</div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100 cursor-pointer transition-all duration-300\" onClick={() => {\r\n+            setShowERGraph(v => !v);\r\n+            setShowRevenueGraph(false);\r\n+            setShowBookingsGraph(false);\r\n+          }}>\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">ER (Estimated Revenue)</div>\r\n+            <div className=\"text-3xl font-bold text-blue-900\">${pendingRevenue}</div>\r\n+            <div className=\"text-xs mt-2 text-blue-700/70\">(Pending bookings)</div>\r\n+          </div>\r\n+        </div>\r\n+        {/* Animated graph area below cards */}\r\n+        <div className={`transition-all duration-500 overflow-hidden ${showRevenueGraph || showBookingsGraph || showERGraph ? 'mb-10' : ''}`}\r\n+          style={{ maxHeight: showRevenueGraph || showBookingsGraph || showERGraph ? 600 : 0 }}>\r\n+          {showRevenueGraph && (\r\n+            <div className=\"bg-white rounded-xl shadow p-6 mb-6\">\r\n+              <h4 className=\"text-lg font-bold mb-4 text-blue-700\">Revenue by Day</h4>\r\n+              <RevenueChart bookings={bookings} />\r\n+            </div>\r\n+          )}\r\n+          {showBookingsGraph && (\r\n+            <div className=\"bg-white rounded-xl shadow p-6 mb-6\">\r\n+              <h4 className=\"text-lg font-bold mb-4 text-blue-700\">Bookings Calendar</h4>\r\n+              <BookingsCalendar bookings={bookings} />\r\n+              <div className=\"mt-4 flex gap-4 text-xs\">\r\n+                <span className=\"bg-blue-200 px-2 py-1 rounded\">Booked</span>\r\n+                <span className=\"bg-green-300 px-2 py-1 rounded\">Completed</span>\r\n+                <span className=\"bg-yellow-200 px-2 py-1 rounded\">Pending</span>\r\n+              </div>\r\n+            </div>\r\n+          )}\r\n+          {showERGraph && (\r\n+            <div className=\"bg-white rounded-xl shadow p-6 mb-6\">\r\n+              <h4 className=\"text-lg font-bold mb-4 text-blue-700\">Estimated Revenue by Day</h4>\r\n+              <EstimatedRevenueChart bookings={bookings} />\r\n+            </div>\r\n+          )}\r\n+        </div>\r\n+        {/* Booking list */}\r\n+        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n+          <div className=\"flex justify-between items-center mb-4\">\r\n+            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n+            <button\r\n+              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+              onClick={() => setShowAdd(true)}\r\n+            >\r\n+              Add Booking\r\n+            </button>\r\n+          </div>\r\n+          {/* Status Filter */}\r\n+          <div className=\"flex items-center gap-2 mb-4\">\r\n+            <span className=\"text-sm text-gray-600\">Filter:</span>\r\n+            {[\r\n+              { key: 'all', label: 'All' },\r\n+              { key: 'pending', label: 'Pending' },\r\n+              { key: 'complete', label: 'Complete' },\r\n+            ].map(opt => (\r\n+              <button\r\n+                key={opt.key}\r\n+                type=\"button\"\r\n+                onClick={() => setStatusFilter(opt.key)}\r\n+                className={`px-3 py-1 rounded-full text-sm border ${statusFilter === opt.key ? 'bg-blue-600 text-white border-blue-600' : 'bg-white text-blue-700 border-blue-200 hover:bg-blue-50'}`}\r\n+              >\r\n+                {opt.label}\r\n+              </button>\r\n+            ))}\r\n+          </div>\r\n+          <div className=\"overflow-x-auto\">\r\n+            {loading ? (\r\n+              <div className=\"py-10 text-center text-blue-600 font-semibold text-lg\">Loading bookings...</div>\r\n+            ) : (\r\n+              <table className=\"w-full text-left border-collapse min-w-[760px] text-xs sm:text-sm\">\r\n+                <thead>\r\n+                  <tr style={{ background: '#f5f5f5' }}>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Car</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Time</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Actions</th>\r\n+                  </tr>\r\n+                </thead>\r\n+                <tbody>\r\n+                  {[...bookings]\r\n+                    .filter(b => statusFilter === 'all' ? true : b.status === statusFilter)\r\n+                    .sort((a, b) => {\r\n+                      const aDT = new Date(`${a.date || '1970-01-01'}T${(a.time || '00:00')}:00`).getTime();\r\n+                      const bDT = new Date(`${b.date || '1970-01-01'}T${(b.time || '00:00')}:00`).getTime();\r\n+                      return bDT - aDT; // most recent first\r\n+                    })\r\n+                    .map(b => (\r\n+                    <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n+                      <td className=\"py-2 px-2 sm:px-3\">\r\n+                        <span\r\n+                          aria-label={b.status}\r\n+                          className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}\r\n+                        >\r\n+                          <span className=\"sm:hidden\">\r\n+                            {b.status === 'complete' ? 'C' : b.status === 'pending' ? 'P' : (b.status?.[0]?.toUpperCase() || '')}\r\n+                          </span>\r\n+                          <span className=\"hidden sm:inline\">{b.status}</span>\r\n+                        </span>\r\n+                      </td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 max-w-[140px] sm:max-w-none truncate\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleEditBooking(b)}>{b.name}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 max-w-[160px] truncate\" style={{ color: '#222' }}>{b.carName || \"--\"}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{b.service}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{formatDateShort(b.date)}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{b.time || \"--\"}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>${b.amount}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3\">\r\n+                        <button\r\n+                          type=\"button\"\r\n+                          className=\"px-3 py-1 text-xs rounded-full border border-blue-200 text-blue-700 hover:bg-blue-50\"\r\n+                          onClick={() => {\r\n+                            setDetailBooking(b);\r\n+                            setShowDeleteConfirm(false);\r\n+                            setShowDetail(true);\r\n+                          }}\r\n+                        >\r\n+                          Details\r\n+                        </button>\r\n+                      </td>\r\n+                    </tr>\r\n+                  ))}\r\n+                </tbody>\r\n+              </table>\r\n+            )}\r\n+          </div>\r\n+        </div>\r\n+        {/* Booking details modal */}\r\n+        {showDetail && detailBooking && (\r\n+          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n+              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n+              <div className=\"space-y-3 text-gray-800\">\r\n+                <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n+                <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n+                <div><span className=\"font-semibold\">Car:</span> {detailBooking.carName || \"--\"}</div>\r\n+                <div><span className=\"font-semibold\">Car Type:</span> {detailBooking.carType || \"--\"}</div>\r\n+                {detailBooking.addOns && detailBooking.addOns.length > 0 && (\r\n+                  <div>\r\n+                    <span className=\"font-semibold\">Add-Ons:</span>\r\n+                    <ul className=\"list-disc ml-6 mt-1\">\r\n+                      {detailBooking.addOns.map((a, i) => (\r\n+                        <li key={i}>{a.label}</li>\r\n+                      ))}\r\n+                    </ul>\r\n+                  </div>\r\n+                )}\r\n+                <div><span className=\"font-semibold\">Date:</span> {formatDateShort(detailBooking.date)}</div>\r\n+                <div><span className=\"font-semibold\">Time:</span> {detailBooking.time || \"--\"}</div>\r\n+                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n+                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n+                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n+                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n+                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n+                \r\n+              </div>\r\n+              <div className=\"mt-8 flex gap-3\">\r\n+                {!showDeleteConfirm ? (\r\n+                  <>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-red-600 hover:bg-red-700 text-white font-semibold\"\r\n+                      onClick={() => setShowDeleteConfirm(true)}\r\n+                    >\r\n+                      Delete\r\n+                    </button>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+                      onClick={() => {\r\n+                        setShowDetail(false);\r\n+                        setShowDeleteConfirm(false);\r\n+                      }}\r\n+                    >\r\n+                      Close\r\n+                    </button>\r\n+                  </>\r\n+                ) : (\r\n+                  <>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\"\r\n+                      onClick={() => setShowDeleteConfirm(false)}\r\n+                    >\r\n+                      Cancel\r\n+                    </button>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-red-600 hover:bg-red-700 text-white font-semibold\"\r\n+                      onClick={async () => {\r\n+                        if (!detailBooking?.id) return;\r\n+                        setLoading(true);\r\n+                        try {\r\n+                          await fetch(`/api/delete-booking?id=${detailBooking.id}`, { method: 'DELETE' });\r\n+                        } catch {}\r\n+                        // Refresh bookings from DB\r\n+                        try {\r\n+                          const resp = await fetch(\"/api/get-bookings\");\r\n+                          const data = await resp.json();\r\n+                          if (resp.ok && data.success) {\r\n+                            setBookings(data.bookings.map(b => ({ ...b, id: b._id || b.id })));\r\n+                          } else {\r\n+                            setBookings([]);\r\n+                          }\r\n+                        } catch {\r\n+                          setBookings([]);\r\n+                        }\r\n+                        setLoading(false);\r\n+                        setShowDeleteConfirm(false);\r\n+                        setShowDetail(false);\r\n+                        setDetailBooking(null);\r\n+                      }}\r\n+                    >\r\n+                      Confirm Delete\r\n+                    </button>\r\n+                  </>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+        {/* Add booking modal (component) */}\r\n+        <AdminAddBooking\r\n+          open={showAdd}\r\n+          onClose={() => { setShowAdd(false); setEditBooking(null); }}\r\n+          onAdd={(payload) => handleAddFromChild(payload)}\r\n+          editBooking={editBooking}\r\n+          onEdit={async (updated) => {\r\n+            // PATCH to API\r\n+            if (!updated.id) return;\r\n+            setLoading(true);\r\n+            try {\r\n+              await fetch(`/api/update-booking?id=${updated.id}`, {\r\n+                method: 'PATCH',\r\n+                headers: { 'Content-Type': 'application/json' },\r\n+                body: JSON.stringify(updated),\r\n+              });\r\n+            } catch {}\r\n+            // Refresh bookings\r\n+            try {\r\n+              const resp = await fetch(\"/api/get-bookings\");\r\n+              const data = await resp.json();\r\n+              if (resp.ok && data.success) {\r\n+                setBookings(data.bookings.map(b => ({ ...b, id: b._id || b.id })));\r\n+              } else {\r\n+                setBookings([]);\r\n+              }\r\n+            } catch {\r\n+              setBookings([]);\r\n+            }\r\n+            setLoading(false);\r\n+            setShowAdd(false);\r\n+            setEditBooking(null);\r\n+          }}\r\n+        />\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1760679882121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,419 +129,65 @@\n       <div className=\"max-w-5xl mx-auto\">\r\n         <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n         {/* Revenue summary */}\r\n         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n-          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center cursor-pointer transition-all duration-300\" onClick={() => {\r\n+          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center cursor-pointer transition-all duration-300 relative\" onClick={() => {\r\n             setShowRevenueGraph(v => !v);\r\n             setShowBookingsGraph(false);\r\n             setShowERGraph(false);\r\n           }}>\r\n             <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n             <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n             <div className=\"text-xs mt-2 text-white/80\">(Completed bookings only)</div>\r\n+            <div className={`transition-all duration-500 overflow-hidden w-full absolute left-0 top-full z-10`} style={{maxHeight: showRevenueGraph ? 600 : 0}}>\r\n+              {showRevenueGraph && (\r\n+                <div className=\"bg-white rounded-xl shadow p-6 mt-2\">\r\n+                  <h4 className=\"text-lg font-bold mb-4\" style={{color:'#111'}}>Revenue by Day</h4>\r\n+                  <RevenueChart bookings={bookings} labelColor=\"#111\" />\r\n+                </div>\r\n+              )}\r\n+            </div>\r\n           </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100 cursor-pointer transition-all duration-300\" onClick={() => {\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100 cursor-pointer transition-all duration-300 relative\" onClick={() => {\r\n             setShowBookingsGraph(v => !v);\r\n             setShowRevenueGraph(false);\r\n             setShowERGraph(false);\r\n           }}>\r\n             <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n             <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n             <div className=\"text-xs mt-2 text-blue-700/70\">(All statuses)</div>\r\n+            <div className={`transition-all duration-500 overflow-hidden w-full absolute left-0 top-full z-10`} style={{maxHeight: showBookingsGraph ? 600 : 0}}>\r\n+              {showBookingsGraph && (\r\n+                <div className=\"bg-white rounded-xl shadow p-6 mt-2\">\r\n+                  <h4 className=\"text-lg font-bold mb-4\" style={{color:'#111'}}>Bookings Calendar</h4>\r\n+                  <BookingsCalendar bookings={bookings} labelColor=\"#111\" />\r\n+                  <div className=\"mt-4 flex gap-4 text-xs\">\r\n+                    <span className=\"bg-blue-200 px-2 py-1 rounded\" style={{color:'#111',fontWeight:'bold'}}>Booked</span>\r\n+                    <span className=\"bg-green-300 px-2 py-1 rounded\" style={{color:'#111',fontWeight:'bold'}}>Completed</span>\r\n+                    <span className=\"bg-yellow-200 px-2 py-1 rounded\" style={{color:'#111',fontWeight:'bold'}}>Pending</span>\r\n+                  </div>\r\n+                </div>\r\n+              )}\r\n+            </div>\r\n           </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100 cursor-pointer transition-all duration-300\" onClick={() => {\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100 cursor-pointer transition-all duration-300 relative\" onClick={() => {\r\n             setShowERGraph(v => !v);\r\n             setShowRevenueGraph(false);\r\n             setShowBookingsGraph(false);\r\n           }}>\r\n             <div className=\"text-lg font-semibold mb-2 text-blue-700\">ER (Estimated Revenue)</div>\r\n             <div className=\"text-3xl font-bold text-blue-900\">${pendingRevenue}</div>\r\n             <div className=\"text-xs mt-2 text-blue-700/70\">(Pending bookings)</div>\r\n-          </div>\r\n-        </div>\r\n-        {/* Animated graph area below cards */}\r\n-        <div className={`transition-all duration-500 overflow-hidden ${showRevenueGraph || showBookingsGraph || showERGraph ? 'mb-10' : ''}`}\r\n-          style={{ maxHeight: showRevenueGraph || showBookingsGraph || showERGraph ? 600 : 0 }}>\r\n-          {showRevenueGraph && (\r\n-            <div className=\"bg-white rounded-xl shadow p-6 mb-6\">\r\n-              <h4 className=\"text-lg font-bold mb-4 text-blue-700\">Revenue by Day</h4>\r\n-              <RevenueChart bookings={bookings} />\r\n+            <div className={`transition-all duration-500 overflow-hidden w-full absolute left-0 top-full z-10`} style={{maxHeight: showERGraph ? 600 : 0}}>\r\n+              {showERGraph && (\r\n+                <div className=\"bg-white rounded-xl shadow p-6 mt-2\">\r\n+                  <h4 className=\"text-lg font-bold mb-4\" style={{color:'#111'}}>Estimated Revenue by Day</h4>\r\n+                  <EstimatedRevenueChart bookings={bookings} labelColor=\"#111\" />\r\n+                </div>\r\n+              )}\r\n             </div>\r\n-          )}\r\n-          {showBookingsGraph && (\r\n-            <div className=\"bg-white rounded-xl shadow p-6 mb-6\">\r\n-              <h4 className=\"text-lg font-bold mb-4 text-blue-700\">Bookings Calendar</h4>\r\n-              <BookingsCalendar bookings={bookings} />\r\n-              <div className=\"mt-4 flex gap-4 text-xs\">\r\n-                <span className=\"bg-blue-200 px-2 py-1 rounded\">Booked</span>\r\n-                <span className=\"bg-green-300 px-2 py-1 rounded\">Completed</span>\r\n-                <span className=\"bg-yellow-200 px-2 py-1 rounded\">Pending</span>\r\n-              </div>\r\n-            </div>\r\n-          )}\r\n-          {showERGraph && (\r\n-            <div className=\"bg-white rounded-xl shadow p-6 mb-6\">\r\n-              <h4 className=\"text-lg font-bold mb-4 text-blue-700\">Estimated Revenue by Day</h4>\r\n-              <EstimatedRevenueChart bookings={bookings} />\r\n-            </div>\r\n-          )}\r\n-        </div>\r\n-        {/* Booking list */}\r\n-        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n-          <div className=\"flex justify-between items-center mb-4\">\r\n-            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n-            <button\r\n-              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-              onClick={() => setShowAdd(true)}\r\n-            >\r\n-              Add Booking\r\n-            </button>\r\n           </div>\r\n-          {/* Status Filter */}\r\n-          <div className=\"flex items-center gap-2 mb-4\">\r\n-            <span className=\"text-sm text-gray-600\">Filter:</span>\r\n-            {[\r\n-              { key: 'all', label: 'All' },\r\n-              { key: 'pending', label: 'Pending' },\r\n-              { key: 'complete', label: 'Complete' },\r\n-            ].map(opt => (\r\n-              <button\r\n-                key={opt.key}\r\n-                type=\"button\"\r\n-                onClick={() => setStatusFilter(opt.key)}\r\n-                className={`px-3 py-1 rounded-full text-sm border ${statusFilter === opt.key ? 'bg-blue-600 text-white border-blue-600' : 'bg-white text-blue-700 border-blue-200 hover:bg-blue-50'}`}\r\n-              >\r\n-                {opt.label}\r\n-              </button>\r\n-            ))}\r\n-          </div>\r\n-          <div className=\"overflow-x-auto\">\r\n-            {loading ? (\r\n-              <div className=\"py-10 text-center text-blue-600 font-semibold text-lg\">Loading bookings...</div>\r\n-            ) : (\r\n-              <table className=\"w-full text-left border-collapse min-w-[760px] text-xs sm:text-sm\">\r\n-                <thead>\r\n-                  <tr style={{ background: '#f5f5f5' }}>\r\n-                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n-                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n-                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Car</th>\r\n-                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n-                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n-                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Time</th>\r\n-                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n-                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Actions</th>\r\n-                  </tr>\r\n-                </thead>\r\n-                <tbody>\r\n-                  {[...bookings]\r\n-                    .filter(b => statusFilter === 'all' ? true : b.status === statusFilter)\r\n-                    .sort((a, b) => {\r\n-                      const aDT = new Date(`${a.date || '1970-01-01'}T${(a.time || '00:00')}:00`).getTime();\r\n-                      const bDT = new Date(`${b.date || '1970-01-01'}T${(b.time || '00:00')}:00`).getTime();\r\n-                      return bDT - aDT; // most recent first\r\n-                    })\r\n-                    .map(b => (\r\n-                    <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n-                      <td className=\"py-2 px-2 sm:px-3\">\r\n-                        <span\r\n-                          aria-label={b.status}\r\n-                          className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}\r\n-                        >\r\n-                          <span className=\"sm:hidden\">\r\n-                            {b.status === 'complete' ? 'C' : b.status === 'pending' ? 'P' : (b.status?.[0]?.toUpperCase() || '')}\r\n-                          </span>\r\n-                          <span className=\"hidden sm:inline\">{b.status}</span>\r\n-                        </span>\r\n-                      </td>\r\n-                      <td className=\"py-2 px-2 sm:px-3 max-w-[140px] sm:max-w-none truncate\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleEditBooking(b)}>{b.name}</td>\r\n-                      <td className=\"py-2 px-2 sm:px-3 max-w-[160px] truncate\" style={{ color: '#222' }}>{b.carName || \"--\"}</td>\r\n-                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{b.service}</td>\r\n-                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{formatDateShort(b.date)}</td>\r\n-                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{b.time || \"--\"}</td>\r\n-                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>${b.amount}</td>\r\n-                      <td className=\"py-2 px-2 sm:px-3\">\r\n-                        <button\r\n-                          type=\"button\"\r\n-                          className=\"px-3 py-1 text-xs rounded-full border border-blue-200 text-blue-700 hover:bg-blue-50\"\r\n-                          onClick={() => {\r\n-                            setDetailBooking(b);\r\n-                            setShowDeleteConfirm(false);\r\n-                            setShowDetail(true);\r\n-                          }}\r\n-                        >\r\n-                          Details\r\n-                        </button>\r\n-                      </td>\r\n-                    </tr>\r\n-                  ))}\r\n-                </tbody>\r\n-              </table>\r\n-            )}\r\n-          </div>\r\n         </div>\r\n-        {/* Booking details modal */}\r\n-        {showDetail && detailBooking && (\r\n-          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n-              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n-              <div className=\"space-y-3 text-gray-800\">\r\n-                <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n-                <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n-                <div><span className=\"font-semibold\">Car:</span> {detailBooking.carName || \"--\"}</div>\r\n-                <div><span className=\"font-semibold\">Car Type:</span> {detailBooking.carType || \"--\"}</div>\r\n-                {detailBooking.addOns && detailBooking.addOns.length > 0 && (\r\n-                  <div>\r\n-                    <span className=\"font-semibold\">Add-Ons:</span>\r\n-                    <ul className=\"list-disc ml-6 mt-1\">\r\n-                      {detailBooking.addOns.map((a, i) => (\r\n-                        <li key={i}>{a.label}</li>\r\n-                      ))}\r\n-                    </ul>\r\n-                  </div>\r\n-                )}\r\n-                <div><span className=\"font-semibold\">Date:</span> {formatDateShort(detailBooking.date)}</div>\r\n-                <div><span className=\"font-semibold\">Time:</span> {detailBooking.time || \"--\"}</div>\r\n-                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n-                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n-                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n-                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n-                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n-                \r\n-              </div>\r\n-              <div className=\"mt-8 flex gap-3\">\r\n-                {!showDeleteConfirm ? (\r\n-                  <>\r\n-                    <button\r\n-                      className=\"w-1/2 py-3 rounded-lg bg-red-600 hover:bg-red-700 text-white font-semibold\"\r\n-                      onClick={() => setShowDeleteConfirm(true)}\r\n-                    >\r\n-                      Delete\r\n-                    </button>\r\n-                    <button\r\n-                      className=\"w-1/2 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-                      onClick={() => {\r\n-                        setShowDetail(false);\r\n-                        setShowDeleteConfirm(false);\r\n-                      }}\r\n-                    >\r\n-                      Close\r\n-                    </button>\r\n-                  </>\r\n-                ) : (\r\n-                  <>\r\n-                    <button\r\n-                      className=\"w-1/2 py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\"\r\n-                      onClick={() => setShowDeleteConfirm(false)}\r\n-                    >\r\n-                      Cancel\r\n-                    </button>\r\n-                    <button\r\n-                      className=\"w-1/2 py-3 rounded-lg bg-red-600 hover:bg-red-700 text-white font-semibold\"\r\n-                      onClick={async () => {\r\n-                        if (!detailBooking?.id) return;\r\n-                        setLoading(true);\r\n-                        try {\r\n-                          await fetch(`/api/delete-booking?id=${detailBooking.id}`, { method: 'DELETE' });\r\n-                        } catch {}\r\n-                        // Refresh bookings from DB\r\n-                        try {\r\n-                          const resp = await fetch(\"/api/get-bookings\");\r\n-                          const data = await resp.json();\r\n-                          if (resp.ok && data.success) {\r\n-                            setBookings(data.bookings.map(b => ({ ...b, id: b._id || b.id })));\r\n-                          } else {\r\n-                            setBookings([]);\r\n-                          }\r\n-                        } catch {\r\n-                          setBookings([]);\r\n-                        }\r\n-                        setLoading(false);\r\n-                        setShowDeleteConfirm(false);\r\n-                        setShowDetail(false);\r\n-                        setDetailBooking(null);\r\n-                      }}\r\n-                    >\r\n-                      Confirm Delete\r\n-                    </button>\r\n-                  </>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-        {/* Add booking modal (component) */}\r\n-        <AdminAddBooking\r\n-          open={showAdd}\r\n-          onClose={() => { setShowAdd(false); setEditBooking(null); }}\r\n-          onAdd={(payload) => handleAddFromChild(payload)}\r\n-          editBooking={editBooking}\r\n-          onEdit={async (updated) => {\r\n-            // PATCH to API\r\n-            if (!updated.id) return;\r\n-            setLoading(true);\r\n-            try {\r\n-              await fetch(`/api/update-booking?id=${updated.id}`, {\r\n-                method: 'PATCH',\r\n-                headers: { 'Content-Type': 'application/json' },\r\n-                body: JSON.stringify(updated),\r\n-              });\r\n-            } catch {}\r\n-            // Refresh bookings\r\n-            try {\r\n-              const resp = await fetch(\"/api/get-bookings\");\r\n-              const data = await resp.json();\r\n-              if (resp.ok && data.success) {\r\n-                setBookings(data.bookings.map(b => ({ ...b, id: b._id || b.id })));\r\n-              } else {\r\n-                setBookings([]);\r\n-              }\r\n-            } catch {\r\n-              setBookings([]);\r\n-            }\r\n-            setLoading(false);\r\n-            setShowAdd(false);\r\n-            setEditBooking(null);\r\n-          }}\r\n-        />\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import { useEffect, useState } from \"react\";\r\n-import { useCallback } from \"react\";\r\n-import AdminAddBooking from \"../components/AdminAddBooking\";\r\n-import { useRouter } from \"next/router\";\r\n-\r\n-export default function AdminDashboard() {\r\n-  // Format date as 'oct-19'\r\n-  function formatDateShort(dateStr) {\r\n-    if (!dateStr) return \"\";\r\n-    const parts = dateStr.split(\"-\");\r\n-    if (parts.length !== 3) return dateStr;\r\n-    const y = parseInt(parts[0], 10);\r\n-    const m = parseInt(parts[1], 10);\r\n-    const d = parseInt(parts[2], 10);\r\n-    if (isNaN(y) || isNaN(m) || isNaN(d)) return dateStr;\r\n-    const months = [\"jan\",\"feb\",\"mar\",\"apr\",\"may\",\"jun\",\"jul\",\"aug\",\"sep\",\"oct\",\"nov\",\"dec\"];\r\n-    return `${months[m - 1]}-${d}`;\r\n-  }\r\n-  const router = useRouter();\r\n-  const [bookings, setBookings] = useState([]);\r\n-  const [loading, setLoading] = useState(true);\r\n-  const [showAdd, setShowAdd] = useState(false);\r\n-  const [showDetail, setShowDetail] = useState(false);\r\n-  const [detailBooking, setDetailBooking] = useState(null);\r\n-  const [editBooking, setEditBooking] = useState(null);\r\n-  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n-  const [statusFilter, setStatusFilter] = useState(\"all\");\r\n-  // Calculate total revenue\r\n-  const totalRevenue = bookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n-\r\n-  // After a successful add from the child modal, refresh from DB and close the modal\r\n-  const handleAddFromChild = useCallback(async () => {\r\n-    setLoading(true);\r\n-    try {\r\n-      const resp = await fetch(\"/api/get-bookings\");\r\n-      const data = await resp.json();\r\n-      if (resp.ok && data.success) {\r\n-        setBookings(data.bookings.map(b => ({ ...b, id: b._id || b.id })));\r\n-      } else {\r\n-        setBookings([]);\r\n-      }\r\n-    } catch {\r\n-      setBookings([]);\r\n-    }\r\n-    setLoading(false);\r\n-    setShowAdd(false);\r\n-    setEditBooking(null);\r\n-  }, []);\r\n-\r\n-  // Fetch bookings from MongoDB\r\n-  const updatePendingToComplete = useCallback(async (bookingsList) => {\r\n-    const now = new Date();\r\n-    const updates = [];\r\n-    for (const b of bookingsList) {\r\n-      if (b.status === 'pending' && b.date && b.time) {\r\n-        const dt = new Date(`${b.date}T${b.time}:00`);\r\n-        if (dt < now) {\r\n-          // Update status in MongoDB\r\n-          updates.push(fetch(`/api/update-booking-status?id=${b.id}&status=complete`, { method: 'PATCH' }));\r\n-        }\r\n-      }\r\n-    }\r\n-    if (updates.length > 0) {\r\n-      await Promise.all(updates);\r\n-      // Refetch bookings after updates\r\n-      return true;\r\n-    }\r\n-    return false;\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    async function fetchBookingsAndUpdate() {\r\n-      setLoading(true);\r\n-      try {\r\n-        const resp = await fetch(\"/api/get-bookings\");\r\n-        const data = await resp.json();\r\n-        if (resp.ok && data.success) {\r\n-          const bookingsArr = data.bookings.map(b => ({ ...b, id: b._id || b.id }));\r\n-          // Check and update pending bookings\r\n-          const didUpdate = await updatePendingToComplete(bookingsArr);\r\n-          if (didUpdate) {\r\n-            // Refetch after update\r\n-            const resp2 = await fetch(\"/api/get-bookings\");\r\n-            const data2 = await resp2.json();\r\n-            if (resp2.ok && data2.success) {\r\n-              setBookings(data2.bookings.map(b => ({ ...b, id: b._id || b.id })));\r\n-            } else {\r\n-              setBookings([]);\r\n-            }\r\n-          } else {\r\n-            setBookings(bookingsArr);\r\n-          }\r\n-        } else {\r\n-          setBookings([]);\r\n-        }\r\n-      } catch {\r\n-        setBookings([]);\r\n-      }\r\n-      setLoading(false);\r\n-    }\r\n-    fetchBookingsAndUpdate();\r\n-  }, [updatePendingToComplete]);\r\n-\r\n-  // Show booking details modal\r\n-  const handleShowDetail = (booking) => {\r\n-    setDetailBooking(booking);\r\n-    setShowDeleteConfirm(false);\r\n-    setShowDetail(true);\r\n-  };\r\n-\r\n-  // Edit booking: open modal with data\r\n-  const handleEditBooking = (booking) => {\r\n-    setEditBooking(booking);\r\n-    setShowAdd(true);\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n-      <div className=\"max-w-5xl mx-auto\">\r\n-        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n-        {/* Revenue summary */}\r\n-        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n-          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n-            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n-            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n-          </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n-            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n-            <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n-          </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n-            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Pending</div>\r\n-            <div className=\"text-3xl font-bold text-yellow-600\">{bookings.filter(b => b.status === \"pending\").length}</div>\r\n-          </div>\r\n-        </div>\r\n         {/* Booking list */}\r\n         <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n           <div className=\"flex justify-between items-center mb-4\">\r\n             <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n"
                },
                {
                    "date": 1760679940505,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -154,13 +154,13 @@\n           }}>\r\n             <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n             <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n             <div className=\"text-xs mt-2 text-blue-700/70\">(All statuses)</div>\r\n-            <div className={`transition-all duration-500 overflow-hidden w-full absolute left-0 top-full z-10`} style={{maxHeight: showBookingsGraph ? 600 : 0}}>\r\n+            <div className={`transition-all duration-500 w-full absolute left-0 top-full z-10`} style={{maxHeight: showBookingsGraph ? 'none' : 0}}>\r\n               {showBookingsGraph && (\r\n                 <div className=\"bg-white rounded-xl shadow p-6 mt-2\">\r\n                   <h4 className=\"text-lg font-bold mb-4\" style={{color:'#111'}}>Bookings Calendar</h4>\r\n-                  <BookingsCalendar bookings={bookings} labelColor=\"#111\" />\r\n+                  <BookingsCalendar bookings={bookings} labelColor=\"#111\" alwaysOpen={true} />\r\n                   <div className=\"mt-4 flex gap-4 text-xs\">\r\n                     <span className=\"bg-blue-200 px-2 py-1 rounded\" style={{color:'#111',fontWeight:'bold'}}>Booked</span>\r\n                     <span className=\"bg-green-300 px-2 py-1 rounded\" style={{color:'#111',fontWeight:'bold'}}>Completed</span>\r\n                     <span className=\"bg-yellow-200 px-2 py-1 rounded\" style={{color:'#111',fontWeight:'bold'}}>Pending</span>\r\n"
                },
                {
                    "date": 1760680235852,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,7 @@\n import { useEffect, useState } from \"react\";\r\n import { useCallback } from \"react\";\r\n import AdminAddBooking from \"../components/AdminAddBooking\";\r\n-import { RevenueChart, BookingsCalendar, EstimatedRevenueChart } from \"../components/DashboardCharts\";\r\n import { useRouter } from \"next/router\";\r\n \r\n export default function AdminDashboard() {\r\n   // Format date as 'oct-19'\r\n@@ -32,13 +31,8 @@\n   const pendingBookings = bookings.filter(b => b.status === 'pending');\r\n   const pendingCount = pendingBookings.length;\r\n   const pendingRevenue = pendingBookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n \r\n-  // Card click state\r\n-  const [showRevenueGraph, setShowRevenueGraph] = useState(false);\r\n-  const [showBookingsGraph, setShowBookingsGraph] = useState(false);\r\n-  const [showERGraph, setShowERGraph] = useState(false);\r\n-\r\n   // After a successful add from the child modal, refresh from DB and close the modal\r\n   const handleAddFromChild = useCallback(async () => {\r\n     setLoading(true);\r\n     try {\r\n@@ -129,63 +123,22 @@\n       <div className=\"max-w-5xl mx-auto\">\r\n         <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n         {/* Revenue summary */}\r\n         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n-          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center cursor-pointer transition-all duration-300 relative\" onClick={() => {\r\n-            setShowRevenueGraph(v => !v);\r\n-            setShowBookingsGraph(false);\r\n-            setShowERGraph(false);\r\n-          }}>\r\n+          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n             <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n             <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n             <div className=\"text-xs mt-2 text-white/80\">(Completed bookings only)</div>\r\n-            <div className={`transition-all duration-500 overflow-hidden w-full absolute left-0 top-full z-10`} style={{maxHeight: showRevenueGraph ? 600 : 0}}>\r\n-              {showRevenueGraph && (\r\n-                <div className=\"bg-white rounded-xl shadow p-6 mt-2\">\r\n-                  <h4 className=\"text-lg font-bold mb-4\" style={{color:'#111'}}>Revenue by Day</h4>\r\n-                  <RevenueChart bookings={bookings} labelColor=\"#111\" />\r\n-                </div>\r\n-              )}\r\n-            </div>\r\n           </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100 cursor-pointer transition-all duration-300 relative\" onClick={() => {\r\n-            setShowBookingsGraph(v => !v);\r\n-            setShowRevenueGraph(false);\r\n-            setShowERGraph(false);\r\n-          }}>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n             <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n             <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n             <div className=\"text-xs mt-2 text-blue-700/70\">(All statuses)</div>\r\n-            <div className={`transition-all duration-500 w-full absolute left-0 top-full z-10`} style={{maxHeight: showBookingsGraph ? 'none' : 0}}>\r\n-              {showBookingsGraph && (\r\n-                <div className=\"bg-white rounded-xl shadow p-6 mt-2\">\r\n-                  <h4 className=\"text-lg font-bold mb-4\" style={{color:'#111'}}>Bookings Calendar</h4>\r\n-                  <BookingsCalendar bookings={bookings} labelColor=\"#111\" alwaysOpen={true} />\r\n-                  <div className=\"mt-4 flex gap-4 text-xs\">\r\n-                    <span className=\"bg-blue-200 px-2 py-1 rounded\" style={{color:'#111',fontWeight:'bold'}}>Booked</span>\r\n-                    <span className=\"bg-green-300 px-2 py-1 rounded\" style={{color:'#111',fontWeight:'bold'}}>Completed</span>\r\n-                    <span className=\"bg-yellow-200 px-2 py-1 rounded\" style={{color:'#111',fontWeight:'bold'}}>Pending</span>\r\n-                  </div>\r\n-                </div>\r\n-              )}\r\n-            </div>\r\n           </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100 cursor-pointer transition-all duration-300 relative\" onClick={() => {\r\n-            setShowERGraph(v => !v);\r\n-            setShowRevenueGraph(false);\r\n-            setShowBookingsGraph(false);\r\n-          }}>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n             <div className=\"text-lg font-semibold mb-2 text-blue-700\">ER (Estimated Revenue)</div>\r\n             <div className=\"text-3xl font-bold text-blue-900\">${pendingRevenue}</div>\r\n             <div className=\"text-xs mt-2 text-blue-700/70\">(Pending bookings)</div>\r\n-            <div className={`transition-all duration-500 overflow-hidden w-full absolute left-0 top-full z-10`} style={{maxHeight: showERGraph ? 600 : 0}}>\r\n-              {showERGraph && (\r\n-                <div className=\"bg-white rounded-xl shadow p-6 mt-2\">\r\n-                  <h4 className=\"text-lg font-bold mb-4\" style={{color:'#111'}}>Estimated Revenue by Day</h4>\r\n-                  <EstimatedRevenueChart bookings={bookings} labelColor=\"#111\" />\r\n-                </div>\r\n-              )}\r\n-            </div>\r\n           </div>\r\n         </div>\r\n         {/* Booking list */}\r\n         <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n"
                },
                {
                    "date": 1760680341973,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import { useEffect, useState } from \"react\";\r\n import { useCallback } from \"react\";\r\n import AdminAddBooking from \"../components/AdminAddBooking\";\r\n+import RevenueChart from \"../components/RevenueChart\";\r\n import { useRouter } from \"next/router\";\r\n \r\n export default function AdminDashboard() {\r\n   // Format date as 'oct-19'\r\n@@ -126,8 +127,11 @@\n         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n           <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n             <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n             <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n+            <div className=\"w-full mt-4 mb-2 bg-white rounded-lg p-2\">\r\n+              <RevenueChart bookings={bookings} />\r\n+            </div>\r\n             <div className=\"text-xs mt-2 text-white/80\">(Completed bookings only)</div>\r\n           </div>\r\n           <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n             <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n"
                },
                {
                    "date": 1760681156355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import { useEffect, useState } from \"react\";\r\n import { useCallback } from \"react\";\r\n import AdminAddBooking from \"../components/AdminAddBooking\";\r\n import RevenueChart from \"../components/RevenueChart\";\r\n+import StatusCalendar from \"../components/StatusCalendar\";\r\n import { useRouter } from \"next/router\";\r\n \r\n export default function AdminDashboard() {\r\n   // Format date as 'oct-19'\r\n@@ -118,8 +119,48 @@\n     setEditBooking(booking);\r\n     setShowAdd(true);\r\n   };\r\n \r\n+  // Compute display order: place oldest pending first, then newer pending, then others (newest-first)\r\n+  const computeTimestamp = (b) => {\r\n+    const dateOk = b.date && /^\\d{4}-\\d{2}-\\d{2}$/.test(b.date) ? b.date : '1970-01-01';\r\n+    const timeOk = b.time && /^\\d{2}:\\d{2}$/.test(b.time) ? b.time : '00:00';\r\n+    return new Date(`${dateOk}T${timeOk}:00`).getTime();\r\n+  };\r\n+\r\n+  const getDisplayBookings = () => {\r\n+    const list = [...bookings];\r\n+    if (statusFilter === 'pending') {\r\n+      const pending = list.filter(b => b.status === 'pending');\r\n+      if (pending.length === 0) return [];\r\n+      // Oldest pending first\r\n+      const pendingAsc = [...pending].sort((a, b) => computeTimestamp(a) - computeTimestamp(b));\r\n+      const first = pendingAsc[0];\r\n+      const remaining = pending\r\n+        .filter(b => b !== first)\r\n+        .sort((a, b) => computeTimestamp(b) - computeTimestamp(a)); // newest next\r\n+      return [first, ...remaining];\r\n+    }\r\n+    if (statusFilter === 'complete') {\r\n+      return list\r\n+        .filter(b => b.status === 'complete')\r\n+        .sort((a, b) => computeTimestamp(b) - computeTimestamp(a));\r\n+    }\r\n+    // statusFilter === 'all'\r\n+    const pending = list.filter(b => b.status === 'pending');\r\n+    const others = list.filter(b => b.status !== 'pending');\r\n+    if (pending.length === 0) {\r\n+      return others.sort((a, b) => computeTimestamp(b) - computeTimestamp(a));\r\n+    }\r\n+    const pendingAsc = [...pending].sort((a, b) => computeTimestamp(a) - computeTimestamp(b));\r\n+    const first = pendingAsc[0];\r\n+    const remaining = pending\r\n+      .filter(b => b !== first)\r\n+      .sort((a, b) => computeTimestamp(b) - computeTimestamp(a));\r\n+    const othersSorted = others.sort((a, b) => computeTimestamp(b) - computeTimestamp(a));\r\n+    return [first, ...remaining, ...othersSorted];\r\n+  };\r\n+\r\n   return (\r\n     <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n       <div className=\"max-w-5xl mx-auto\">\r\n         <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n@@ -143,9 +184,9 @@\n             <div className=\"text-3xl font-bold text-blue-900\">${pendingRevenue}</div>\r\n             <div className=\"text-xs mt-2 text-blue-700/70\">(Pending bookings)</div>\r\n           </div>\r\n         </div>\r\n-        {/* Booking list */}\r\n+        {/* Booking list with status calendar */}\r\n         <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n           <div className=\"flex justify-between items-center mb-4\">\r\n             <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n             <button\r\n@@ -154,8 +195,12 @@\n             >\r\n               Add Booking\r\n             </button>\r\n           </div>\r\n+          {/* Status Calendar */}\r\n+          <div className=\"mb-6\">\r\n+            <StatusCalendar bookings={bookings} />\r\n+          </div>\r\n           {/* Status Filter */}\r\n           <div className=\"flex items-center gap-2 mb-4\">\r\n             <span className=\"text-sm text-gray-600\">Filter:</span>\r\n             {[\r\n@@ -190,15 +235,9 @@\n                     <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Actions</th>\r\n                   </tr>\r\n                 </thead>\r\n                 <tbody>\r\n-                  {[...bookings]\r\n-                    .filter(b => statusFilter === 'all' ? true : b.status === statusFilter)\r\n-                    .sort((a, b) => {\r\n-                      const aDT = new Date(`${a.date || '1970-01-01'}T${(a.time || '00:00')}:00`).getTime();\r\n-                      const bDT = new Date(`${b.date || '1970-01-01'}T${(b.time || '00:00')}:00`).getTime();\r\n-                      return bDT - aDT; // most recent first\r\n-                    })\r\n+                  {getDisplayBookings()\r\n                     .map(b => (\r\n                     <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n                       <td className=\"py-2 px-2 sm:px-3\">\r\n                         <span\r\n"
                },
                {
                    "date": 1760681521776,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,416 @@\n+import { useEffect, useState } from \"react\";\r\n+import { useCallback } from \"react\";\r\n+import AdminAddBooking from \"../components/AdminAddBooking\";\r\n+import RevenueChart from \"../components/RevenueChart\";\r\n+import StatusCalendar from \"../components/StatusCalendar\";\r\n+import { useRouter } from \"next/router\";\r\n+\r\n+export default function AdminDashboard() {\r\n+  // Format date as 'oct-19'\r\n+  function formatDateShort(dateStr) {\r\n+    if (!dateStr) return \"\";\r\n+    const parts = dateStr.split(\"-\");\r\n+    if (parts.length !== 3) return dateStr;\r\n+    const y = parseInt(parts[0], 10);\r\n+    const m = parseInt(parts[1], 10);\r\n+    const d = parseInt(parts[2], 10);\r\n+    if (isNaN(y) || isNaN(m) || isNaN(d)) return dateStr;\r\n+    const months = [\"jan\",\"feb\",\"mar\",\"apr\",\"may\",\"jun\",\"jul\",\"aug\",\"sep\",\"oct\",\"nov\",\"dec\"];\r\n+    return `${months[m - 1]}-${d}`;\r\n+  }\r\n+  const router = useRouter();\r\n+  const [bookings, setBookings] = useState([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+  const [showAdd, setShowAdd] = useState(false);\r\n+  const [showDetail, setShowDetail] = useState(false);\r\n+  const [detailBooking, setDetailBooking] = useState(null);\r\n+  const [editBooking, setEditBooking] = useState(null);\r\n+  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n+  const [statusFilter, setStatusFilter] = useState(\"all\");\r\n+  // Calculate total revenue (exclude pending)\r\n+  const totalRevenue = bookings.filter(b => b.status === 'complete').reduce((sum, b) => sum + (b.amount || 0), 0);\r\n+  // Pending count and estimated revenue\r\n+  const pendingBookings = bookings.filter(b => b.status === 'pending');\r\n+  const pendingCount = pendingBookings.length;\r\n+  const pendingRevenue = pendingBookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n+\r\n+  // After a successful add from the child modal, refresh from DB and close the modal\r\n+  const handleAddFromChild = useCallback(async () => {\r\n+    setLoading(true);\r\n+    try {\r\n+      const resp = await fetch(\"/api/get-bookings\");\r\n+      const data = await resp.json();\r\n+      if (resp.ok && data.success) {\r\n+        setBookings(data.bookings.map(b => ({ ...b, id: b._id || b.id })));\r\n+      } else {\r\n+        setBookings([]);\r\n+      }\r\n+    } catch {\r\n+      setBookings([]);\r\n+    }\r\n+    setLoading(false);\r\n+    setShowAdd(false);\r\n+    setEditBooking(null);\r\n+  }, []);\r\n+\r\n+  // Fetch bookings from MongoDB\r\n+  const updatePendingToComplete = useCallback(async (bookingsList) => {\r\n+    const now = new Date();\r\n+    const updates = [];\r\n+    for (const b of bookingsList) {\r\n+      if (b.status === 'pending' && b.date && b.time) {\r\n+        const dt = new Date(`${b.date}T${b.time}:00`);\r\n+        if (dt < now) {\r\n+          // Update status in MongoDB\r\n+          updates.push(fetch(`/api/update-booking-status?id=${b.id}&status=complete`, { method: 'PATCH' }));\r\n+        }\r\n+      }\r\n+    }\r\n+    if (updates.length > 0) {\r\n+      await Promise.all(updates);\r\n+      // Refetch bookings after updates\r\n+      return true;\r\n+    }\r\n+    return false;\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    async function fetchBookingsAndUpdate() {\r\n+      setLoading(true);\r\n+      try {\r\n+        const resp = await fetch(\"/api/get-bookings\");\r\n+        const data = await resp.json();\r\n+        if (resp.ok && data.success) {\r\n+          const bookingsArr = data.bookings.map(b => ({ ...b, id: b._id || b.id }));\r\n+          // Check and update pending bookings\r\n+          const didUpdate = await updatePendingToComplete(bookingsArr);\r\n+          if (didUpdate) {\r\n+            // Refetch after update\r\n+            const resp2 = await fetch(\"/api/get-bookings\");\r\n+            const data2 = await resp2.json();\r\n+            if (resp2.ok && data2.success) {\r\n+              setBookings(data2.bookings.map(b => ({ ...b, id: b._id || b.id })));\r\n+            } else {\r\n+              setBookings([]);\r\n+            }\r\n+          } else {\r\n+            setBookings(bookingsArr);\r\n+          }\r\n+        } else {\r\n+          setBookings([]);\r\n+        }\r\n+      } catch {\r\n+        setBookings([]);\r\n+      }\r\n+      setLoading(false);\r\n+    }\r\n+    fetchBookingsAndUpdate();\r\n+  }, [updatePendingToComplete]);\r\n+\r\n+  // Show booking details modal\r\n+  const handleShowDetail = (booking) => {\r\n+    setDetailBooking(booking);\r\n+    setShowDeleteConfirm(false);\r\n+    setShowDetail(true);\r\n+  };\r\n+\r\n+  // Edit booking: open modal with data\r\n+  const handleEditBooking = (booking) => {\r\n+    setEditBooking(booking);\r\n+    setShowAdd(true);\r\n+  };\r\n+\r\n+  // Compute display order: place oldest pending first, then newer pending, then others (newest-first)\r\n+  const computeTimestamp = (b) => {\r\n+    const dateOk = b.date && /^\\d{4}-\\d{2}-\\d{2}$/.test(b.date) ? b.date : '1970-01-01';\r\n+    const timeOk = b.time && /^\\d{2}:\\d{2}$/.test(b.time) ? b.time : '00:00';\r\n+    return new Date(`${dateOk}T${timeOk}:00`).getTime();\r\n+  };\r\n+\r\n+  const getDisplayBookings = () => {\r\n+    const list = [...bookings];\r\n+    if (statusFilter === 'pending') {\r\n+      const pending = list.filter(b => b.status === 'pending');\r\n+      if (pending.length === 0) return [];\r\n+      // Oldest pending first\r\n+      const pendingAsc = [...pending].sort((a, b) => computeTimestamp(a) - computeTimestamp(b));\r\n+      const first = pendingAsc[0];\r\n+      const remaining = pending\r\n+        .filter(b => b !== first)\r\n+        .sort((a, b) => computeTimestamp(b) - computeTimestamp(a)); // newest next\r\n+      return [first, ...remaining];\r\n+    }\r\n+    if (statusFilter === 'complete') {\r\n+      return list\r\n+        .filter(b => b.status === 'complete')\r\n+        .sort((a, b) => computeTimestamp(b) - computeTimestamp(a));\r\n+    }\r\n+    // statusFilter === 'all'\r\n+    const pending = list.filter(b => b.status === 'pending');\r\n+    const others = list.filter(b => b.status !== 'pending');\r\n+    if (pending.length === 0) {\r\n+      return others.sort((a, b) => computeTimestamp(b) - computeTimestamp(a));\r\n+    }\r\n+    const pendingAsc = [...pending].sort((a, b) => computeTimestamp(a) - computeTimestamp(b));\r\n+    const first = pendingAsc[0];\r\n+    const remaining = pending\r\n+      .filter(b => b !== first)\r\n+      .sort((a, b) => computeTimestamp(b) - computeTimestamp(a));\r\n+    const othersSorted = others.sort((a, b) => computeTimestamp(b) - computeTimestamp(a));\r\n+    return [first, ...remaining, ...othersSorted];\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n+      <div className=\"max-w-5xl mx-auto\">\r\n+        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n+        {/* Revenue summary */}\r\n+        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n+          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n+            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n+            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n+            <div className=\"w-full mt-4 mb-2 bg-white rounded-lg p-2\">\r\n+              <RevenueChart bookings={bookings} />\r\n+            </div>\r\n+            <div className=\"text-xs mt-2 text-white/80\">(Completed bookings only)</div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n+            <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n+            <div className=\"text-xs mt-2 text-blue-700/70\">(All statuses)</div>\r\n+            {/* Calendar moved here under the Bookings card */}\r\n+            <div className=\"w-full mt-4\">\r\n+              <StatusCalendar bookings={bookings} />\r\n+            </div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">PE (Pending Estimate)</div>\r\n+            <div className=\"text-3xl font-bold text-blue-900\">${pendingRevenue}</div>\r\n+            <div className=\"w-full mt-4 mb-2 bg-white rounded-lg p-2\">\r\n+              <RevenueChart\r\n+                bookings={bookings}\r\n+                status=\"pending\"\r\n+                datasetLabel=\"Pending Estimate\"\r\n+                borderColor=\"rgb(202, 138, 4)\"           \r\n+                backgroundColor=\"rgba(202,138,4,0.2)\"   \r\n+                pointBackgroundColor=\"rgb(202, 138, 4)\" \r\n+              />\r\n+            </div>\r\n+            <div className=\"text-xs mt-2 text-blue-700/70\">(Pending bookings)</div>\r\n+          </div>\r\n+        </div>\r\n+        {/* Booking list with status calendar */}\r\n+        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n+          <div className=\"flex justify-between items-center mb-4\">\r\n+            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n+            <button\r\n+              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+              onClick={() => setShowAdd(true)}\r\n+            >\r\n+              Add Booking\r\n+            </button>\r\n+          </div>\r\n+          {/* Status Filter */}\r\n+          <div className=\"flex items-center gap-2 mb-4\">\r\n+            <span className=\"text-sm text-gray-600\">Filter:</span>\r\n+            {[\r\n+              { key: 'all', label: 'All' },\r\n+              { key: 'pending', label: 'Pending' },\r\n+              { key: 'complete', label: 'Complete' },\r\n+            ].map(opt => (\r\n+              <button\r\n+                key={opt.key}\r\n+                type=\"button\"\r\n+                onClick={() => setStatusFilter(opt.key)}\r\n+                className={`px-3 py-1 rounded-full text-sm border ${statusFilter === opt.key ? 'bg-blue-600 text-white border-blue-600' : 'bg-white text-blue-700 border-blue-200 hover:bg-blue-50'}`}\r\n+              >\r\n+                {opt.label}\r\n+              </button>\r\n+            ))}\r\n+          </div>\r\n+          <div className=\"overflow-x-auto\">\r\n+            {loading ? (\r\n+              <div className=\"py-10 text-center text-blue-600 font-semibold text-lg\">Loading bookings...</div>\r\n+            ) : (\r\n+              <table className=\"w-full text-left border-collapse min-w-[760px] text-xs sm:text-sm\">\r\n+                <thead>\r\n+                  <tr style={{ background: '#f5f5f5' }}>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Car</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Time</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Actions</th>\r\n+                  </tr>\r\n+                </thead>\r\n+                <tbody>\r\n+                  {getDisplayBookings()\r\n+                    .map(b => (\r\n+                    <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n+                      <td className=\"py-2 px-2 sm:px-3\">\r\n+                        <span\r\n+                          aria-label={b.status}\r\n+                          className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}\r\n+                        >\r\n+                          <span className=\"sm:hidden\">\r\n+                            {b.status === 'complete' ? 'C' : b.status === 'pending' ? 'P' : (b.status?.[0]?.toUpperCase() || '')}\r\n+                          </span>\r\n+                          <span className=\"hidden sm:inline\">{b.status}</span>\r\n+                        </span>\r\n+                      </td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 max-w-[140px] sm:max-w-none truncate\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleEditBooking(b)}>{b.name}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 max-w-[160px] truncate\" style={{ color: '#222' }}>{b.carName || \"--\"}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{b.service}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{formatDateShort(b.date)}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{b.time || \"--\"}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>${b.amount}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3\">\r\n+                        <button\r\n+                          type=\"button\"\r\n+                          className=\"px-3 py-1 text-xs rounded-full border border-blue-200 text-blue-700 hover:bg-blue-50\"\r\n+                          onClick={() => {\r\n+                            setDetailBooking(b);\r\n+                            setShowDeleteConfirm(false);\r\n+                            setShowDetail(true);\r\n+                          }}\r\n+                        >\r\n+                          Details\r\n+                        </button>\r\n+                      </td>\r\n+                    </tr>\r\n+                  ))}\r\n+                </tbody>\r\n+              </table>\r\n+            )}\r\n+          </div>\r\n+        </div>\r\n+        {/* Booking details modal */}\r\n+        {showDetail && detailBooking && (\r\n+          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n+              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n+              <div className=\"space-y-3 text-gray-800\">\r\n+                <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n+                <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n+                <div><span className=\"font-semibold\">Car:</span> {detailBooking.carName || \"--\"}</div>\r\n+                <div><span className=\"font-semibold\">Car Type:</span> {detailBooking.carType || \"--\"}</div>\r\n+                {detailBooking.addOns && detailBooking.addOns.length > 0 && (\r\n+                  <div>\r\n+                    <span className=\"font-semibold\">Add-Ons:</span>\r\n+                    <ul className=\"list-disc ml-6 mt-1\">\r\n+                      {detailBooking.addOns.map((a, i) => (\r\n+                        <li key={i}>{a.label}</li>\r\n+                      ))}\r\n+                    </ul>\r\n+                  </div>\r\n+                )}\r\n+                <div><span className=\"font-semibold\">Date:</span> {formatDateShort(detailBooking.date)}</div>\r\n+                <div><span className=\"font-semibold\">Time:</span> {detailBooking.time || \"--\"}</div>\r\n+                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n+                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n+                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n+                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n+                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n+                \r\n+              </div>\r\n+              <div className=\"mt-8 flex gap-3\">\r\n+                {!showDeleteConfirm ? (\r\n+                  <>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-red-600 hover:bg-red-700 text-white font-semibold\"\r\n+                      onClick={() => setShowDeleteConfirm(true)}\r\n+                    >\r\n+                      Delete\r\n+                    </button>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+                      onClick={() => {\r\n+                        setShowDetail(false);\r\n+                        setShowDeleteConfirm(false);\r\n+                      }}\r\n+                    >\r\n+                      Close\r\n+                    </button>\r\n+                  </>\r\n+                ) : (\r\n+                  <>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\"\r\n+                      onClick={() => setShowDeleteConfirm(false)}\r\n+                    >\r\n+                      Cancel\r\n+                    </button>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-red-600 hover:bg-red-700 text-white font-semibold\"\r\n+                      onClick={async () => {\r\n+                        if (!detailBooking?.id) return;\r\n+                        setLoading(true);\r\n+                        try {\r\n+                          await fetch(`/api/delete-booking?id=${detailBooking.id}`, { method: 'DELETE' });\r\n+                        } catch {}\r\n+                        // Refresh bookings from DB\r\n+                        try {\r\n+                          const resp = await fetch(\"/api/get-bookings\");\r\n+                          const data = await resp.json();\r\n+                          if (resp.ok && data.success) {\r\n+                            setBookings(data.bookings.map(b => ({ ...b, id: b._id || b.id })));\r\n+                          } else {\r\n+                            setBookings([]);\r\n+                          }\r\n+                        } catch {\r\n+                          setBookings([]);\r\n+                        }\r\n+                        setLoading(false);\r\n+                        setShowDeleteConfirm(false);\r\n+                        setShowDetail(false);\r\n+                        setDetailBooking(null);\r\n+                      }}\r\n+                    >\r\n+                      Confirm Delete\r\n+                    </button>\r\n+                  </>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+        {/* Add booking modal (component) */}\r\n+        <AdminAddBooking\r\n+          open={showAdd}\r\n+          onClose={() => { setShowAdd(false); setEditBooking(null); }}\r\n+          onAdd={(payload) => handleAddFromChild(payload)}\r\n+          editBooking={editBooking}\r\n+          onEdit={async (updated) => {\r\n+            // PATCH to API\r\n+            if (!updated.id) return;\r\n+            setLoading(true);\r\n+            try {\r\n+              await fetch(`/api/update-booking?id=${updated.id}`, {\r\n+                method: 'PATCH',\r\n+                headers: { 'Content-Type': 'application/json' },\r\n+                body: JSON.stringify(updated),\r\n+              });\r\n+            } catch {}\r\n+            // Refresh bookings\r\n+            try {\r\n+              const resp = await fetch(\"/api/get-bookings\");\r\n+              const data = await resp.json();\r\n+              if (resp.ok && data.success) {\r\n+                setBookings(data.bookings.map(b => ({ ...b, id: b._id || b.id })));\r\n+              } else {\r\n+                setBookings([]);\r\n+              }\r\n+            } catch {\r\n+              setBookings([]);\r\n+            }\r\n+            setLoading(false);\r\n+            setShowAdd(false);\r\n+            setEditBooking(null);\r\n+          }}\r\n+        />\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1760682512697,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,10 @@\n import { useCallback } from \"react\";\r\n import AdminAddBooking from \"../components/AdminAddBooking\";\r\n import RevenueChart from \"../components/RevenueChart\";\r\n import StatusCalendar from \"../components/StatusCalendar\";\r\n+import dynamic from 'next/dynamic';\r\n+const VisitorsCard = dynamic(() => import('../components/VisitorsCard'), { ssr: false });\r\n import { useRouter } from \"next/router\";\r\n \r\n export default function AdminDashboard() {\r\n   // Format date as 'oct-19'\r\n@@ -164,9 +166,9 @@\n     <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n       <div className=\"max-w-5xl mx-auto\">\r\n         <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n         {/* Revenue summary */}\r\n-        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n+  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n           <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n             <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n             <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n             <div className=\"w-full mt-4 mb-2 bg-white rounded-lg p-2\">\r\n@@ -198,409 +200,11 @@\n             </div>\r\n             <div className=\"text-xs mt-2 text-blue-700/70\">(Pending bookings)</div>\r\n           </div>\r\n         </div>\r\n-        {/* Booking list with status calendar */}\r\n-        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n-          <div className=\"flex justify-between items-center mb-4\">\r\n-            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n-            <button\r\n-              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-              onClick={() => setShowAdd(true)}\r\n-            >\r\n-              Add Booking\r\n-            </button>\r\n-          </div>\r\n-          {/* Status Filter */}\r\n-          <div className=\"flex items-center gap-2 mb-4\">\r\n-            <span className=\"text-sm text-gray-600\">Filter:</span>\r\n-            {[\r\n-              { key: 'all', label: 'All' },\r\n-              { key: 'pending', label: 'Pending' },\r\n-              { key: 'complete', label: 'Complete' },\r\n-            ].map(opt => (\r\n-              <button\r\n-                key={opt.key}\r\n-                type=\"button\"\r\n-                onClick={() => setStatusFilter(opt.key)}\r\n-                className={`px-3 py-1 rounded-full text-sm border ${statusFilter === opt.key ? 'bg-blue-600 text-white border-blue-600' : 'bg-white text-blue-700 border-blue-200 hover:bg-blue-50'}`}\r\n-              >\r\n-                {opt.label}\r\n-              </button>\r\n-            ))}\r\n-          </div>\r\n-          <div className=\"overflow-x-auto\">\r\n-            {loading ? (\r\n-              <div className=\"py-10 text-center text-blue-600 font-semibold text-lg\">Loading bookings...</div>\r\n-            ) : (\r\n-              <table className=\"w-full text-left border-collapse min-w-[760px] text-xs sm:text-sm\">\r\n-                <thead>\r\n-                  <tr style={{ background: '#f5f5f5' }}>\r\n-                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n-                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n-                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Car</th>\r\n-                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n-                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n-                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Time</th>\r\n-                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n-                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Actions</th>\r\n-                  </tr>\r\n-                </thead>\r\n-                <tbody>\r\n-                  {getDisplayBookings()\r\n-                    .map(b => (\r\n-                    <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n-                      <td className=\"py-2 px-2 sm:px-3\">\r\n-                        <span\r\n-                          aria-label={b.status}\r\n-                          className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}\r\n-                        >\r\n-                          <span className=\"sm:hidden\">\r\n-                            {b.status === 'complete' ? 'C' : b.status === 'pending' ? 'P' : (b.status?.[0]?.toUpperCase() || '')}\r\n-                          </span>\r\n-                          <span className=\"hidden sm:inline\">{b.status}</span>\r\n-                        </span>\r\n-                      </td>\r\n-                      <td className=\"py-2 px-2 sm:px-3 max-w-[140px] sm:max-w-none truncate\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleEditBooking(b)}>{b.name}</td>\r\n-                      <td className=\"py-2 px-2 sm:px-3 max-w-[160px] truncate\" style={{ color: '#222' }}>{b.carName || \"--\"}</td>\r\n-                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{b.service}</td>\r\n-                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{formatDateShort(b.date)}</td>\r\n-                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{b.time || \"--\"}</td>\r\n-                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>${b.amount}</td>\r\n-                      <td className=\"py-2 px-2 sm:px-3\">\r\n-                        <button\r\n-                          type=\"button\"\r\n-                          className=\"px-3 py-1 text-xs rounded-full border border-blue-200 text-blue-700 hover:bg-blue-50\"\r\n-                          onClick={() => {\r\n-                            setDetailBooking(b);\r\n-                            setShowDeleteConfirm(false);\r\n-                            setShowDetail(true);\r\n-                          }}\r\n-                        >\r\n-                          Details\r\n-                        </button>\r\n-                      </td>\r\n-                    </tr>\r\n-                  ))}\r\n-                </tbody>\r\n-              </table>\r\n-            )}\r\n-          </div>\r\n-        </div>\r\n-        {/* Booking details modal */}\r\n-        {showDetail && detailBooking && (\r\n-          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n-              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n-              <div className=\"space-y-3 text-gray-800\">\r\n-                <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n-                <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n-                <div><span className=\"font-semibold\">Car:</span> {detailBooking.carName || \"--\"}</div>\r\n-                <div><span className=\"font-semibold\">Car Type:</span> {detailBooking.carType || \"--\"}</div>\r\n-                {detailBooking.addOns && detailBooking.addOns.length > 0 && (\r\n-                  <div>\r\n-                    <span className=\"font-semibold\">Add-Ons:</span>\r\n-                    <ul className=\"list-disc ml-6 mt-1\">\r\n-                      {detailBooking.addOns.map((a, i) => (\r\n-                        <li key={i}>{a.label}</li>\r\n-                      ))}\r\n-                    </ul>\r\n-                  </div>\r\n-                )}\r\n-                <div><span className=\"font-semibold\">Date:</span> {formatDateShort(detailBooking.date)}</div>\r\n-                <div><span className=\"font-semibold\">Time:</span> {detailBooking.time || \"--\"}</div>\r\n-                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n-                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n-                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n-                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n-                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n-                \r\n-              </div>\r\n-              <div className=\"mt-8 flex gap-3\">\r\n-                {!showDeleteConfirm ? (\r\n-                  <>\r\n-                    <button\r\n-                      className=\"w-1/2 py-3 rounded-lg bg-red-600 hover:bg-red-700 text-white font-semibold\"\r\n-                      onClick={() => setShowDeleteConfirm(true)}\r\n-                    >\r\n-                      Delete\r\n-                    </button>\r\n-                    <button\r\n-                      className=\"w-1/2 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n-                      onClick={() => {\r\n-                        setShowDetail(false);\r\n-                        setShowDeleteConfirm(false);\r\n-                      }}\r\n-                    >\r\n-                      Close\r\n-                    </button>\r\n-                  </>\r\n-                ) : (\r\n-                  <>\r\n-                    <button\r\n-                      className=\"w-1/2 py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\"\r\n-                      onClick={() => setShowDeleteConfirm(false)}\r\n-                    >\r\n-                      Cancel\r\n-                    </button>\r\n-                    <button\r\n-                      className=\"w-1/2 py-3 rounded-lg bg-red-600 hover:bg-red-700 text-white font-semibold\"\r\n-                      onClick={async () => {\r\n-                        if (!detailBooking?.id) return;\r\n-                        setLoading(true);\r\n-                        try {\r\n-                          await fetch(`/api/delete-booking?id=${detailBooking.id}`, { method: 'DELETE' });\r\n-                        } catch {}\r\n-                        // Refresh bookings from DB\r\n-                        try {\r\n-                          const resp = await fetch(\"/api/get-bookings\");\r\n-                          const data = await resp.json();\r\n-                          if (resp.ok && data.success) {\r\n-                            setBookings(data.bookings.map(b => ({ ...b, id: b._id || b.id })));\r\n-                          } else {\r\n-                            setBookings([]);\r\n-                          }\r\n-                        } catch {\r\n-                          setBookings([]);\r\n-                        }\r\n-                        setLoading(false);\r\n-                        setShowDeleteConfirm(false);\r\n-                        setShowDetail(false);\r\n-                        setDetailBooking(null);\r\n-                      }}\r\n-                    >\r\n-                      Confirm Delete\r\n-                    </button>\r\n-                  </>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-        {/* Add booking modal (component) */}\r\n-        <AdminAddBooking\r\n-          open={showAdd}\r\n-          onClose={() => { setShowAdd(false); setEditBooking(null); }}\r\n-          onAdd={(payload) => handleAddFromChild(payload)}\r\n-          editBooking={editBooking}\r\n-          onEdit={async (updated) => {\r\n-            // PATCH to API\r\n-            if (!updated.id) return;\r\n-            setLoading(true);\r\n-            try {\r\n-              await fetch(`/api/update-booking?id=${updated.id}`, {\r\n-                method: 'PATCH',\r\n-                headers: { 'Content-Type': 'application/json' },\r\n-                body: JSON.stringify(updated),\r\n-              });\r\n-            } catch {}\r\n-            // Refresh bookings\r\n-            try {\r\n-              const resp = await fetch(\"/api/get-bookings\");\r\n-              const data = await resp.json();\r\n-              if (resp.ok && data.success) {\r\n-                setBookings(data.bookings.map(b => ({ ...b, id: b._id || b.id })));\r\n-              } else {\r\n-                setBookings([]);\r\n-              }\r\n-            } catch {\r\n-              setBookings([]);\r\n-            }\r\n-            setLoading(false);\r\n-            setShowAdd(false);\r\n-            setEditBooking(null);\r\n-          }}\r\n-        />\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import { useEffect, useState } from \"react\";\r\n-import { useCallback } from \"react\";\r\n-import AdminAddBooking from \"../components/AdminAddBooking\";\r\n-import RevenueChart from \"../components/RevenueChart\";\r\n-import StatusCalendar from \"../components/StatusCalendar\";\r\n-import { useRouter } from \"next/router\";\r\n-\r\n-export default function AdminDashboard() {\r\n-  // Format date as 'oct-19'\r\n-  function formatDateShort(dateStr) {\r\n-    if (!dateStr) return \"\";\r\n-    const parts = dateStr.split(\"-\");\r\n-    if (parts.length !== 3) return dateStr;\r\n-    const y = parseInt(parts[0], 10);\r\n-    const m = parseInt(parts[1], 10);\r\n-    const d = parseInt(parts[2], 10);\r\n-    if (isNaN(y) || isNaN(m) || isNaN(d)) return dateStr;\r\n-    const months = [\"jan\",\"feb\",\"mar\",\"apr\",\"may\",\"jun\",\"jul\",\"aug\",\"sep\",\"oct\",\"nov\",\"dec\"];\r\n-    return `${months[m - 1]}-${d}`;\r\n-  }\r\n-  const router = useRouter();\r\n-  const [bookings, setBookings] = useState([]);\r\n-  const [loading, setLoading] = useState(true);\r\n-  const [showAdd, setShowAdd] = useState(false);\r\n-  const [showDetail, setShowDetail] = useState(false);\r\n-  const [detailBooking, setDetailBooking] = useState(null);\r\n-  const [editBooking, setEditBooking] = useState(null);\r\n-  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n-  const [statusFilter, setStatusFilter] = useState(\"all\");\r\n-  // Calculate total revenue (exclude pending)\r\n-  const totalRevenue = bookings.filter(b => b.status === 'complete').reduce((sum, b) => sum + (b.amount || 0), 0);\r\n-  // Pending count and estimated revenue\r\n-  const pendingBookings = bookings.filter(b => b.status === 'pending');\r\n-  const pendingCount = pendingBookings.length;\r\n-  const pendingRevenue = pendingBookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n-\r\n-  // After a successful add from the child modal, refresh from DB and close the modal\r\n-  const handleAddFromChild = useCallback(async () => {\r\n-    setLoading(true);\r\n-    try {\r\n-      const resp = await fetch(\"/api/get-bookings\");\r\n-      const data = await resp.json();\r\n-      if (resp.ok && data.success) {\r\n-        setBookings(data.bookings.map(b => ({ ...b, id: b._id || b.id })));\r\n-      } else {\r\n-        setBookings([]);\r\n-      }\r\n-    } catch {\r\n-      setBookings([]);\r\n-    }\r\n-    setLoading(false);\r\n-    setShowAdd(false);\r\n-    setEditBooking(null);\r\n-  }, []);\r\n-\r\n-  // Fetch bookings from MongoDB\r\n-  const updatePendingToComplete = useCallback(async (bookingsList) => {\r\n-    const now = new Date();\r\n-    const updates = [];\r\n-    for (const b of bookingsList) {\r\n-      if (b.status === 'pending' && b.date && b.time) {\r\n-        const dt = new Date(`${b.date}T${b.time}:00`);\r\n-        if (dt < now) {\r\n-          // Update status in MongoDB\r\n-          updates.push(fetch(`/api/update-booking-status?id=${b.id}&status=complete`, { method: 'PATCH' }));\r\n-        }\r\n-      }\r\n-    }\r\n-    if (updates.length > 0) {\r\n-      await Promise.all(updates);\r\n-      // Refetch bookings after updates\r\n-      return true;\r\n-    }\r\n-    return false;\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    async function fetchBookingsAndUpdate() {\r\n-      setLoading(true);\r\n-      try {\r\n-        const resp = await fetch(\"/api/get-bookings\");\r\n-        const data = await resp.json();\r\n-        if (resp.ok && data.success) {\r\n-          const bookingsArr = data.bookings.map(b => ({ ...b, id: b._id || b.id }));\r\n-          // Check and update pending bookings\r\n-          const didUpdate = await updatePendingToComplete(bookingsArr);\r\n-          if (didUpdate) {\r\n-            // Refetch after update\r\n-            const resp2 = await fetch(\"/api/get-bookings\");\r\n-            const data2 = await resp2.json();\r\n-            if (resp2.ok && data2.success) {\r\n-              setBookings(data2.bookings.map(b => ({ ...b, id: b._id || b.id })));\r\n-            } else {\r\n-              setBookings([]);\r\n-            }\r\n-          } else {\r\n-            setBookings(bookingsArr);\r\n-          }\r\n-        } else {\r\n-          setBookings([]);\r\n-        }\r\n-      } catch {\r\n-        setBookings([]);\r\n-      }\r\n-      setLoading(false);\r\n-    }\r\n-    fetchBookingsAndUpdate();\r\n-  }, [updatePendingToComplete]);\r\n-\r\n-  // Show booking details modal\r\n-  const handleShowDetail = (booking) => {\r\n-    setDetailBooking(booking);\r\n-    setShowDeleteConfirm(false);\r\n-    setShowDetail(true);\r\n-  };\r\n-\r\n-  // Edit booking: open modal with data\r\n-  const handleEditBooking = (booking) => {\r\n-    setEditBooking(booking);\r\n-    setShowAdd(true);\r\n-  };\r\n-\r\n-  // Compute display order: place oldest pending first, then newer pending, then others (newest-first)\r\n-  const computeTimestamp = (b) => {\r\n-    const dateOk = b.date && /^\\d{4}-\\d{2}-\\d{2}$/.test(b.date) ? b.date : '1970-01-01';\r\n-    const timeOk = b.time && /^\\d{2}:\\d{2}$/.test(b.time) ? b.time : '00:00';\r\n-    return new Date(`${dateOk}T${timeOk}:00`).getTime();\r\n-  };\r\n-\r\n-  const getDisplayBookings = () => {\r\n-    const list = [...bookings];\r\n-    if (statusFilter === 'pending') {\r\n-      const pending = list.filter(b => b.status === 'pending');\r\n-      if (pending.length === 0) return [];\r\n-      // Oldest pending first\r\n-      const pendingAsc = [...pending].sort((a, b) => computeTimestamp(a) - computeTimestamp(b));\r\n-      const first = pendingAsc[0];\r\n-      const remaining = pending\r\n-        .filter(b => b !== first)\r\n-        .sort((a, b) => computeTimestamp(b) - computeTimestamp(a)); // newest next\r\n-      return [first, ...remaining];\r\n-    }\r\n-    if (statusFilter === 'complete') {\r\n-      return list\r\n-        .filter(b => b.status === 'complete')\r\n-        .sort((a, b) => computeTimestamp(b) - computeTimestamp(a));\r\n-    }\r\n-    // statusFilter === 'all'\r\n-    const pending = list.filter(b => b.status === 'pending');\r\n-    const others = list.filter(b => b.status !== 'pending');\r\n-    if (pending.length === 0) {\r\n-      return others.sort((a, b) => computeTimestamp(b) - computeTimestamp(a));\r\n-    }\r\n-    const pendingAsc = [...pending].sort((a, b) => computeTimestamp(a) - computeTimestamp(b));\r\n-    const first = pendingAsc[0];\r\n-    const remaining = pending\r\n-      .filter(b => b !== first)\r\n-      .sort((a, b) => computeTimestamp(b) - computeTimestamp(a));\r\n-    const othersSorted = others.sort((a, b) => computeTimestamp(b) - computeTimestamp(a));\r\n-    return [first, ...remaining, ...othersSorted];\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n-      <div className=\"max-w-5xl mx-auto\">\r\n-        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n-        {/* Revenue summary */}\r\n+        {/* Optional: Visitors (GA4) */}\r\n         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n-          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n-            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n-            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n-            <div className=\"w-full mt-4 mb-2 bg-white rounded-lg p-2\">\r\n-              <RevenueChart bookings={bookings} />\r\n-            </div>\r\n-            <div className=\"text-xs mt-2 text-white/80\">(Completed bookings only)</div>\r\n-          </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n-            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n-            <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n-            <div className=\"text-xs mt-2 text-blue-700/70\">(All statuses)</div>\r\n-          </div>\r\n-          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n-            <div className=\"text-lg font-semibold mb-2 text-blue-700\">ER (Estimated Revenue)</div>\r\n-            <div className=\"text-3xl font-bold text-blue-900\">${pendingRevenue}</div>\r\n-            <div className=\"text-xs mt-2 text-blue-700/70\">(Pending bookings)</div>\r\n-          </div>\r\n+          <VisitorsCard />\r\n         </div>\r\n         {/* Booking list with status calendar */}\r\n         <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n           <div className=\"flex justify-between items-center mb-4\">\r\n@@ -611,12 +215,8 @@\n             >\r\n               Add Booking\r\n             </button>\r\n           </div>\r\n-          {/* Status Calendar */}\r\n-          <div className=\"mb-6\">\r\n-            <StatusCalendar bookings={bookings} />\r\n-          </div>\r\n           {/* Status Filter */}\r\n           <div className=\"flex items-center gap-2 mb-4\">\r\n             <span className=\"text-sm text-gray-600\">Filter:</span>\r\n             {[\r\n"
                },
                {
                    "date": 1760730728639,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,11 @@\n import { useEffect, useState } from \"react\";\r\n import { useCallback } from \"react\";\r\n import AdminAddBooking from \"../components/AdminAddBooking\";\r\n import RevenueChart from \"../components/RevenueChart\";\r\n-import StatusCalendar from \"../components/StatusCalendar\";\r\n import dynamic from 'next/dynamic';\r\n const VisitorsCard = dynamic(() => import('../components/VisitorsCard'), { ssr: false });\r\n+const StatusCalendar = dynamic(() => import('../components/StatusCalendar'), { ssr: false });\r\n import { useRouter } from \"next/router\";\r\n \r\n export default function AdminDashboard() {\r\n   // Format date as 'oct-19'\r\n"
                },
                {
                    "date": 1760730803052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,11 @@\n import { useEffect, useState } from \"react\";\r\n import { useCallback } from \"react\";\r\n import AdminAddBooking from \"../components/AdminAddBooking\";\r\n import RevenueChart from \"../components/RevenueChart\";\r\n+import StatusCalendar from \"../components/StatusCalendar\";\r\n import dynamic from 'next/dynamic';\r\n const VisitorsCard = dynamic(() => import('../components/VisitorsCard'), { ssr: false });\r\n-const StatusCalendar = dynamic(() => import('../components/StatusCalendar'), { ssr: false });\r\n import { useRouter } from \"next/router\";\r\n \r\n export default function AdminDashboard() {\r\n   // Format date as 'oct-19'\r\n"
                },
                {
                    "date": 1760846681454,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,420 @@\n+import { useEffect, useState } from \"react\";\r\n+import { useCallback } from \"react\";\r\n+import AdminAddBooking from \"../components/AdminAddBooking\";\r\n+import RevenueChart from \"../components/RevenueChart\";\r\n+import StatusCalendar from \"../components/StatusCalendar\";\r\n+import dynamic from 'next/dynamic';\r\n+const VisitorsCard = dynamic(() => import('../components/VisitorsCard'), { ssr: false });\r\n+import { useRouter } from \"next/router\";\r\n+\r\n+export default function AdminDashboard() {\r\n+  // Format date as 'oct-19'\r\n+  function formatDateShort(dateStr) {\r\n+    if (!dateStr) return \"\";\r\n+    const parts = dateStr.split(\"-\");\r\n+    if (parts.length !== 3) return dateStr;\r\n+    const y = parseInt(parts[0], 10);\r\n+    const m = parseInt(parts[1], 10);\r\n+    const d = parseInt(parts[2], 10);\r\n+    if (isNaN(y) || isNaN(m) || isNaN(d)) return dateStr;\r\n+    const months = [\"jan\",\"feb\",\"mar\",\"apr\",\"may\",\"jun\",\"jul\",\"aug\",\"sep\",\"oct\",\"nov\",\"dec\"];\r\n+    return `${months[m - 1]}-${d}`;\r\n+  }\r\n+  const router = useRouter();\r\n+  const [bookings, setBookings] = useState([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+  const [showAdd, setShowAdd] = useState(false);\r\n+  const [showDetail, setShowDetail] = useState(false);\r\n+  const [detailBooking, setDetailBooking] = useState(null);\r\n+  const [editBooking, setEditBooking] = useState(null);\r\n+  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n+  const [statusFilter, setStatusFilter] = useState(\"all\");\r\n+  // Calculate total revenue (exclude pending)\r\n+  const totalRevenue = bookings.filter(b => b.status === 'complete').reduce((sum, b) => sum + (b.amount || 0), 0);\r\n+  // Pending count and estimated revenue\r\n+  const pendingBookings = bookings.filter(b => b.status === 'pending');\r\n+  const pendingCount = pendingBookings.length;\r\n+  const pendingRevenue = pendingBookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n+\r\n+  // After a successful add from the child modal, refresh from DB and close the modal\r\n+  const handleAddFromChild = useCallback(async () => {\r\n+    setLoading(true);\r\n+    try {\r\n+      const resp = await fetch(\"/api/get-bookings\");\r\n+      const data = await resp.json();\r\n+      if (resp.ok && data.success) {\r\n+        setBookings(data.bookings.map(b => ({ ...b, id: b._id || b.id })));\r\n+      } else {\r\n+        setBookings([]);\r\n+      }\r\n+    } catch {\r\n+      setBookings([]);\r\n+    }\r\n+    setLoading(false);\r\n+    setShowAdd(false);\r\n+    setEditBooking(null);\r\n+  }, []);\r\n+\r\n+  // Fetch bookings from MongoDB\r\n+  const updatePendingToComplete = useCallback(async (bookingsList) => {\r\n+    const now = new Date();\r\n+    const updates = [];\r\n+    for (const b of bookingsList) {\r\n+      if (b.status === 'pending' && b.date && b.time) {\r\n+        const dt = new Date(`${b.date}T${b.time}:00`);\r\n+        if (dt < now) {\r\n+          // Update status in MongoDB\r\n+          updates.push(fetch(`/api/update-booking-status?id=${b.id}&status=complete`, { method: 'PATCH' }));\r\n+        }\r\n+      }\r\n+    }\r\n+    if (updates.length > 0) {\r\n+      await Promise.all(updates);\r\n+      // Refetch bookings after updates\r\n+      return true;\r\n+    }\r\n+    return false;\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    async function fetchBookingsAndUpdate() {\r\n+      setLoading(true);\r\n+      try {\r\n+        const resp = await fetch(\"/api/get-bookings\");\r\n+        const data = await resp.json();\r\n+        if (resp.ok && data.success) {\r\n+          const bookingsArr = data.bookings.map(b => ({ ...b, id: b._id || b.id }));\r\n+          // Check and update pending bookings\r\n+          const didUpdate = await updatePendingToComplete(bookingsArr);\r\n+          if (didUpdate) {\r\n+            // Refetch after update\r\n+            const resp2 = await fetch(\"/api/get-bookings\");\r\n+            const data2 = await resp2.json();\r\n+            if (resp2.ok && data2.success) {\r\n+              setBookings(data2.bookings.map(b => ({ ...b, id: b._id || b.id })));\r\n+            } else {\r\n+              setBookings([]);\r\n+            }\r\n+          } else {\r\n+            setBookings(bookingsArr);\r\n+          }\r\n+        } else {\r\n+          setBookings([]);\r\n+        }\r\n+      } catch {\r\n+        setBookings([]);\r\n+      }\r\n+      setLoading(false);\r\n+    }\r\n+    fetchBookingsAndUpdate();\r\n+  }, [updatePendingToComplete]);\r\n+\r\n+  // Show booking details modal\r\n+  const handleShowDetail = (booking) => {\r\n+    setDetailBooking(booking);\r\n+    setShowDeleteConfirm(false);\r\n+    setShowDetail(true);\r\n+  };\r\n+\r\n+  // Edit booking: open modal with data\r\n+  const handleEditBooking = (booking) => {\r\n+    setEditBooking(booking);\r\n+    setShowAdd(true);\r\n+  };\r\n+\r\n+  // Compute display order: place oldest pending first, then newer pending, then others (newest-first)\r\n+  const computeTimestamp = (b) => {\r\n+    const dateOk = b.date && /^\\d{4}-\\d{2}-\\d{2}$/.test(b.date) ? b.date : '1970-01-01';\r\n+    const timeOk = b.time && /^\\d{2}:\\d{2}$/.test(b.time) ? b.time : '00:00';\r\n+    return new Date(`${dateOk}T${timeOk}:00`).getTime();\r\n+  };\r\n+\r\n+  const getDisplayBookings = () => {\r\n+    const list = [...bookings];\r\n+    if (statusFilter === 'pending') {\r\n+      const pending = list.filter(b => b.status === 'pending');\r\n+      if (pending.length === 0) return [];\r\n+      // Oldest pending first\r\n+      const pendingAsc = [...pending].sort((a, b) => computeTimestamp(a) - computeTimestamp(b));\r\n+      const first = pendingAsc[0];\r\n+      const remaining = pending\r\n+        .filter(b => b !== first)\r\n+        .sort((a, b) => computeTimestamp(b) - computeTimestamp(a)); // newest next\r\n+      return [first, ...remaining];\r\n+    }\r\n+    if (statusFilter === 'complete') {\r\n+      return list\r\n+        .filter(b => b.status === 'complete')\r\n+        .sort((a, b) => computeTimestamp(b) - computeTimestamp(a));\r\n+    }\r\n+    // statusFilter === 'all'\r\n+    const pending = list.filter(b => b.status === 'pending');\r\n+    const others = list.filter(b => b.status !== 'pending');\r\n+    if (pending.length === 0) {\r\n+      return others.sort((a, b) => computeTimestamp(b) - computeTimestamp(a));\r\n+    }\r\n+    const pendingAsc = [...pending].sort((a, b) => computeTimestamp(a) - computeTimestamp(b));\r\n+    const first = pendingAsc[0];\r\n+    const remaining = pending\r\n+      .filter(b => b !== first)\r\n+      .sort((a, b) => computeTimestamp(b) - computeTimestamp(a));\r\n+    const othersSorted = others.sort((a, b) => computeTimestamp(b) - computeTimestamp(a));\r\n+    return [first, ...remaining, ...othersSorted];\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n+      <div className=\"max-w-5xl mx-auto\">\r\n+        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n+        {/* Revenue summary */}\r\n+  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n+          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n+            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n+            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n+            <div className=\"w-full mt-4 mb-2 bg-white rounded-lg p-2\">\r\n+              <RevenueChart bookings={bookings} />\r\n+            </div>\r\n+            <div className=\"text-xs mt-2 text-white/80\">(Completed bookings only)</div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n+            {/* Calendar with filter buttons will render its own controls; count removed per request */}\r\n+            <div className=\"w-full mt-2\">\r\n+              <StatusCalendar bookings={bookings} />\r\n+            </div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">PE (Pending Estimate)</div>\r\n+            <div className=\"text-3xl font-bold text-blue-900\">${pendingRevenue}</div>\r\n+            <div className=\"w-full mt-4 mb-2 bg-white rounded-lg p-2\">\r\n+              <RevenueChart\r\n+                bookings={bookings}\r\n+                status=\"pending\"\r\n+                datasetLabel=\"Pending Estimate\"\r\n+                borderColor=\"rgb(202, 138, 4)\"           \r\n+                backgroundColor=\"rgba(202,138,4,0.2)\"   \r\n+                pointBackgroundColor=\"rgb(202, 138, 4)\" \r\n+              />\r\n+            </div>\r\n+            <div className=\"text-xs mt-2 text-blue-700/70\">(Pending bookings)</div>\r\n+          </div>\r\n+        </div>\r\n+        {/* Optional: Visitors (GA4) */}\r\n+        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n+          <VisitorsCard />\r\n+        </div>\r\n+        {/* Booking list with status calendar */}\r\n+        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n+          <div className=\"flex justify-between items-center mb-4\">\r\n+            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n+            <button\r\n+              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+              onClick={() => setShowAdd(true)}\r\n+            >\r\n+              Add Booking\r\n+            </button>\r\n+          </div>\r\n+          {/* Status Filter */}\r\n+          <div className=\"flex items-center gap-2 mb-4\">\r\n+            <span className=\"text-sm text-gray-600\">Filter:</span>\r\n+            {[\r\n+              { key: 'all', label: 'All' },\r\n+              { key: 'pending', label: 'Pending' },\r\n+              { key: 'complete', label: 'Complete' },\r\n+            ].map(opt => (\r\n+              <button\r\n+                key={opt.key}\r\n+                type=\"button\"\r\n+                onClick={() => setStatusFilter(opt.key)}\r\n+                className={`px-3 py-1 rounded-full text-sm border ${statusFilter === opt.key ? 'bg-blue-600 text-white border-blue-600' : 'bg-white text-blue-700 border-blue-200 hover:bg-blue-50'}`}\r\n+              >\r\n+                {opt.label}\r\n+              </button>\r\n+            ))}\r\n+          </div>\r\n+          <div className=\"overflow-x-auto\">\r\n+            {loading ? (\r\n+              <div className=\"py-10 text-center text-blue-600 font-semibold text-lg\">Loading bookings...</div>\r\n+            ) : (\r\n+              <table className=\"w-full text-left border-collapse min-w-[760px] text-xs sm:text-sm\">\r\n+                <thead>\r\n+                  <tr style={{ background: '#f5f5f5' }}>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Car</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Time</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Actions</th>\r\n+                  </tr>\r\n+                </thead>\r\n+                <tbody>\r\n+                  {getDisplayBookings()\r\n+                    .map(b => (\r\n+                    <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n+                      <td className=\"py-2 px-2 sm:px-3\">\r\n+                        <span\r\n+                          aria-label={b.status}\r\n+                          className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}\r\n+                        >\r\n+                          <span className=\"sm:hidden\">\r\n+                            {b.status === 'complete' ? 'C' : b.status === 'pending' ? 'P' : (b.status?.[0]?.toUpperCase() || '')}\r\n+                          </span>\r\n+                          <span className=\"hidden sm:inline\">{b.status}</span>\r\n+                        </span>\r\n+                      </td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 max-w-[140px] sm:max-w-none truncate\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleEditBooking(b)}>{b.name}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 max-w-[160px] truncate\" style={{ color: '#222' }}>{b.carName || \"--\"}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{b.service}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{formatDateShort(b.date)}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{b.time || \"--\"}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>${b.amount}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3\">\r\n+                        <button\r\n+                          type=\"button\"\r\n+                          className=\"px-3 py-1 text-xs rounded-full border border-blue-200 text-blue-700 hover:bg-blue-50\"\r\n+                          onClick={() => {\r\n+                            setDetailBooking(b);\r\n+                            setShowDeleteConfirm(false);\r\n+                            setShowDetail(true);\r\n+                          }}\r\n+                        >\r\n+                          Details\r\n+                        </button>\r\n+                      </td>\r\n+                    </tr>\r\n+                  ))}\r\n+                </tbody>\r\n+              </table>\r\n+            )}\r\n+          </div>\r\n+        </div>\r\n+        {/* Booking details modal */}\r\n+        {showDetail && detailBooking && (\r\n+          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n+              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n+              <div className=\"space-y-3 text-gray-800\">\r\n+                <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n+                <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n+                <div><span className=\"font-semibold\">Car:</span> {detailBooking.carName || \"--\"}</div>\r\n+                <div><span className=\"font-semibold\">Car Type:</span> {detailBooking.carType || \"--\"}</div>\r\n+                {detailBooking.addOns && detailBooking.addOns.length > 0 && (\r\n+                  <div>\r\n+                    <span className=\"font-semibold\">Add-Ons:</span>\r\n+                    <ul className=\"list-disc ml-6 mt-1\">\r\n+                      {detailBooking.addOns.map((a, i) => (\r\n+                        <li key={i}>{a.label}</li>\r\n+                      ))}\r\n+                    </ul>\r\n+                  </div>\r\n+                )}\r\n+                <div><span className=\"font-semibold\">Date:</span> {formatDateShort(detailBooking.date)}</div>\r\n+                <div><span className=\"font-semibold\">Time:</span> {detailBooking.time || \"--\"}</div>\r\n+                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n+                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n+                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n+                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n+                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n+                \r\n+              </div>\r\n+              <div className=\"mt-8 flex gap-3\">\r\n+                {!showDeleteConfirm ? (\r\n+                  <>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-red-600 hover:bg-red-700 text-white font-semibold\"\r\n+                      onClick={() => setShowDeleteConfirm(true)}\r\n+                    >\r\n+                      Delete\r\n+                    </button>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+                      onClick={() => {\r\n+                        setShowDetail(false);\r\n+                        setShowDeleteConfirm(false);\r\n+                      }}\r\n+                    >\r\n+                      Close\r\n+                    </button>\r\n+                  </>\r\n+                ) : (\r\n+                  <>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\"\r\n+                      onClick={() => setShowDeleteConfirm(false)}\r\n+                    >\r\n+                      Cancel\r\n+                    </button>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-red-600 hover:bg-red-700 text-white font-semibold\"\r\n+                      onClick={async () => {\r\n+                        if (!detailBooking?.id) return;\r\n+                        setLoading(true);\r\n+                        try {\r\n+                          await fetch(`/api/delete-booking?id=${detailBooking.id}`, { method: 'DELETE' });\r\n+                        } catch {}\r\n+                        // Refresh bookings from DB\r\n+                        try {\r\n+                          const resp = await fetch(\"/api/get-bookings\");\r\n+                          const data = await resp.json();\r\n+                          if (resp.ok && data.success) {\r\n+                            setBookings(data.bookings.map(b => ({ ...b, id: b._id || b.id })));\r\n+                          } else {\r\n+                            setBookings([]);\r\n+                          }\r\n+                        } catch {\r\n+                          setBookings([]);\r\n+                        }\r\n+                        setLoading(false);\r\n+                        setShowDeleteConfirm(false);\r\n+                        setShowDetail(false);\r\n+                        setDetailBooking(null);\r\n+                      }}\r\n+                    >\r\n+                      Confirm Delete\r\n+                    </button>\r\n+                  </>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+        {/* Add booking modal (component) */}\r\n+        <AdminAddBooking\r\n+          open={showAdd}\r\n+          onClose={() => { setShowAdd(false); setEditBooking(null); }}\r\n+          onAdd={(payload) => handleAddFromChild(payload)}\r\n+          editBooking={editBooking}\r\n+          onEdit={async (updated) => {\r\n+            // PATCH to API\r\n+            if (!updated.id) return;\r\n+            setLoading(true);\r\n+            try {\r\n+              await fetch(`/api/update-booking?id=${updated.id}`, {\r\n+                method: 'PATCH',\r\n+                headers: { 'Content-Type': 'application/json' },\r\n+                body: JSON.stringify(updated),\r\n+              });\r\n+            } catch {}\r\n+            // Refresh bookings\r\n+            try {\r\n+              const resp = await fetch(\"/api/get-bookings\");\r\n+              const data = await resp.json();\r\n+              if (resp.ok && data.success) {\r\n+                setBookings(data.bookings.map(b => ({ ...b, id: b._id || b.id })));\r\n+              } else {\r\n+                setBookings([]);\r\n+              }\r\n+            } catch {\r\n+              setBookings([]);\r\n+            }\r\n+            setLoading(false);\r\n+            setShowAdd(false);\r\n+            setEditBooking(null);\r\n+          }}\r\n+        />\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1760895588883,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,427 @@\n+import { useEffect, useState } from \"react\";\r\n+import { useCallback } from \"react\";\r\n+import AdminAddBooking from \"../components/AdminAddBooking\";\r\n+import RevenueChart from \"../components/RevenueChart\";\r\n+import StatusCalendar from \"../components/StatusCalendar\";\r\n+import ExpensesCard from \"../components/ExpensesCard\";\r\n+import ProfitsCard from \"../components/ProfitsCard\";\r\n+import dynamic from 'next/dynamic';\r\n+const VisitorsCard = dynamic(() => import('../components/VisitorsCard'), { ssr: false });\r\n+import { useRouter } from \"next/router\";\r\n+\r\n+export default function AdminDashboard() {\r\n+  // Format date as 'oct-19'\r\n+  function formatDateShort(dateStr) {\r\n+    if (!dateStr) return \"\";\r\n+    const parts = dateStr.split(\"-\");\r\n+    if (parts.length !== 3) return dateStr;\r\n+    const y = parseInt(parts[0], 10);\r\n+    const m = parseInt(parts[1], 10);\r\n+    const d = parseInt(parts[2], 10);\r\n+    if (isNaN(y) || isNaN(m) || isNaN(d)) return dateStr;\r\n+    const months = [\"jan\",\"feb\",\"mar\",\"apr\",\"may\",\"jun\",\"jul\",\"aug\",\"sep\",\"oct\",\"nov\",\"dec\"];\r\n+    return `${months[m - 1]}-${d}`;\r\n+  }\r\n+  const router = useRouter();\r\n+  const [bookings, setBookings] = useState([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+  const [showAdd, setShowAdd] = useState(false);\r\n+  const [showDetail, setShowDetail] = useState(false);\r\n+  const [detailBooking, setDetailBooking] = useState(null);\r\n+  const [editBooking, setEditBooking] = useState(null);\r\n+  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n+  const [statusFilter, setStatusFilter] = useState(\"all\");\r\n+  // Calculate total revenue (exclude pending)\r\n+  const totalRevenue = bookings.filter(b => b.status === 'complete').reduce((sum, b) => sum + (b.amount || 0), 0);\r\n+  // Pending count and estimated revenue\r\n+  const pendingBookings = bookings.filter(b => b.status === 'pending');\r\n+  const pendingCount = pendingBookings.length;\r\n+  const pendingRevenue = pendingBookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n+\r\n+  // After a successful add from the child modal, refresh from DB and close the modal\r\n+  const handleAddFromChild = useCallback(async () => {\r\n+    setLoading(true);\r\n+    try {\r\n+      const resp = await fetch(\"/api/get-bookings\");\r\n+      const data = await resp.json();\r\n+      if (resp.ok && data.success) {\r\n+        setBookings(data.bookings.map(b => ({ ...b, id: b._id || b.id })));\r\n+      } else {\r\n+        setBookings([]);\r\n+      }\r\n+    } catch {\r\n+      setBookings([]);\r\n+    }\r\n+    setLoading(false);\r\n+    setShowAdd(false);\r\n+    setEditBooking(null);\r\n+  }, []);\r\n+\r\n+  // Fetch bookings from MongoDB\r\n+  const updatePendingToComplete = useCallback(async (bookingsList) => {\r\n+    const now = new Date();\r\n+    const updates = [];\r\n+    for (const b of bookingsList) {\r\n+      if (b.status === 'pending' && b.date && b.time) {\r\n+        const dt = new Date(`${b.date}T${b.time}:00`);\r\n+        if (dt < now) {\r\n+          // Update status in MongoDB\r\n+          updates.push(fetch(`/api/update-booking-status?id=${b.id}&status=complete`, { method: 'PATCH' }));\r\n+        }\r\n+      }\r\n+    }\r\n+    if (updates.length > 0) {\r\n+      await Promise.all(updates);\r\n+      // Refetch bookings after updates\r\n+      return true;\r\n+    }\r\n+    return false;\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    async function fetchBookingsAndUpdate() {\r\n+      setLoading(true);\r\n+      try {\r\n+        const resp = await fetch(\"/api/get-bookings\");\r\n+        const data = await resp.json();\r\n+        if (resp.ok && data.success) {\r\n+          const bookingsArr = data.bookings.map(b => ({ ...b, id: b._id || b.id }));\r\n+          // Check and update pending bookings\r\n+          const didUpdate = await updatePendingToComplete(bookingsArr);\r\n+          if (didUpdate) {\r\n+            // Refetch after update\r\n+            const resp2 = await fetch(\"/api/get-bookings\");\r\n+            const data2 = await resp2.json();\r\n+            if (resp2.ok && data2.success) {\r\n+              setBookings(data2.bookings.map(b => ({ ...b, id: b._id || b.id })));\r\n+            } else {\r\n+              setBookings([]);\r\n+            }\r\n+          } else {\r\n+            setBookings(bookingsArr);\r\n+          }\r\n+        } else {\r\n+          setBookings([]);\r\n+        }\r\n+      } catch {\r\n+        setBookings([]);\r\n+      }\r\n+      setLoading(false);\r\n+    }\r\n+    fetchBookingsAndUpdate();\r\n+  }, [updatePendingToComplete]);\r\n+\r\n+  // Show booking details modal\r\n+  const handleShowDetail = (booking) => {\r\n+    setDetailBooking(booking);\r\n+    setShowDeleteConfirm(false);\r\n+    setShowDetail(true);\r\n+  };\r\n+\r\n+  // Edit booking: open modal with data\r\n+  const handleEditBooking = (booking) => {\r\n+    setEditBooking(booking);\r\n+    setShowAdd(true);\r\n+  };\r\n+\r\n+  // Compute display order: place oldest pending first, then newer pending, then others (newest-first)\r\n+  const computeTimestamp = (b) => {\r\n+    const dateOk = b.date && /^\\d{4}-\\d{2}-\\d{2}$/.test(b.date) ? b.date : '1970-01-01';\r\n+    const timeOk = b.time && /^\\d{2}:\\d{2}$/.test(b.time) ? b.time : '00:00';\r\n+    return new Date(`${dateOk}T${timeOk}:00`).getTime();\r\n+  };\r\n+\r\n+  const getDisplayBookings = () => {\r\n+    const list = [...bookings];\r\n+    if (statusFilter === 'pending') {\r\n+      const pending = list.filter(b => b.status === 'pending');\r\n+      if (pending.length === 0) return [];\r\n+      // Oldest pending first\r\n+      const pendingAsc = [...pending].sort((a, b) => computeTimestamp(a) - computeTimestamp(b));\r\n+      const first = pendingAsc[0];\r\n+      const remaining = pending\r\n+        .filter(b => b !== first)\r\n+        .sort((a, b) => computeTimestamp(b) - computeTimestamp(a)); // newest next\r\n+      return [first, ...remaining];\r\n+    }\r\n+    if (statusFilter === 'complete') {\r\n+      return list\r\n+        .filter(b => b.status === 'complete')\r\n+        .sort((a, b) => computeTimestamp(b) - computeTimestamp(a));\r\n+    }\r\n+    // statusFilter === 'all'\r\n+    const pending = list.filter(b => b.status === 'pending');\r\n+    const others = list.filter(b => b.status !== 'pending');\r\n+    if (pending.length === 0) {\r\n+      return others.sort((a, b) => computeTimestamp(b) - computeTimestamp(a));\r\n+    }\r\n+    const pendingAsc = [...pending].sort((a, b) => computeTimestamp(a) - computeTimestamp(b));\r\n+    const first = pendingAsc[0];\r\n+    const remaining = pending\r\n+      .filter(b => b !== first)\r\n+      .sort((a, b) => computeTimestamp(b) - computeTimestamp(a));\r\n+    const othersSorted = others.sort((a, b) => computeTimestamp(b) - computeTimestamp(a));\r\n+    return [first, ...remaining, ...othersSorted];\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n+      <div className=\"max-w-5xl mx-auto\">\r\n+        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n+        {/* Revenue summary */}\r\n+  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n+          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n+            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n+            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n+            <div className=\"w-full mt-4 mb-2 bg-white rounded-lg p-2\">\r\n+              <RevenueChart bookings={bookings} />\r\n+            </div>\r\n+            <div className=\"text-xs mt-2 text-white/80\">(Completed bookings only)</div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n+            {/* Calendar with filter buttons will render its own controls; count removed per request */}\r\n+            <div className=\"w-full mt-2\">\r\n+              <StatusCalendar bookings={bookings} />\r\n+            </div>\r\n+          </div>\r\n+          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n+            <div className=\"text-lg font-semibold mb-2 text-blue-700\">PE (Pending Estimate)</div>\r\n+            <div className=\"text-3xl font-bold text-blue-900\">${pendingRevenue}</div>\r\n+            <div className=\"w-full mt-4 mb-2 bg-white rounded-lg p-2\">\r\n+              <RevenueChart\r\n+                bookings={bookings}\r\n+                status=\"pending\"\r\n+                datasetLabel=\"Pending Estimate\"\r\n+                borderColor=\"rgb(202, 138, 4)\"           \r\n+                backgroundColor=\"rgba(202,138,4,0.2)\"   \r\n+                pointBackgroundColor=\"rgb(202, 138, 4)\" \r\n+              />\r\n+            </div>\r\n+            <div className=\"text-xs mt-2 text-blue-700/70\">(Pending bookings)</div>\r\n+          </div>\r\n+        </div>\r\n+        {/* Expenses and Profits */}\r\n+        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-10\">\r\n+          <ExpensesCard />\r\n+          <ProfitsCard bookings={bookings} />\r\n+        </div>\r\n+        {/* Optional: Visitors (GA4) */}\r\n+        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n+          <VisitorsCard />\r\n+        </div>\r\n+        {/* Booking list with status calendar */}\r\n+        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n+          <div className=\"flex justify-between items-center mb-4\">\r\n+            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n+            <button\r\n+              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+              onClick={() => setShowAdd(true)}\r\n+            >\r\n+              Add Booking\r\n+            </button>\r\n+          </div>\r\n+          {/* Status Filter */}\r\n+          <div className=\"flex items-center gap-2 mb-4\">\r\n+            <span className=\"text-sm text-gray-600\">Filter:</span>\r\n+            {[\r\n+              { key: 'all', label: 'All' },\r\n+              { key: 'pending', label: 'Pending' },\r\n+              { key: 'complete', label: 'Complete' },\r\n+            ].map(opt => (\r\n+              <button\r\n+                key={opt.key}\r\n+                type=\"button\"\r\n+                onClick={() => setStatusFilter(opt.key)}\r\n+                className={`px-3 py-1 rounded-full text-sm border ${statusFilter === opt.key ? 'bg-blue-600 text-white border-blue-600' : 'bg-white text-blue-700 border-blue-200 hover:bg-blue-50'}`}\r\n+              >\r\n+                {opt.label}\r\n+              </button>\r\n+            ))}\r\n+          </div>\r\n+          <div className=\"overflow-x-auto\">\r\n+            {loading ? (\r\n+              <div className=\"py-10 text-center text-blue-600 font-semibold text-lg\">Loading bookings...</div>\r\n+            ) : (\r\n+              <table className=\"w-full text-left border-collapse min-w-[760px] text-xs sm:text-sm\">\r\n+                <thead>\r\n+                  <tr style={{ background: '#f5f5f5' }}>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Car</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Time</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n+                    <th className=\"py-2 px-2 sm:px-3 font-semibold\" style={{ color: '#000' }}>Actions</th>\r\n+                  </tr>\r\n+                </thead>\r\n+                <tbody>\r\n+                  {getDisplayBookings()\r\n+                    .map(b => (\r\n+                    <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n+                      <td className=\"py-2 px-2 sm:px-3\">\r\n+                        <span\r\n+                          aria-label={b.status}\r\n+                          className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}\r\n+                        >\r\n+                          <span className=\"sm:hidden\">\r\n+                            {b.status === 'complete' ? 'C' : b.status === 'pending' ? 'P' : (b.status?.[0]?.toUpperCase() || '')}\r\n+                          </span>\r\n+                          <span className=\"hidden sm:inline\">{b.status}</span>\r\n+                        </span>\r\n+                      </td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 max-w-[140px] sm:max-w-none truncate\" style={{ color: '#222', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => handleEditBooking(b)}>{b.name}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 max-w-[160px] truncate\" style={{ color: '#222' }}>{b.carName || \"--\"}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{b.service}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{formatDateShort(b.date)}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>{b.time || \"--\"}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3 whitespace-nowrap\" style={{ color: '#222' }}>${b.amount}</td>\r\n+                      <td className=\"py-2 px-2 sm:px-3\">\r\n+                        <button\r\n+                          type=\"button\"\r\n+                          className=\"px-3 py-1 text-xs rounded-full border border-blue-200 text-blue-700 hover:bg-blue-50\"\r\n+                          onClick={() => {\r\n+                            setDetailBooking(b);\r\n+                            setShowDeleteConfirm(false);\r\n+                            setShowDetail(true);\r\n+                          }}\r\n+                        >\r\n+                          Details\r\n+                        </button>\r\n+                      </td>\r\n+                    </tr>\r\n+                  ))}\r\n+                </tbody>\r\n+              </table>\r\n+            )}\r\n+          </div>\r\n+        </div>\r\n+        {/* Booking details modal */}\r\n+        {showDetail && detailBooking && (\r\n+          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n+              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Booking Details</h3>\r\n+              <div className=\"space-y-3 text-gray-800\">\r\n+                <div><span className=\"font-semibold\">Name:</span> {detailBooking.name}</div>\r\n+                <div><span className=\"font-semibold\">Service:</span> {detailBooking.service}</div>\r\n+                <div><span className=\"font-semibold\">Car:</span> {detailBooking.carName || \"--\"}</div>\r\n+                <div><span className=\"font-semibold\">Car Type:</span> {detailBooking.carType || \"--\"}</div>\r\n+                {detailBooking.addOns && detailBooking.addOns.length > 0 && (\r\n+                  <div>\r\n+                    <span className=\"font-semibold\">Add-Ons:</span>\r\n+                    <ul className=\"list-disc ml-6 mt-1\">\r\n+                      {detailBooking.addOns.map((a, i) => (\r\n+                        <li key={i}>{a.label}</li>\r\n+                      ))}\r\n+                    </ul>\r\n+                  </div>\r\n+                )}\r\n+                <div><span className=\"font-semibold\">Date:</span> {formatDateShort(detailBooking.date)}</div>\r\n+                <div><span className=\"font-semibold\">Time:</span> {detailBooking.time || \"--\"}</div>\r\n+                <div><span className=\"font-semibold\">Amount:</span> ${detailBooking.amount}</div>\r\n+                <div><span className=\"font-semibold\">Status:</span> {detailBooking.status}</div>\r\n+                <div><span className=\"font-semibold\">Phone:</span> {detailBooking.phone}</div>\r\n+                <div><span className=\"font-semibold\">Email:</span> {detailBooking.email}</div>\r\n+                <div><span className=\"font-semibold\">Location:</span> {detailBooking.location}</div>\r\n+                \r\n+              </div>\r\n+              <div className=\"mt-8 flex gap-3\">\r\n+                {!showDeleteConfirm ? (\r\n+                  <>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-red-600 hover:bg-red-700 text-white font-semibold\"\r\n+                      onClick={() => setShowDeleteConfirm(true)}\r\n+                    >\r\n+                      Delete\r\n+                    </button>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n+                      onClick={() => {\r\n+                        setShowDetail(false);\r\n+                        setShowDeleteConfirm(false);\r\n+                      }}\r\n+                    >\r\n+                      Close\r\n+                    </button>\r\n+                  </>\r\n+                ) : (\r\n+                  <>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\"\r\n+                      onClick={() => setShowDeleteConfirm(false)}\r\n+                    >\r\n+                      Cancel\r\n+                    </button>\r\n+                    <button\r\n+                      className=\"w-1/2 py-3 rounded-lg bg-red-600 hover:bg-red-700 text-white font-semibold\"\r\n+                      onClick={async () => {\r\n+                        if (!detailBooking?.id) return;\r\n+                        setLoading(true);\r\n+                        try {\r\n+                          await fetch(`/api/delete-booking?id=${detailBooking.id}`, { method: 'DELETE' });\r\n+                        } catch {}\r\n+                        // Refresh bookings from DB\r\n+                        try {\r\n+                          const resp = await fetch(\"/api/get-bookings\");\r\n+                          const data = await resp.json();\r\n+                          if (resp.ok && data.success) {\r\n+                            setBookings(data.bookings.map(b => ({ ...b, id: b._id || b.id })));\r\n+                          } else {\r\n+                            setBookings([]);\r\n+                          }\r\n+                        } catch {\r\n+                          setBookings([]);\r\n+                        }\r\n+                        setLoading(false);\r\n+                        setShowDeleteConfirm(false);\r\n+                        setShowDetail(false);\r\n+                        setDetailBooking(null);\r\n+                      }}\r\n+                    >\r\n+                      Confirm Delete\r\n+                    </button>\r\n+                  </>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+        {/* Add booking modal (component) */}\r\n+        <AdminAddBooking\r\n+          open={showAdd}\r\n+          onClose={() => { setShowAdd(false); setEditBooking(null); }}\r\n+          onAdd={(payload) => handleAddFromChild(payload)}\r\n+          editBooking={editBooking}\r\n+          onEdit={async (updated) => {\r\n+            // PATCH to API\r\n+            if (!updated.id) return;\r\n+            setLoading(true);\r\n+            try {\r\n+              await fetch(`/api/update-booking?id=${updated.id}`, {\r\n+                method: 'PATCH',\r\n+                headers: { 'Content-Type': 'application/json' },\r\n+                body: JSON.stringify(updated),\r\n+              });\r\n+            } catch {}\r\n+            // Refresh bookings\r\n+            try {\r\n+              const resp = await fetch(\"/api/get-bookings\");\r\n+              const data = await resp.json();\r\n+              if (resp.ok && data.success) {\r\n+                setBookings(data.bookings.map(b => ({ ...b, id: b._id || b.id })));\r\n+              } else {\r\n+                setBookings([]);\r\n+              }\r\n+            } catch {\r\n+              setBookings([]);\r\n+            }\r\n+            setLoading(false);\r\n+            setShowAdd(false);\r\n+            setEditBooking(null);\r\n+          }}\r\n+        />\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                }
            ],
            "date": 1760670193189,
            "name": "Commit-0",
            "content": "import { useEffect, useState } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\n\r\n// Mock booking data for demo\r\nconst initialBookings = [\r\n  { id: 1, name: \"John Doe\", service: \"Complete Interior Detail\", date: \"2025-10-10\", amount: 130, status: \"complete\" },\r\n  { id: 2, name: \"Jane Smith\", service: \"Premium Exterior Wash\", date: \"2025-10-12\", amount: 50, status: \"pending\" },\r\n  { id: 3, name: \"Alex Lee\", service: \"Ultimate Full Detail\", date: \"2025-10-15\", amount: 160, status: \"complete\" },\r\n];\r\n\r\nexport default function AdminDashboard() {\r\n  const router = useRouter();\r\n  const [bookings, setBookings] = useState(initialBookings);\r\n  const [showAdd, setShowAdd] = useState(false);\r\n  const [newBooking, setNewBooking] = useState({ name: \"\", service: \"\", date: \"\", amount: \"\", status: \"pending\" });\r\n\r\n  useEffect(() => {\r\n    if (typeof window !== \"undefined\") {\r\n      const saved = window.localStorage.getItem(\"adminAuth\");\r\n      if (saved !== \"Detailing1313!\") {\r\n        router.replace(\"/admin\");\r\n      }\r\n    }\r\n  }, [router]);\r\n\r\n  // Calculate total revenue\r\n  const totalRevenue = bookings.reduce((sum, b) => sum + (b.amount || 0), 0);\r\n\r\n  // Add new booking\r\n  const handleAddBooking = (e) => {\r\n    e.preventDefault();\r\n    setBookings([\r\n      ...bookings,\r\n      { ...newBooking, id: bookings.length + 1, amount: Number(newBooking.amount) }\r\n    ]);\r\n    setNewBooking({ name: \"\", service: \"\", date: \"\", amount: \"\", status: \"pending\" });\r\n    setShowAdd(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n      <div className=\"max-w-5xl mx-auto\">\r\n        <h1 className=\"text-3xl font-bold mb-8 text-center\" style={{ color: '#000' }}>Admin Booking Dashboard</h1>\r\n        {/* Revenue summary */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10\">\r\n          <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 text-white rounded-xl shadow p-6 flex flex-col items-center justify-center\">\r\n            <div className=\"text-lg font-semibold mb-2\">Total Revenue</div>\r\n            <div className=\"text-3xl font-bold\">${totalRevenue}</div>\r\n          </div>\r\n          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Bookings</div>\r\n            <div className=\"text-3xl font-bold text-blue-900\">{bookings.length}</div>\r\n          </div>\r\n          <div className=\"bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center border border-blue-100\">\r\n            <div className=\"text-lg font-semibold mb-2 text-blue-700\">Pending</div>\r\n            <div className=\"text-3xl font-bold text-yellow-600\">{bookings.filter(b => b.status === \"pending\").length}</div>\r\n          </div>\r\n        </div>\r\n        {/* Booking list */}\r\n        <div className=\"bg-white rounded-xl shadow p-6 border border-blue-100 mb-8\">\r\n          <div className=\"flex justify-between items-center mb-4\">\r\n            <h2 className=\"text-xl font-bold\" style={{ color: '#888' }}>Booking History</h2>\r\n            <button\r\n              className=\"py-2 px-4 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\"\r\n              onClick={() => setShowAdd(true)}\r\n            >\r\n              Add Booking\r\n            </button>\r\n          </div>\r\n          <table className=\"w-full text-left border-collapse\">\r\n            <thead>\r\n              <tr style={{ background: '#f5f5f5' }}>\r\n                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Name</th>\r\n                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Service</th>\r\n                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Date</th>\r\n                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Amount</th>\r\n                <th className=\"py-2 px-3 font-semibold\" style={{ color: '#000' }}>Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {bookings.map(b => (\r\n                <tr key={b.id} style={{ background: '#fff', color: '#222' }}>\r\n                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.name}</td>\r\n                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.service}</td>\r\n                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>{b.date}</td>\r\n                  <td className=\"py-2 px-3\" style={{ color: '#222' }}>${b.amount}</td>\r\n                  <td className=\"py-2 px-3\">\r\n                    <span className={`px-3 py-1 rounded-full text-xs font-bold ${b.status === \"complete\" ? \"bg-green-200 text-green-800\" : b.status === \"pending\" ? \"bg-yellow-200 text-yellow-800\" : \"bg-gray-200 text-gray-800\"}`}>{b.status}</span>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        {/* Add booking modal */}\r\n        {showAdd && (\r\n          <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n            <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md border border-blue-100\">\r\n              <h3 className=\"text-xl font-bold mb-6 text-center\" style={{ color: '#888' }}>Add Booking</h3>\r\n              <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n                <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none\" />\r\n                <input type=\"text\" required placeholder=\"Service\" value={newBooking.service} onChange={e => setNewBooking({ ...newBooking, service: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none\" />\r\n                <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none\" />\r\n                <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} onChange={e => setNewBooking({ ...newBooking, amount: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none\" />\r\n                <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none\">\r\n                  <option value=\"pending\">Pending</option>\r\n                  <option value=\"complete\">Complete</option>\r\n                </select>\r\n                <div className=\"flex gap-4 mt-4\">\r\n                  <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n                  <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={() => setShowAdd(false)}>Cancel</button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"
        }
    ]
}