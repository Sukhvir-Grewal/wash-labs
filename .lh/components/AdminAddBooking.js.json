{
    "sourceFile": "components/AdminAddBooking.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1760672897261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1760673148382,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,9 @@\n   ];\r\n \r\n   const [newBooking, setNewBooking] = useState({\r\n     name: \"\",\r\n+    carName: \"\",\r\n     service: serviceOptions[0].title,\r\n     date: \"\",\r\n     time: \"\",\r\n     amount: serviceOptions[0].basePrice,\r\n@@ -76,8 +77,9 @@\n     onAdd?.(payload);\r\n     // Reset and close\r\n     setNewBooking({\r\n       name: \"\",\r\n+      carName: \"\",\r\n       service: serviceOptions[0].title,\r\n       date: \"\",\r\n       time: \"\",\r\n       amount: serviceOptions[0].basePrice,\r\n@@ -111,8 +113,10 @@\n         <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n           <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n             {/* Name */}\r\n             <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Car Name */}\r\n+            <input type=\"text\" required placeholder=\"Car (e.g., Toyota Camry)\" value={newBooking.carName} onChange={e => setNewBooking({ ...newBooking, carName: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n             {/* Service dropdown */}\r\n             <select required value={newBooking.service} onChange={e => {\r\n               const selectedService = e.target.value;\r\n               setNewBooking(nb => ({\r\n"
                },
                {
                    "date": 1760674580570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,257 @@\n+import { useState } from \"react\";\r\n+\r\n+export default function AdminAddBooking({ open, onClose, onAdd }) {\r\n+  if (!open) return null;\r\n+\r\n+  // Service/add-on logic (scoped to this component)\r\n+  const serviceOptions = [\r\n+    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: true },\r\n+    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n+    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n+  ];\r\n+  const addOnOptions = [\r\n+    { label: \"Pet Hair Removal\", price: 20 },\r\n+    { label: \"Clay Bar\", price: 20 },\r\n+    { label: \"Iron Removal\", price: 25 },\r\n+    { label: \"Ceramic Sealant\", price: 10 },\r\n+  ];\r\n+  const carTypeOptions = [\r\n+    { label: \"Sedan\", price: 0 },\r\n+    { label: \"SUV\", price: 10 },\r\n+    { label: \"Truck\", price: 20 },\r\n+  ];\r\n+\r\n+  const [newBooking, setNewBooking] = useState({\r\n+    name: \"\",\r\n+    carName: \"\",\r\n+    service: serviceOptions[0].title,\r\n+    date: \"\",\r\n+    time: \"\",\r\n+    amount: serviceOptions[0].basePrice,\r\n+    status: \"pending\",\r\n+    phone: \"\",\r\n+    email: \"\",\r\n+    location: \"\",\r\n+    addOns: [],\r\n+    carType: carTypeOptions[0].label,\r\n+  });\r\n+  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n+\r\n+  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n+    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n+    let base = service ? service.basePrice : 0;\r\n+    if (serviceTitle === \"Complete Interior Detail\") {\r\n+      if (carTypeLabel === \"SUV\") base = 130;\r\n+      else if (carTypeLabel === \"Truck\") base = 140;\r\n+      else base = 110;\r\n+    } else {\r\n+      const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n+      if (carType) base += carType.price;\r\n+    }\r\n+\r\n+    let addOnTotal = 0;\r\n+    if (service && service.hasAddOns && addOns.length) {\r\n+      let filteredAddOns = [];\r\n+      if (serviceTitle === \"Premium Exterior Wash\") {\r\n+        filteredAddOns = addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n+      } else if (serviceTitle === \"Complete Interior Detail\") {\r\n+        filteredAddOns = addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n+      } else if (serviceTitle === \"Ultimate Full Detail\") {\r\n+        filteredAddOns = addOns;\r\n+      }\r\n+      addOnTotal = filteredAddOns.reduce((sum, a) => sum + a.price, 0);\r\n+      const clay = filteredAddOns.find(a => a.label === \"Clay Bar\");\r\n+      const iron = filteredAddOns.find(a => a.label === \"Iron Removal\");\r\n+      if (clay && iron) addOnTotal -= 5;\r\n+    }\r\n+\r\n+    return base + addOnTotal;\r\n+  };\r\n+\r\n+  const handleAddBooking = async (e) => {\r\n+    e.preventDefault();\r\n+    const payload = {\r\n+      ...newBooking,\r\n+      amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n+    };\r\n+    onAdd?.(payload);\r\n+    // Reset and close\r\n+    setNewBooking({\r\n+      name: \"\",\r\n+      carName: \"\",\r\n+      service: serviceOptions[0].title,\r\n+      date: \"\",\r\n+      time: \"\",\r\n+      amount: serviceOptions[0].basePrice,\r\n+      status: \"pending\",\r\n+      phone: \"\",\r\n+      email: \"\",\r\n+      location: \"\",\r\n+      addOns: [],\r\n+      carType: carTypeOptions[0].label,\r\n+    });\r\n+    onClose?.();\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+      <div\r\n+        className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n+        style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n+      >\r\n+        {/* Close (X) button */}\r\n+        <button\r\n+          type=\"button\"\r\n+          aria-label=\"Close\"\r\n+          onClick={onClose}\r\n+          className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n+          style={{ background: 'none', border: 'none' }}\r\n+        >\r\n+          &times;\r\n+        </button>\r\n+        <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n+        <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n+          <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n+            {/* Name */}\r\n+            <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Car Name */}\r\n+            <input type=\"text\" required placeholder=\"Car (e.g., Toyota Camry)\" value={newBooking.carName} onChange={e => setNewBooking({ ...newBooking, carName: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Service dropdown */}\r\n+            <select required value={newBooking.service} onChange={e => {\r\n+              const selectedService = e.target.value;\r\n+              setNewBooking(nb => ({\r\n+                ...nb,\r\n+                service: selectedService,\r\n+                addOns: [],\r\n+                amount: calculatePrice(selectedService, [], nb.carType),\r\n+              }));\r\n+            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+              {serviceOptions.map(s => (\r\n+                <option key={s.title} value={s.title}>{s.title}</option>\r\n+              ))}\r\n+            </select>\r\n+            {/* Car type dropdown */}\r\n+            <select required value={newBooking.carType} onChange={e => {\r\n+              const carType = e.target.value;\r\n+              setNewBooking(nb => ({\r\n+                ...nb,\r\n+                carType,\r\n+                amount: calculatePrice(nb.service, nb.addOns, carType),\r\n+              }));\r\n+            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+              {carTypeOptions.map(c => (\r\n+                <option key={c.label} value={c.label}>{c.label}</option>\r\n+              ))}\r\n+            </select>\r\n+            {/* Add-ons */}\r\n+            <div>\r\n+              <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n+              <div className=\"flex flex-wrap gap-3 mb-2\">\r\n+                {(() => {\r\n+                  let validAddOns = [];\r\n+                  if (newBooking.service === \"Premium Exterior Wash\") {\r\n+                    validAddOns = addOnOptions.filter(opt => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(opt.label));\r\n+                  } else if (newBooking.service === \"Complete Interior Detail\") {\r\n+                    validAddOns = addOnOptions.filter(opt => opt.label === \"Pet Hair Removal\");\r\n+                  } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n+                    validAddOns = addOnOptions;\r\n+                  }\r\n+                  return validAddOns.map(opt => (\r\n+                    <button\r\n+                      key={opt.label}\r\n+                      type=\"button\"\r\n+                      onClick={() => {\r\n+                        setNewBooking(nb => {\r\n+                          const exists = nb.addOns.find(a => a.label === opt.label);\r\n+                          const updated = exists\r\n+                            ? nb.addOns.filter(a => a.label !== opt.label)\r\n+                            : [...nb.addOns, opt];\r\n+                          return {\r\n+                            ...nb,\r\n+                            addOns: updated,\r\n+                            amount: calculatePrice(nb.service, updated, nb.carType),\r\n+                          };\r\n+                        });\r\n+                      }}\r\n+                      className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n+                    >\r\n+                      {opt.label}\r\n+                    </button>\r\n+                  ));\r\n+                })()}\r\n+              </div>\r\n+              {/* Combo discount message */}\r\n+              {(() => {\r\n+                let validAddOns = [];\r\n+                if (newBooking.service === \"Premium Exterior Wash\") {\r\n+                  validAddOns = newBooking.addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n+                } else if (newBooking.service === \"Complete Interior Detail\") {\r\n+                  validAddOns = newBooking.addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n+                } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n+                  validAddOns = newBooking.addOns;\r\n+                }\r\n+                return validAddOns.find(a => a.label === \"Clay Bar\") && validAddOns.find(a => a.label === \"Iron Removal\") ? (\r\n+                  <div className=\"text-xs text-blue-600 mt-2 font-semibold\">Combo discount applied (-$5)</div>\r\n+                ) : null;\r\n+              })()}\r\n+            </div>\r\n+            {/* Date */}\r\n+            <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Time (enabled after selecting date) */}\r\n+            <input\r\n+              type=\"time\"\r\n+              required\r\n+              disabled={!newBooking.date}\r\n+              value={newBooking.time}\r\n+              onChange={e => setNewBooking({ ...newBooking, time: e.target.value })}\r\n+              className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800 disabled:bg-gray-100\"\r\n+            />\r\n+            {/* Amount (auto-calculated, read-only) */}\r\n+            <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n+            {/* Phone (numbers only) */}\r\n+            <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n+              const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n+              setNewBooking({ ...newBooking, phone: val });\r\n+            }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Email */}\r\n+            <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Location autocomplete (Google Places API) */}\r\n+            <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n+              const val = e.target.value;\r\n+              setNewBooking({ ...newBooking, location: val });\r\n+              if (typeof window !== 'undefined' && val.length > 2) {\r\n+                try {\r\n+                  const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n+                  const data = await resp.json();\r\n+                  setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n+                } catch {}\r\n+              } else {\r\n+                setLocationSuggestions([]);\r\n+              }\r\n+            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n+            {/* Location suggestions dropdown */}\r\n+            {locationSuggestions.length > 0 && (\r\n+              <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n+                {locationSuggestions.map((sug, i) => (\r\n+                  <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n+                    setNewBooking(nb => ({ ...nb, location: sug }));\r\n+                    setLocationSuggestions([]);\r\n+                  }}>{sug}</div>\r\n+                ))}\r\n+              </div>\r\n+            )}\r\n+            {/* Status dropdown */}\r\n+            <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+              <option value=\"pending\">Pending</option>\r\n+              <option value=\"complete\">Complete</option>\r\n+            </select>\r\n+            <div className=\"flex gap-4 mt-4 pb-4\">\r\n+              <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n+              <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={onClose}>Cancel</button>\r\n+            </div>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1760674679925,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,286 @@\n+import { useState } from \"react\";\r\n+  const [submitStatus, setSubmitStatus] = useState(null); // null | 'success' | 'error'\r\n+  const [submitMsg, setSubmitMsg] = useState(\"\");\r\n+\r\n+export default function AdminAddBooking({ open, onClose, onAdd }) {\r\n+  if (!open) return null;\r\n+\r\n+  // Service/add-on logic (scoped to this component)\r\n+  const serviceOptions = [\r\n+    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: true },\r\n+    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n+    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n+  ];\r\n+  const addOnOptions = [\r\n+    { label: \"Pet Hair Removal\", price: 20 },\r\n+    { label: \"Clay Bar\", price: 20 },\r\n+    { label: \"Iron Removal\", price: 25 },\r\n+    { label: \"Ceramic Sealant\", price: 10 },\r\n+  ];\r\n+  const carTypeOptions = [\r\n+    { label: \"Sedan\", price: 0 },\r\n+    { label: \"SUV\", price: 10 },\r\n+    { label: \"Truck\", price: 20 },\r\n+  ];\r\n+\r\n+  const [newBooking, setNewBooking] = useState({\r\n+    name: \"\",\r\n+    carName: \"\",\r\n+    service: serviceOptions[0].title,\r\n+    date: \"\",\r\n+    time: \"\",\r\n+    amount: serviceOptions[0].basePrice,\r\n+    status: \"pending\",\r\n+    phone: \"\",\r\n+    email: \"\",\r\n+    location: \"\",\r\n+    addOns: [],\r\n+    carType: carTypeOptions[0].label,\r\n+  });\r\n+  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n+\r\n+  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n+    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n+    let base = service ? service.basePrice : 0;\r\n+    if (serviceTitle === \"Complete Interior Detail\") {\r\n+      if (carTypeLabel === \"SUV\") base = 130;\r\n+      else if (carTypeLabel === \"Truck\") base = 140;\r\n+      else base = 110;\r\n+    } else {\r\n+      const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n+      if (carType) base += carType.price;\r\n+    }\r\n+\r\n+    let addOnTotal = 0;\r\n+    if (service && service.hasAddOns && addOns.length) {\r\n+      let filteredAddOns = [];\r\n+      if (serviceTitle === \"Premium Exterior Wash\") {\r\n+        filteredAddOns = addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n+      } else if (serviceTitle === \"Complete Interior Detail\") {\r\n+        filteredAddOns = addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n+      } else if (serviceTitle === \"Ultimate Full Detail\") {\r\n+        filteredAddOns = addOns;\r\n+      }\r\n+      addOnTotal = filteredAddOns.reduce((sum, a) => sum + a.price, 0);\r\n+      const clay = filteredAddOns.find(a => a.label === \"Clay Bar\");\r\n+      const iron = filteredAddOns.find(a => a.label === \"Iron Removal\");\r\n+      if (clay && iron) addOnTotal -= 5;\r\n+    }\r\n+\r\n+    return base + addOnTotal;\r\n+  };\r\n+\r\n+  const handleAddBooking = async (e) => {\r\n+    e.preventDefault();\r\n+    const payload = {\r\n+      ...newBooking,\r\n+      amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n+    };\r\n+    // Send to API\r\n+    setSubmitStatus(null);\r\n+    setSubmitMsg(\"\");\r\n+    try {\r\n+      const resp = await fetch(\"/api/admin-add-booking\", {\r\n+        method: \"POST\",\r\n+        headers: { \"Content-Type\": \"application/json\" },\r\n+        body: JSON.stringify(payload),\r\n+      });\r\n+      const data = await resp.json();\r\n+      if (resp.ok && data.success) {\r\n+        setSubmitStatus(\"success\");\r\n+        setSubmitMsg(\"Booking saved to database!\");\r\n+        onAdd?.(payload);\r\n+        setTimeout(() => {\r\n+          setSubmitStatus(null);\r\n+          setSubmitMsg(\"\");\r\n+          setNewBooking({\r\n+            name: \"\",\r\n+            carName: \"\",\r\n+            service: serviceOptions[0].title,\r\n+            date: \"\",\r\n+            time: \"\",\r\n+            amount: serviceOptions[0].basePrice,\r\n+            status: \"pending\",\r\n+            phone: \"\",\r\n+            email: \"\",\r\n+            location: \"\",\r\n+            addOns: [],\r\n+            carType: carTypeOptions[0].label,\r\n+          });\r\n+          onClose?.();\r\n+        }, 1200);\r\n+      } else {\r\n+        setSubmitStatus(\"error\");\r\n+        setSubmitMsg(data.error || \"Failed to save booking\");\r\n+      }\r\n+    } catch (err) {\r\n+      setSubmitStatus(\"error\");\r\n+      setSubmitMsg(err.message || \"Failed to save booking\");\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+      <div\r\n+        className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n+        style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n+      >\r\n+        {/* Close (X) button */}\r\n+        <button\r\n+          type=\"button\"\r\n+          aria-label=\"Close\"\r\n+          onClick={onClose}\r\n+          className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n+          style={{ background: 'none', border: 'none' }}\r\n+        >\r\n+          &times;\r\n+        </button>\r\n+        <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n+        <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n+          {submitStatus && (\r\n+            <div className={`mb-2 text-center font-semibold ${submitStatus === 'success' ? 'text-green-600' : 'text-red-600'}`}>{submitMsg}</div>\r\n+          )}\r\n+          <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n+            {/* Name */}\r\n+            <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Car Name */}\r\n+            <input type=\"text\" required placeholder=\"Car (e.g., Toyota Camry)\" value={newBooking.carName} onChange={e => setNewBooking({ ...newBooking, carName: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Service dropdown */}\r\n+            <select required value={newBooking.service} onChange={e => {\r\n+              const selectedService = e.target.value;\r\n+              setNewBooking(nb => ({\r\n+                ...nb,\r\n+                service: selectedService,\r\n+                addOns: [],\r\n+                amount: calculatePrice(selectedService, [], nb.carType),\r\n+              }));\r\n+            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+              {serviceOptions.map(s => (\r\n+                <option key={s.title} value={s.title}>{s.title}</option>\r\n+              ))}\r\n+            </select>\r\n+            {/* Car type dropdown */}\r\n+            <select required value={newBooking.carType} onChange={e => {\r\n+              const carType = e.target.value;\r\n+              setNewBooking(nb => ({\r\n+                ...nb,\r\n+                carType,\r\n+                amount: calculatePrice(nb.service, nb.addOns, carType),\r\n+              }));\r\n+            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+              {carTypeOptions.map(c => (\r\n+                <option key={c.label} value={c.label}>{c.label}</option>\r\n+              ))}\r\n+            </select>\r\n+            {/* Add-ons */}\r\n+            <div>\r\n+              <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n+              <div className=\"flex flex-wrap gap-3 mb-2\">\r\n+                {(() => {\r\n+                  let validAddOns = [];\r\n+                  if (newBooking.service === \"Premium Exterior Wash\") {\r\n+                    validAddOns = addOnOptions.filter(opt => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(opt.label));\r\n+                  } else if (newBooking.service === \"Complete Interior Detail\") {\r\n+                    validAddOns = addOnOptions.filter(opt => opt.label === \"Pet Hair Removal\");\r\n+                  } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n+                    validAddOns = addOnOptions;\r\n+                  }\r\n+                  return validAddOns.map(opt => (\r\n+                    <button\r\n+                      key={opt.label}\r\n+                      type=\"button\"\r\n+                      onClick={() => {\r\n+                        setNewBooking(nb => {\r\n+                          const exists = nb.addOns.find(a => a.label === opt.label);\r\n+                          const updated = exists\r\n+                            ? nb.addOns.filter(a => a.label !== opt.label)\r\n+                            : [...nb.addOns, opt];\r\n+                          return {\r\n+                            ...nb,\r\n+                            addOns: updated,\r\n+                            amount: calculatePrice(nb.service, updated, nb.carType),\r\n+                          };\r\n+                        });\r\n+                      }}\r\n+                      className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n+                    >\r\n+                      {opt.label}\r\n+                    </button>\r\n+                  ));\r\n+                })()}\r\n+              </div>\r\n+              {/* Combo discount message */}\r\n+              {(() => {\r\n+                let validAddOns = [];\r\n+                if (newBooking.service === \"Premium Exterior Wash\") {\r\n+                  validAddOns = newBooking.addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n+                } else if (newBooking.service === \"Complete Interior Detail\") {\r\n+                  validAddOns = newBooking.addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n+                } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n+                  validAddOns = newBooking.addOns;\r\n+                }\r\n+                return validAddOns.find(a => a.label === \"Clay Bar\") && validAddOns.find(a => a.label === \"Iron Removal\") ? (\r\n+                  <div className=\"text-xs text-blue-600 mt-2 font-semibold\">Combo discount applied (-$5)</div>\r\n+                ) : null;\r\n+              })()}\r\n+            </div>\r\n+            {/* Date */}\r\n+            <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Time (enabled after selecting date) */}\r\n+            <input\r\n+              type=\"time\"\r\n+              required\r\n+              disabled={!newBooking.date}\r\n+              value={newBooking.time}\r\n+              onChange={e => setNewBooking({ ...newBooking, time: e.target.value })}\r\n+              className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800 disabled:bg-gray-100\"\r\n+            />\r\n+            {/* Amount (auto-calculated, read-only) */}\r\n+            <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n+            {/* Phone (numbers only) */}\r\n+            <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n+              const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n+              setNewBooking({ ...newBooking, phone: val });\r\n+            }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Email */}\r\n+            <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Location autocomplete (Google Places API) */}\r\n+            <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n+              const val = e.target.value;\r\n+              setNewBooking({ ...newBooking, location: val });\r\n+              if (typeof window !== 'undefined' && val.length > 2) {\r\n+                try {\r\n+                  const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n+                  const data = await resp.json();\r\n+                  setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n+                } catch {}\r\n+              } else {\r\n+                setLocationSuggestions([]);\r\n+              }\r\n+            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n+            {/* Location suggestions dropdown */}\r\n+            {locationSuggestions.length > 0 && (\r\n+              <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n+                {locationSuggestions.map((sug, i) => (\r\n+                  <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n+                    setNewBooking(nb => ({ ...nb, location: sug }));\r\n+                    setLocationSuggestions([]);\r\n+                  }}>{sug}</div>\r\n+                ))}\r\n+              </div>\r\n+            )}\r\n+            {/* Status dropdown */}\r\n+            <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+              <option value=\"pending\">Pending</option>\r\n+              <option value=\"complete\">Complete</option>\r\n+            </select>\r\n+            <div className=\"flex gap-4 mt-4 pb-4\">\r\n+              <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n+              <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={onClose}>Cancel</button>\r\n+            </div>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1760674761039,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,286 @@\n+import { useState } from \"react\";\r\n+  const [submitStatus, setSubmitStatus] = useState(null); // null | 'success' | 'error'\r\n+  const [submitMsg, setSubmitMsg] = useState(\"\");\r\n+\r\n+export default function AdminAddBooking({ open, onClose, onAdd }) {\r\n+  if (!open) return null;\r\n+\r\n+  // Service/add-on logic (scoped to this component)\r\n+  const serviceOptions = [\r\n+    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: true },\r\n+    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n+    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n+  ];\r\n+  const addOnOptions = [\r\n+    { label: \"Pet Hair Removal\", price: 20 },\r\n+    { label: \"Clay Bar\", price: 20 },\r\n+    { label: \"Iron Removal\", price: 25 },\r\n+    { label: \"Ceramic Sealant\", price: 10 },\r\n+  ];\r\n+  const carTypeOptions = [\r\n+    { label: \"Sedan\", price: 0 },\r\n+    { label: \"SUV\", price: 10 },\r\n+    { label: \"Truck\", price: 20 },\r\n+  ];\r\n+\r\n+  const [newBooking, setNewBooking] = useState({\r\n+    name: \"\",\r\n+    carName: \"\",\r\n+    service: serviceOptions[0].title,\r\n+    date: \"\",\r\n+    time: \"\",\r\n+    amount: serviceOptions[0].basePrice,\r\n+    status: \"pending\",\r\n+    phone: \"\",\r\n+    email: \"\",\r\n+    location: \"\",\r\n+    addOns: [],\r\n+    carType: carTypeOptions[0].label,\r\n+  });\r\n+  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n+\r\n+  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n+    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n+    let base = service ? service.basePrice : 0;\r\n+    if (serviceTitle === \"Complete Interior Detail\") {\r\n+      if (carTypeLabel === \"SUV\") base = 130;\r\n+      else if (carTypeLabel === \"Truck\") base = 140;\r\n+      else base = 110;\r\n+    } else {\r\n+      const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n+      if (carType) base += carType.price;\r\n+    }\r\n+\r\n+    let addOnTotal = 0;\r\n+    if (service && service.hasAddOns && addOns.length) {\r\n+      let filteredAddOns = [];\r\n+      if (serviceTitle === \"Premium Exterior Wash\") {\r\n+        filteredAddOns = addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n+      } else if (serviceTitle === \"Complete Interior Detail\") {\r\n+        filteredAddOns = addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n+      } else if (serviceTitle === \"Ultimate Full Detail\") {\r\n+        filteredAddOns = addOns;\r\n+      }\r\n+      addOnTotal = filteredAddOns.reduce((sum, a) => sum + a.price, 0);\r\n+      const clay = filteredAddOns.find(a => a.label === \"Clay Bar\");\r\n+      const iron = filteredAddOns.find(a => a.label === \"Iron Removal\");\r\n+      if (clay && iron) addOnTotal -= 5;\r\n+    }\r\n+\r\n+    return base + addOnTotal;\r\n+  };\r\n+\r\n+  const handleAddBooking = async (e) => {\r\n+    e.preventDefault();\r\n+    const payload = {\r\n+      ...newBooking,\r\n+      amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n+    };\r\n+    // Send to API\r\n+    setSubmitStatus(null);\r\n+    setSubmitMsg(\"\");\r\n+    try {\r\n+      const resp = await fetch(\"/api/admin-add-booking\", {\r\n+        method: \"POST\",\r\n+        headers: { \"Content-Type\": \"application/json\" },\r\n+        body: JSON.stringify(payload),\r\n+      });\r\n+      const data = await resp.json();\r\n+      if (resp.ok && data.success) {\r\n+        setSubmitStatus(\"success\");\r\n+        setSubmitMsg(\"Booking saved to database!\");\r\n+        onAdd?.(payload);\r\n+        setTimeout(() => {\r\n+          setSubmitStatus(null);\r\n+          setSubmitMsg(\"\");\r\n+          setNewBooking({\r\n+            name: \"\",\r\n+            carName: \"\",\r\n+            service: serviceOptions[0].title,\r\n+            date: \"\",\r\n+            time: \"\",\r\n+            amount: serviceOptions[0].basePrice,\r\n+            status: \"pending\",\r\n+            phone: \"\",\r\n+            email: \"\",\r\n+            location: \"\",\r\n+            addOns: [],\r\n+            carType: carTypeOptions[0].label,\r\n+          });\r\n+          onClose?.();\r\n+        }, 1200);\r\n+      } else {\r\n+        setSubmitStatus(\"error\");\r\n+        setSubmitMsg(data.error || \"Failed to save booking\");\r\n+      }\r\n+    } catch (err) {\r\n+      setSubmitStatus(\"error\");\r\n+      setSubmitMsg(err.message || \"Failed to save booking\");\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+      <div\r\n+        className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n+        style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n+      >\r\n+        {/* Close (X) button */}\r\n+        <button\r\n+          type=\"button\"\r\n+          aria-label=\"Close\"\r\n+          onClick={onClose}\r\n+          className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n+          style={{ background: 'none', border: 'none' }}\r\n+        >\r\n+          &times;\r\n+        </button>\r\n+        <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n+        <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n+          {submitStatus && (\r\n+            <div className={`mb-2 text-center font-semibold ${submitStatus === 'success' ? 'text-green-600' : 'text-red-600'}`}>{submitMsg}</div>\r\n+          )}\r\n+          <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n+            {/* Name */}\r\n+            <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Car Name */}\r\n+            <input type=\"text\" required placeholder=\"Car (e.g., Toyota Camry)\" value={newBooking.carName} onChange={e => setNewBooking({ ...newBooking, carName: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Service dropdown */}\r\n+            <select required value={newBooking.service} onChange={e => {\r\n+              const selectedService = e.target.value;\r\n+              setNewBooking(nb => ({\r\n+                ...nb,\r\n+                service: selectedService,\r\n+                addOns: [],\r\n+                amount: calculatePrice(selectedService, [], nb.carType),\r\n+              }));\r\n+            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+              {serviceOptions.map(s => (\r\n+                <option key={s.title} value={s.title}>{s.title}</option>\r\n+              ))}\r\n+            </select>\r\n+            {/* Car type dropdown */}\r\n+            <select required value={newBooking.carType} onChange={e => {\r\n+              const carType = e.target.value;\r\n+              setNewBooking(nb => ({\r\n+                ...nb,\r\n+                carType,\r\n+                amount: calculatePrice(nb.service, nb.addOns, carType),\r\n+              }));\r\n+            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+              {carTypeOptions.map(c => (\r\n+                <option key={c.label} value={c.label}>{c.label}</option>\r\n+              ))}\r\n+            </select>\r\n+            {/* Add-ons */}\r\n+            <div>\r\n+              <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n+              <div className=\"flex flex-wrap gap-3 mb-2\">\r\n+                {(() => {\r\n+                  let validAddOns = [];\r\n+                  if (newBooking.service === \"Premium Exterior Wash\") {\r\n+                    validAddOns = addOnOptions.filter(opt => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(opt.label));\r\n+                  } else if (newBooking.service === \"Complete Interior Detail\") {\r\n+                    validAddOns = addOnOptions.filter(opt => opt.label === \"Pet Hair Removal\");\r\n+                  } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n+                    validAddOns = addOnOptions;\r\n+                  }\r\n+                  return validAddOns.map(opt => (\r\n+                    <button\r\n+                      key={opt.label}\r\n+                      type=\"button\"\r\n+                      onClick={() => {\r\n+                        setNewBooking(nb => {\r\n+                          const exists = nb.addOns.find(a => a.label === opt.label);\r\n+                          const updated = exists\r\n+                            ? nb.addOns.filter(a => a.label !== opt.label)\r\n+                            : [...nb.addOns, opt];\r\n+                          return {\r\n+                            ...nb,\r\n+                            addOns: updated,\r\n+                            amount: calculatePrice(nb.service, updated, nb.carType),\r\n+                          };\r\n+                        });\r\n+                      }}\r\n+                      className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n+                    >\r\n+                      {opt.label}\r\n+                    </button>\r\n+                  ));\r\n+                })()}\r\n+              </div>\r\n+              {/* Combo discount message */}\r\n+              {(() => {\r\n+                let validAddOns = [];\r\n+                if (newBooking.service === \"Premium Exterior Wash\") {\r\n+                  validAddOns = newBooking.addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n+                } else if (newBooking.service === \"Complete Interior Detail\") {\r\n+                  validAddOns = newBooking.addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n+                } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n+                  validAddOns = newBooking.addOns;\r\n+                }\r\n+                return validAddOns.find(a => a.label === \"Clay Bar\") && validAddOns.find(a => a.label === \"Iron Removal\") ? (\r\n+                  <div className=\"text-xs text-blue-600 mt-2 font-semibold\">Combo discount applied (-$5)</div>\r\n+                ) : null;\r\n+              })()}\r\n+            </div>\r\n+            {/* Date */}\r\n+            <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Time (enabled after selecting date) */}\r\n+            <input\r\n+              type=\"time\"\r\n+              required\r\n+              disabled={!newBooking.date}\r\n+              value={newBooking.time}\r\n+              onChange={e => setNewBooking({ ...newBooking, time: e.target.value })}\r\n+              className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800 disabled:bg-gray-100\"\r\n+            />\r\n+            {/* Amount (auto-calculated, read-only) */}\r\n+            <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n+            {/* Phone (numbers only) */}\r\n+            <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n+              const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n+              setNewBooking({ ...newBooking, phone: val });\r\n+            }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Email */}\r\n+            <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Location autocomplete (Google Places API) */}\r\n+            <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n+              const val = e.target.value;\r\n+              setNewBooking({ ...newBooking, location: val });\r\n+              if (typeof window !== 'undefined' && val.length > 2) {\r\n+                try {\r\n+                  const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n+                  const data = await resp.json();\r\n+                  setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n+                } catch {}\r\n+              } else {\r\n+                setLocationSuggestions([]);\r\n+              }\r\n+            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n+            {/* Location suggestions dropdown */}\r\n+            {locationSuggestions.length > 0 && (\r\n+              <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n+                {locationSuggestions.map((sug, i) => (\r\n+                  <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n+                    setNewBooking(nb => ({ ...nb, location: sug }));\r\n+                    setLocationSuggestions([]);\r\n+                  }}>{sug}</div>\r\n+                ))}\r\n+              </div>\r\n+            )}\r\n+            {/* Status dropdown */}\r\n+            <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+              <option value=\"pending\">Pending</option>\r\n+              <option value=\"complete\">Complete</option>\r\n+            </select>\r\n+            <div className=\"flex gap-4 mt-4 pb-4\">\r\n+              <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n+              <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={onClose}>Cancel</button>\r\n+            </div>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1760674985094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,282 @@\n+import { useState } from \"react\";\r\n+\r\n+export default function AdminAddBooking({ open, onClose, onAdd }) {\r\n+  const [submitStatus, setSubmitStatus] = useState(null); // null | 'success' | 'error'\r\n+  const [submitMsg, setSubmitMsg] = useState(\"\");\r\n+  const serviceOptions = [\r\n+    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: true },\r\n+    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n+    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n+  ];\r\n+  const addOnOptions = [\r\n+    { label: \"Pet Hair Removal\", price: 20 },\r\n+    { label: \"Clay Bar\", price: 20 },\r\n+    { label: \"Iron Removal\", price: 25 },\r\n+    { label: \"Ceramic Sealant\", price: 10 },\r\n+  ];\r\n+  const carTypeOptions = [\r\n+    { label: \"Sedan\", price: 0 },\r\n+    { label: \"SUV\", price: 10 },\r\n+    { label: \"Truck\", price: 20 },\r\n+  ];\r\n+  const [newBooking, setNewBooking] = useState({\r\n+    name: \"\",\r\n+    carName: \"\",\r\n+    service: serviceOptions[0].title,\r\n+    date: \"\",\r\n+    time: \"\",\r\n+    amount: serviceOptions[0].basePrice,\r\n+    status: \"pending\",\r\n+    phone: \"\",\r\n+    email: \"\",\r\n+    location: \"\",\r\n+    addOns: [],\r\n+    carType: carTypeOptions[0].label,\r\n+  });\r\n+  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n+  if (!open) return null;\r\n+  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n+    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n+    let base = service ? service.basePrice : 0;\r\n+    if (serviceTitle === \"Complete Interior Detail\") {\r\n+      if (carTypeLabel === \"SUV\") base = 130;\r\n+      else if (carTypeLabel === \"Truck\") base = 140;\r\n+      else base = 110;\r\n+    } else {\r\n+      const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n+      if (carType) base += carType.price;\r\n+    }\r\n+\r\n+    let addOnTotal = 0;\r\n+    if (service && service.hasAddOns && addOns.length) {\r\n+      let filteredAddOns = [];\r\n+      if (serviceTitle === \"Premium Exterior Wash\") {\r\n+        filteredAddOns = addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n+      } else if (serviceTitle === \"Complete Interior Detail\") {\r\n+        filteredAddOns = addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n+      } else if (serviceTitle === \"Ultimate Full Detail\") {\r\n+        filteredAddOns = addOns;\r\n+      }\r\n+      addOnTotal = filteredAddOns.reduce((sum, a) => sum + a.price, 0);\r\n+      const clay = filteredAddOns.find(a => a.label === \"Clay Bar\");\r\n+      const iron = filteredAddOns.find(a => a.label === \"Iron Removal\");\r\n+      if (clay && iron) addOnTotal -= 5;\r\n+    }\r\n+\r\n+    return base + addOnTotal;\r\n+  };\r\n+\r\n+  const handleAddBooking = async (e) => {\r\n+    e.preventDefault();\r\n+    const payload = {\r\n+      ...newBooking,\r\n+      amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n+    };\r\n+    // Send to API\r\n+    setSubmitStatus(null);\r\n+    setSubmitMsg(\"\");\r\n+    try {\r\n+      const resp = await fetch(\"/api/admin-add-booking\", {\r\n+        method: \"POST\",\r\n+        headers: { \"Content-Type\": \"application/json\" },\r\n+        body: JSON.stringify(payload),\r\n+      });\r\n+      const data = await resp.json();\r\n+      if (resp.ok && data.success) {\r\n+        setSubmitStatus(\"success\");\r\n+        setSubmitMsg(\"Booking saved to database!\");\r\n+        onAdd?.(payload);\r\n+        setTimeout(() => {\r\n+          setSubmitStatus(null);\r\n+          setSubmitMsg(\"\");\r\n+          setNewBooking({\r\n+            name: \"\",\r\n+            carName: \"\",\r\n+            service: serviceOptions[0].title,\r\n+            date: \"\",\r\n+            time: \"\",\r\n+            amount: serviceOptions[0].basePrice,\r\n+            status: \"pending\",\r\n+            phone: \"\",\r\n+            email: \"\",\r\n+            location: \"\",\r\n+            addOns: [],\r\n+            carType: carTypeOptions[0].label,\r\n+          });\r\n+          onClose?.();\r\n+        }, 1200);\r\n+      } else {\r\n+        setSubmitStatus(\"error\");\r\n+        setSubmitMsg(data.error || \"Failed to save booking\");\r\n+      }\r\n+    } catch (err) {\r\n+      setSubmitStatus(\"error\");\r\n+      setSubmitMsg(err.message || \"Failed to save booking\");\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+      <div\r\n+        className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n+        style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n+      >\r\n+        {/* Close (X) button */}\r\n+        <button\r\n+          type=\"button\"\r\n+          aria-label=\"Close\"\r\n+          onClick={onClose}\r\n+          className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n+          style={{ background: 'none', border: 'none' }}\r\n+        >\r\n+          &times;\r\n+        </button>\r\n+        <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n+        <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n+          {submitStatus && (\r\n+            <div className={`mb-2 text-center font-semibold ${submitStatus === 'success' ? 'text-green-600' : 'text-red-600'}`}>{submitMsg}</div>\r\n+          )}\r\n+          <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n+            {/* Name */}\r\n+            <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Car Name */}\r\n+            <input type=\"text\" required placeholder=\"Car (e.g., Toyota Camry)\" value={newBooking.carName} onChange={e => setNewBooking({ ...newBooking, carName: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Service dropdown */}\r\n+            <select required value={newBooking.service} onChange={e => {\r\n+              const selectedService = e.target.value;\r\n+              setNewBooking(nb => ({\r\n+                ...nb,\r\n+                service: selectedService,\r\n+                addOns: [],\r\n+                amount: calculatePrice(selectedService, [], nb.carType),\r\n+              }));\r\n+            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+              {serviceOptions.map(s => (\r\n+                <option key={s.title} value={s.title}>{s.title}</option>\r\n+              ))}\r\n+            </select>\r\n+            {/* Car type dropdown */}\r\n+            <select required value={newBooking.carType} onChange={e => {\r\n+              const carType = e.target.value;\r\n+              setNewBooking(nb => ({\r\n+                ...nb,\r\n+                carType,\r\n+                amount: calculatePrice(nb.service, nb.addOns, carType),\r\n+              }));\r\n+            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+              {carTypeOptions.map(c => (\r\n+                <option key={c.label} value={c.label}>{c.label}</option>\r\n+              ))}\r\n+            </select>\r\n+            {/* Add-ons */}\r\n+            <div>\r\n+              <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n+              <div className=\"flex flex-wrap gap-3 mb-2\">\r\n+                {(() => {\r\n+                  let validAddOns = [];\r\n+                  if (newBooking.service === \"Premium Exterior Wash\") {\r\n+                    validAddOns = addOnOptions.filter(opt => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(opt.label));\r\n+                  } else if (newBooking.service === \"Complete Interior Detail\") {\r\n+                    validAddOns = addOnOptions.filter(opt => opt.label === \"Pet Hair Removal\");\r\n+                  } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n+                    validAddOns = addOnOptions;\r\n+                  }\r\n+                  return validAddOns.map(opt => (\r\n+                    <button\r\n+                      key={opt.label}\r\n+                      type=\"button\"\r\n+                      onClick={() => {\r\n+                        setNewBooking(nb => {\r\n+                          const exists = nb.addOns.find(a => a.label === opt.label);\r\n+                          const updated = exists\r\n+                            ? nb.addOns.filter(a => a.label !== opt.label)\r\n+                            : [...nb.addOns, opt];\r\n+                          return {\r\n+                            ...nb,\r\n+                            addOns: updated,\r\n+                            amount: calculatePrice(nb.service, updated, nb.carType),\r\n+                          };\r\n+                        });\r\n+                      }}\r\n+                      className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n+                    >\r\n+                      {opt.label}\r\n+                    </button>\r\n+                  ));\r\n+                })()}\r\n+              </div>\r\n+              {/* Combo discount message */}\r\n+              {(() => {\r\n+                let validAddOns = [];\r\n+                if (newBooking.service === \"Premium Exterior Wash\") {\r\n+                  validAddOns = newBooking.addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n+                } else if (newBooking.service === \"Complete Interior Detail\") {\r\n+                  validAddOns = newBooking.addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n+                } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n+                  validAddOns = newBooking.addOns;\r\n+                }\r\n+                return validAddOns.find(a => a.label === \"Clay Bar\") && validAddOns.find(a => a.label === \"Iron Removal\") ? (\r\n+                  <div className=\"text-xs text-blue-600 mt-2 font-semibold\">Combo discount applied (-$5)</div>\r\n+                ) : null;\r\n+              })()}\r\n+            </div>\r\n+            {/* Date */}\r\n+            <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Time (enabled after selecting date) */}\r\n+            <input\r\n+              type=\"time\"\r\n+              required\r\n+              disabled={!newBooking.date}\r\n+              value={newBooking.time}\r\n+              onChange={e => setNewBooking({ ...newBooking, time: e.target.value })}\r\n+              className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800 disabled:bg-gray-100\"\r\n+            />\r\n+            {/* Amount (auto-calculated, read-only) */}\r\n+            <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n+            {/* Phone (numbers only) */}\r\n+            <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n+              const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n+              setNewBooking({ ...newBooking, phone: val });\r\n+            }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Email */}\r\n+            <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Location autocomplete (Google Places API) */}\r\n+            <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n+              const val = e.target.value;\r\n+              setNewBooking({ ...newBooking, location: val });\r\n+              if (typeof window !== 'undefined' && val.length > 2) {\r\n+                try {\r\n+                  const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n+                  const data = await resp.json();\r\n+                  setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n+                } catch {}\r\n+              } else {\r\n+                setLocationSuggestions([]);\r\n+              }\r\n+            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n+            {/* Location suggestions dropdown */}\r\n+            {locationSuggestions.length > 0 && (\r\n+              <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n+                {locationSuggestions.map((sug, i) => (\r\n+                  <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n+                    setNewBooking(nb => ({ ...nb, location: sug }));\r\n+                    setLocationSuggestions([]);\r\n+                  }}>{sug}</div>\r\n+                ))}\r\n+              </div>\r\n+            )}\r\n+            {/* Status dropdown */}\r\n+            <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+              <option value=\"pending\">Pending</option>\r\n+              <option value=\"complete\">Complete</option>\r\n+            </select>\r\n+            <div className=\"flex gap-4 mt-4 pb-4\">\r\n+              <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n+              <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={onClose}>Cancel</button>\r\n+            </div>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1760675210695,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,286 @@\n+import { useState } from \"react\";\r\n+\r\n+export default function AdminAddBooking({ open, onClose, onAdd }) {\r\n+  const [submitStatus, setSubmitStatus] = useState(null); // null | 'success' | 'error'\r\n+  const [submitMsg, setSubmitMsg] = useState(\"\");\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const serviceOptions = [\r\n+    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: true },\r\n+    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n+    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n+  ];\r\n+  const addOnOptions = [\r\n+    { label: \"Pet Hair Removal\", price: 20 },\r\n+    { label: \"Clay Bar\", price: 20 },\r\n+    { label: \"Iron Removal\", price: 25 },\r\n+    { label: \"Ceramic Sealant\", price: 10 },\r\n+  ];\r\n+  const carTypeOptions = [\r\n+    { label: \"Sedan\", price: 0 },\r\n+    { label: \"SUV\", price: 10 },\r\n+    { label: \"Truck\", price: 20 },\r\n+  ];\r\n+  const [newBooking, setNewBooking] = useState({\r\n+    name: \"\",\r\n+    carName: \"\",\r\n+    service: serviceOptions[0].title,\r\n+    date: \"\",\r\n+    time: \"\",\r\n+    amount: serviceOptions[0].basePrice,\r\n+    status: \"pending\",\r\n+    phone: \"\",\r\n+    email: \"\",\r\n+    location: \"\",\r\n+    addOns: [],\r\n+    carType: carTypeOptions[0].label,\r\n+  });\r\n+  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n+  if (!open) return null;\r\n+  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n+    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n+    let base = service ? service.basePrice : 0;\r\n+    if (serviceTitle === \"Complete Interior Detail\") {\r\n+      if (carTypeLabel === \"SUV\") base = 130;\r\n+      else if (carTypeLabel === \"Truck\") base = 140;\r\n+      else base = 110;\r\n+    } else {\r\n+      const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n+      if (carType) base += carType.price;\r\n+    }\r\n+\r\n+    let addOnTotal = 0;\r\n+    if (service && service.hasAddOns && addOns.length) {\r\n+      let filteredAddOns = [];\r\n+      if (serviceTitle === \"Premium Exterior Wash\") {\r\n+        filteredAddOns = addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n+      } else if (serviceTitle === \"Complete Interior Detail\") {\r\n+        filteredAddOns = addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n+      } else if (serviceTitle === \"Ultimate Full Detail\") {\r\n+        filteredAddOns = addOns;\r\n+      }\r\n+      addOnTotal = filteredAddOns.reduce((sum, a) => sum + a.price, 0);\r\n+      const clay = filteredAddOns.find(a => a.label === \"Clay Bar\");\r\n+      const iron = filteredAddOns.find(a => a.label === \"Iron Removal\");\r\n+      if (clay && iron) addOnTotal -= 5;\r\n+    }\r\n+\r\n+    return base + addOnTotal;\r\n+  };\r\n+\r\n+  const handleAddBooking = async (e) => {\r\n+    e.preventDefault();\r\n+    setIsSubmitting(true);\r\n+    const payload = {\r\n+      ...newBooking,\r\n+      amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n+    };\r\n+    setSubmitStatus(null);\r\n+    setSubmitMsg(\"\");\r\n+    try {\r\n+      const resp = await fetch(\"/api/admin-add-booking\", {\r\n+        method: \"POST\",\r\n+        headers: { \"Content-Type\": \"application/json\" },\r\n+        body: JSON.stringify(payload),\r\n+      });\r\n+      const data = await resp.json();\r\n+      if (resp.ok && data.success) {\r\n+        setSubmitStatus(\"success\");\r\n+        setSubmitMsg(\"Booking saved to database!\");\r\n+        onAdd?.(payload);\r\n+        setTimeout(() => {\r\n+          setSubmitStatus(null);\r\n+          setSubmitMsg(\"\");\r\n+          setNewBooking({\r\n+            name: \"\",\r\n+            carName: \"\",\r\n+            service: serviceOptions[0].title,\r\n+            date: \"\",\r\n+            time: \"\",\r\n+            amount: serviceOptions[0].basePrice,\r\n+            status: \"pending\",\r\n+            phone: \"\",\r\n+            email: \"\",\r\n+            location: \"\",\r\n+            addOns: [],\r\n+            carType: carTypeOptions[0].label,\r\n+          });\r\n+          onClose?.();\r\n+        }, 1200);\r\n+      } else {\r\n+        setSubmitStatus(\"error\");\r\n+        setSubmitMsg(data.error || \"Failed to save booking\");\r\n+      }\r\n+    } catch (err) {\r\n+      setSubmitStatus(\"error\");\r\n+      setSubmitMsg(err.message || \"Failed to save booking\");\r\n+    }\r\n+    setIsSubmitting(false);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+      <div\r\n+        className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n+        style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n+      >\r\n+        {/* Close (X) button */}\r\n+        <button\r\n+          type=\"button\"\r\n+          aria-label=\"Close\"\r\n+          onClick={onClose}\r\n+          className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n+          style={{ background: 'none', border: 'none' }}\r\n+        >\r\n+          &times;\r\n+        </button>\r\n+        <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n+        <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n+          {submitStatus && (\r\n+            <div className={`mb-2 text-center font-semibold ${submitStatus === 'success' ? 'text-green-600' : 'text-red-600'}`}>{submitMsg}</div>\r\n+          )}\r\n+          <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n+            {/* Name */}\r\n+            <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Car Name */}\r\n+            <input type=\"text\" required placeholder=\"Car (e.g., Toyota Camry)\" value={newBooking.carName} onChange={e => setNewBooking({ ...newBooking, carName: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Service dropdown */}\r\n+            <select required value={newBooking.service} onChange={e => {\r\n+              const selectedService = e.target.value;\r\n+              setNewBooking(nb => ({\r\n+                ...nb,\r\n+                service: selectedService,\r\n+                addOns: [],\r\n+                amount: calculatePrice(selectedService, [], nb.carType),\r\n+              }));\r\n+            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+              {serviceOptions.map(s => (\r\n+                <option key={s.title} value={s.title}>{s.title}</option>\r\n+              ))}\r\n+            </select>\r\n+            {/* Car type dropdown */}\r\n+            <select required value={newBooking.carType} onChange={e => {\r\n+              const carType = e.target.value;\r\n+              setNewBooking(nb => ({\r\n+                ...nb,\r\n+                carType,\r\n+                amount: calculatePrice(nb.service, nb.addOns, carType),\r\n+              }));\r\n+            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+              {carTypeOptions.map(c => (\r\n+                <option key={c.label} value={c.label}>{c.label}</option>\r\n+              ))}\r\n+            </select>\r\n+            {/* Add-ons */}\r\n+            <div>\r\n+              <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n+              <div className=\"flex flex-wrap gap-3 mb-2\">\r\n+                {(() => {\r\n+                  let validAddOns = [];\r\n+                  if (newBooking.service === \"Premium Exterior Wash\") {\r\n+                    validAddOns = addOnOptions.filter(opt => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(opt.label));\r\n+                  } else if (newBooking.service === \"Complete Interior Detail\") {\r\n+                    validAddOns = addOnOptions.filter(opt => opt.label === \"Pet Hair Removal\");\r\n+                  } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n+                    validAddOns = addOnOptions;\r\n+                  }\r\n+                  return validAddOns.map(opt => (\r\n+                    <button\r\n+                      key={opt.label}\r\n+                      type=\"button\"\r\n+                      onClick={() => {\r\n+                        setNewBooking(nb => {\r\n+                          const exists = nb.addOns.find(a => a.label === opt.label);\r\n+                          const updated = exists\r\n+                            ? nb.addOns.filter(a => a.label !== opt.label)\r\n+                            : [...nb.addOns, opt];\r\n+                          return {\r\n+                            ...nb,\r\n+                            addOns: updated,\r\n+                            amount: calculatePrice(nb.service, updated, nb.carType),\r\n+                          };\r\n+                        });\r\n+                      }}\r\n+                      className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n+                    >\r\n+                      {opt.label}\r\n+                    </button>\r\n+                  ));\r\n+                })()}\r\n+              </div>\r\n+              {/* Combo discount message */}\r\n+              {(() => {\r\n+                let validAddOns = [];\r\n+                if (newBooking.service === \"Premium Exterior Wash\") {\r\n+                  validAddOns = newBooking.addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n+                } else if (newBooking.service === \"Complete Interior Detail\") {\r\n+                  validAddOns = newBooking.addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n+                } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n+                  validAddOns = newBooking.addOns;\r\n+                }\r\n+                return validAddOns.find(a => a.label === \"Clay Bar\") && validAddOns.find(a => a.label === \"Iron Removal\") ? (\r\n+                  <div className=\"text-xs text-blue-600 mt-2 font-semibold\">Combo discount applied (-$5)</div>\r\n+                ) : null;\r\n+              })()}\r\n+            </div>\r\n+            {/* Date */}\r\n+            <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Time (enabled after selecting date) */}\r\n+            <input\r\n+              type=\"time\"\r\n+              required\r\n+              disabled={!newBooking.date}\r\n+              value={newBooking.time}\r\n+              onChange={e => setNewBooking({ ...newBooking, time: e.target.value })}\r\n+              className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800 disabled:bg-gray-100\"\r\n+            />\r\n+            {/* Amount (auto-calculated, read-only) */}\r\n+            <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n+            {/* Phone (numbers only) */}\r\n+            <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n+              const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n+              setNewBooking({ ...newBooking, phone: val });\r\n+            }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Email */}\r\n+            <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Location autocomplete (Google Places API) */}\r\n+            <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n+              const val = e.target.value;\r\n+              setNewBooking({ ...newBooking, location: val });\r\n+              if (typeof window !== 'undefined' && val.length > 2) {\r\n+                try {\r\n+                  const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n+                  const data = await resp.json();\r\n+                  setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n+                } catch {}\r\n+              } else {\r\n+                setLocationSuggestions([]);\r\n+              }\r\n+            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n+            {/* Location suggestions dropdown */}\r\n+            {locationSuggestions.length > 0 && (\r\n+              <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n+                {locationSuggestions.map((sug, i) => (\r\n+                  <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n+                    setNewBooking(nb => ({ ...nb, location: sug }));\r\n+                    setLocationSuggestions([]);\r\n+                  }}>{sug}</div>\r\n+                ))}\r\n+              </div>\r\n+            )}\r\n+            {/* Status dropdown */}\r\n+            <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+              <option value=\"pending\">Pending</option>\r\n+              <option value=\"complete\">Complete</option>\r\n+            </select>\r\n+            <div className=\"flex gap-4 mt-4 pb-4\">\r\n+              <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\" disabled={isSubmitting}>\r\n+                {isSubmitting ? 'Adding...' : 'Add'}\r\n+              </button>\r\n+              <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={onClose} disabled={isSubmitting}>Cancel</button>\r\n+            </div>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1760675584448,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,317 @@\n+import { useState, useEffect } from \"react\";\r\n+\r\n+export default function AdminAddBooking({ open, onClose, onAdd, editBooking, onEdit }) {\r\n+  const [submitStatus, setSubmitStatus] = useState(null); // null | 'success' | 'error'\r\n+  const [submitMsg, setSubmitMsg] = useState(\"\");\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const serviceOptions = [\r\n+    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: true },\r\n+    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n+    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n+  ];\r\n+  const addOnOptions = [\r\n+    { label: \"Pet Hair Removal\", price: 20 },\r\n+    { label: \"Clay Bar\", price: 20 },\r\n+    { label: \"Iron Removal\", price: 25 },\r\n+    { label: \"Ceramic Sealant\", price: 10 },\r\n+  ];\r\n+  const carTypeOptions = [\r\n+    { label: \"Sedan\", price: 0 },\r\n+    { label: \"SUV\", price: 10 },\r\n+    { label: \"Truck\", price: 20 },\r\n+  ];\r\n+  const [newBooking, setNewBooking] = useState({\r\n+    name: \"\",\r\n+    carName: \"\",\r\n+    service: serviceOptions[0].title,\r\n+    date: \"\",\r\n+    time: \"\",\r\n+    amount: serviceOptions[0].basePrice,\r\n+    status: \"pending\",\r\n+    phone: \"\",\r\n+    email: \"\",\r\n+    location: \"\",\r\n+    addOns: [],\r\n+    carType: carTypeOptions[0].label,\r\n+  });\r\n+\r\n+  // Prefill form in edit mode\r\n+  useEffect(() => {\r\n+    if (editBooking && open) {\r\n+      setNewBooking({\r\n+        ...editBooking,\r\n+        amount: editBooking.amount || serviceOptions.find(s => s.title === editBooking.service)?.basePrice || serviceOptions[0].basePrice,\r\n+      });\r\n+    } else if (open && !editBooking) {\r\n+      setNewBooking({\r\n+        name: \"\",\r\n+        carName: \"\",\r\n+        service: serviceOptions[0].title,\r\n+        date: \"\",\r\n+        time: \"\",\r\n+        amount: serviceOptions[0].basePrice,\r\n+        status: \"pending\",\r\n+        phone: \"\",\r\n+        email: \"\",\r\n+        location: \"\",\r\n+        addOns: [],\r\n+        carType: carTypeOptions[0].label,\r\n+      });\r\n+    }\r\n+  }, [editBooking, open]);\r\n+  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n+  if (!open) return null;\r\n+  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n+    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n+    let base = service ? service.basePrice : 0;\r\n+    if (serviceTitle === \"Complete Interior Detail\") {\r\n+      if (carTypeLabel === \"SUV\") base = 130;\r\n+      else if (carTypeLabel === \"Truck\") base = 140;\r\n+      else base = 110;\r\n+    } else {\r\n+      const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n+      if (carType) base += carType.price;\r\n+    }\r\n+\r\n+    let addOnTotal = 0;\r\n+    if (service && service.hasAddOns && addOns.length) {\r\n+      let filteredAddOns = [];\r\n+      if (serviceTitle === \"Premium Exterior Wash\") {\r\n+        filteredAddOns = addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n+      } else if (serviceTitle === \"Complete Interior Detail\") {\r\n+        filteredAddOns = addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n+      } else if (serviceTitle === \"Ultimate Full Detail\") {\r\n+        filteredAddOns = addOns;\r\n+      }\r\n+      addOnTotal = filteredAddOns.reduce((sum, a) => sum + a.price, 0);\r\n+      const clay = filteredAddOns.find(a => a.label === \"Clay Bar\");\r\n+      const iron = filteredAddOns.find(a => a.label === \"Iron Removal\");\r\n+      if (clay && iron) addOnTotal -= 5;\r\n+    }\r\n+\r\n+    return base + addOnTotal;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+    setIsSubmitting(true);\r\n+    const payload = {\r\n+      ...newBooking,\r\n+      amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n+    };\r\n+    setSubmitStatus(null);\r\n+    setSubmitMsg(\"\");\r\n+    try {\r\n+      if (editBooking && onEdit) {\r\n+        await onEdit(payload);\r\n+        setSubmitStatus(\"success\");\r\n+        setSubmitMsg(\"Booking updated!\");\r\n+      } else {\r\n+        const resp = await fetch(\"/api/admin-add-booking\", {\r\n+          method: \"POST\",\r\n+          headers: { \"Content-Type\": \"application/json\" },\r\n+          body: JSON.stringify(payload),\r\n+        });\r\n+        const data = await resp.json();\r\n+        if (resp.ok && data.success) {\r\n+          setSubmitStatus(\"success\");\r\n+          setSubmitMsg(\"Booking saved to database!\");\r\n+          onAdd?.(payload);\r\n+        } else {\r\n+          setSubmitStatus(\"error\");\r\n+          setSubmitMsg(data.error || \"Failed to save booking\");\r\n+        }\r\n+      }\r\n+      setTimeout(() => {\r\n+        setSubmitStatus(null);\r\n+        setSubmitMsg(\"\");\r\n+        setNewBooking({\r\n+          name: \"\",\r\n+          carName: \"\",\r\n+          service: serviceOptions[0].title,\r\n+          date: \"\",\r\n+          time: \"\",\r\n+          amount: serviceOptions[0].basePrice,\r\n+          status: \"pending\",\r\n+          phone: \"\",\r\n+          email: \"\",\r\n+          location: \"\",\r\n+          addOns: [],\r\n+          carType: carTypeOptions[0].label,\r\n+        });\r\n+        onClose?.();\r\n+      }, 1200);\r\n+    } catch (err) {\r\n+      setSubmitStatus(\"error\");\r\n+      setSubmitMsg(err.message || \"Failed to save booking\");\r\n+    }\r\n+    setIsSubmitting(false);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+      <div\r\n+        className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n+        style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n+      >\r\n+        {/* Close (X) button */}\r\n+        <button\r\n+          type=\"button\"\r\n+          aria-label=\"Close\"\r\n+          onClick={onClose}\r\n+          className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n+          style={{ background: 'none', border: 'none' }}\r\n+        >\r\n+          &times;\r\n+        </button>\r\n+        <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n+        <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n+          {submitStatus && (\r\n+            <div className={`mb-2 text-center font-semibold ${submitStatus === 'success' ? 'text-green-600' : 'text-red-600'}`}>{submitMsg}</div>\r\n+          )}\r\n+          <form onSubmit={handleSubmit} className=\"space-y-5\">\r\n+            {/* Name */}\r\n+            <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Car Name */}\r\n+            <input type=\"text\" required placeholder=\"Car (e.g., Toyota Camry)\" value={newBooking.carName} onChange={e => setNewBooking({ ...newBooking, carName: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Service dropdown */}\r\n+            <select required value={newBooking.service} onChange={e => {\r\n+              const selectedService = e.target.value;\r\n+              setNewBooking(nb => ({\r\n+                ...nb,\r\n+                service: selectedService,\r\n+                addOns: [],\r\n+                amount: calculatePrice(selectedService, [], nb.carType),\r\n+              }));\r\n+            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+              {serviceOptions.map(s => (\r\n+                <option key={s.title} value={s.title}>{s.title}</option>\r\n+              ))}\r\n+            </select>\r\n+            {/* Car type dropdown */}\r\n+            <select required value={newBooking.carType} onChange={e => {\r\n+              const carType = e.target.value;\r\n+              setNewBooking(nb => ({\r\n+                ...nb,\r\n+                carType,\r\n+                amount: calculatePrice(nb.service, nb.addOns, carType),\r\n+              }));\r\n+            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+              {carTypeOptions.map(c => (\r\n+                <option key={c.label} value={c.label}>{c.label}</option>\r\n+              ))}\r\n+            </select>\r\n+            {/* Add-ons */}\r\n+            <div>\r\n+              <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n+              <div className=\"flex flex-wrap gap-3 mb-2\">\r\n+                {(() => {\r\n+                  let validAddOns = [];\r\n+                  if (newBooking.service === \"Premium Exterior Wash\") {\r\n+                    validAddOns = addOnOptions.filter(opt => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(opt.label));\r\n+                  } else if (newBooking.service === \"Complete Interior Detail\") {\r\n+                    validAddOns = addOnOptions.filter(opt => opt.label === \"Pet Hair Removal\");\r\n+                  } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n+                    validAddOns = addOnOptions;\r\n+                  }\r\n+                  return validAddOns.map(opt => (\r\n+                    <button\r\n+                      key={opt.label}\r\n+                      type=\"button\"\r\n+                      onClick={() => {\r\n+                        setNewBooking(nb => {\r\n+                          const exists = nb.addOns.find(a => a.label === opt.label);\r\n+                          const updated = exists\r\n+                            ? nb.addOns.filter(a => a.label !== opt.label)\r\n+                            : [...nb.addOns, opt];\r\n+                          return {\r\n+                            ...nb,\r\n+                            addOns: updated,\r\n+                            amount: calculatePrice(nb.service, updated, nb.carType),\r\n+                          };\r\n+                        });\r\n+                      }}\r\n+                      className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n+                    >\r\n+                      {opt.label}\r\n+                    </button>\r\n+                  ));\r\n+                })()}\r\n+              </div>\r\n+              {/* Combo discount message */}\r\n+              {(() => {\r\n+                let validAddOns = [];\r\n+                if (newBooking.service === \"Premium Exterior Wash\") {\r\n+                  validAddOns = newBooking.addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n+                } else if (newBooking.service === \"Complete Interior Detail\") {\r\n+                  validAddOns = newBooking.addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n+                } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n+                  validAddOns = newBooking.addOns;\r\n+                }\r\n+                return validAddOns.find(a => a.label === \"Clay Bar\") && validAddOns.find(a => a.label === \"Iron Removal\") ? (\r\n+                  <div className=\"text-xs text-blue-600 mt-2 font-semibold\">Combo discount applied (-$5)</div>\r\n+                ) : null;\r\n+              })()}\r\n+            </div>\r\n+            {/* Date */}\r\n+            <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Time (enabled after selecting date) */}\r\n+            <input\r\n+              type=\"time\"\r\n+              required\r\n+              disabled={!newBooking.date}\r\n+              value={newBooking.time}\r\n+              onChange={e => setNewBooking({ ...newBooking, time: e.target.value })}\r\n+              className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800 disabled:bg-gray-100\"\r\n+            />\r\n+            {/* Amount (auto-calculated, read-only) */}\r\n+            <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n+            {/* Phone (numbers only) */}\r\n+            <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n+              const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n+              setNewBooking({ ...newBooking, phone: val });\r\n+            }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Email */}\r\n+            <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Location autocomplete (Google Places API) */}\r\n+            <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n+              const val = e.target.value;\r\n+              setNewBooking({ ...newBooking, location: val });\r\n+              if (typeof window !== 'undefined' && val.length > 2) {\r\n+                try {\r\n+                  const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n+                  const data = await resp.json();\r\n+                  setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n+                } catch {}\r\n+              } else {\r\n+                setLocationSuggestions([]);\r\n+              }\r\n+            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n+            {/* Location suggestions dropdown */}\r\n+            {locationSuggestions.length > 0 && (\r\n+              <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n+                {locationSuggestions.map((sug, i) => (\r\n+                  <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n+                    setNewBooking(nb => ({ ...nb, location: sug }));\r\n+                    setLocationSuggestions([]);\r\n+                  }}>{sug}</div>\r\n+                ))}\r\n+              </div>\r\n+            )}\r\n+            {/* Status dropdown */}\r\n+            <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+              <option value=\"pending\">Pending</option>\r\n+              <option value=\"complete\">Complete</option>\r\n+            </select>\r\n+            <div className=\"flex gap-4 mt-4 pb-4\">\r\n+              <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\" disabled={isSubmitting}>\r\n+                {isSubmitting ? (editBooking ? 'Saving...' : 'Adding...') : (editBooking ? 'Edit' : 'Add')}\r\n+              </button>\r\n+              <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={onClose} disabled={isSubmitting}>Cancel</button>\r\n+            </div>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1760676694551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,336 @@\n+import { useState, useEffect } from \"react\";\r\n+\r\n+export default function AdminAddBooking({ open, onClose, onAdd, editBooking, onEdit }) {\r\n+  const [submitStatus, setSubmitStatus] = useState(null); // null | 'success' | 'error'\r\n+  const [submitMsg, setSubmitMsg] = useState(\"\");\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [overrideAmount, setOverrideAmount] = useState(false);\r\n+  const serviceOptions = [\r\n+    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: true },\r\n+    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n+    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n+  ];\r\n+  const addOnOptions = [\r\n+    { label: \"Pet Hair Removal\", price: 20 },\r\n+    { label: \"Clay Bar\", price: 20 },\r\n+    { label: \"Iron Removal\", price: 25 },\r\n+    { label: \"Ceramic Sealant\", price: 10 },\r\n+  ];\r\n+  const carTypeOptions = [\r\n+    { label: \"Sedan\", price: 0 },\r\n+    { label: \"SUV\", price: 10 },\r\n+    { label: \"Truck\", price: 20 },\r\n+  ];\r\n+  const [newBooking, setNewBooking] = useState({\r\n+    name: \"\",\r\n+    carName: \"\",\r\n+    service: serviceOptions[0].title,\r\n+    date: \"\",\r\n+    time: \"\",\r\n+    amount: serviceOptions[0].basePrice,\r\n+    status: \"pending\",\r\n+    phone: \"\",\r\n+    email: \"\",\r\n+    location: \"\",\r\n+    addOns: [],\r\n+    carType: carTypeOptions[0].label,\r\n+  });\r\n+\r\n+  // Prefill form in edit mode\r\n+  useEffect(() => {\r\n+    if (editBooking && open) {\r\n+      setNewBooking({\r\n+        ...editBooking,\r\n+        amount: editBooking.amount || serviceOptions.find(s => s.title === editBooking.service)?.basePrice || serviceOptions[0].basePrice,\r\n+      });\r\n+    } else if (open && !editBooking) {\r\n+      setNewBooking({\r\n+        name: \"\",\r\n+        carName: \"\",\r\n+        service: serviceOptions[0].title,\r\n+        date: \"\",\r\n+        time: \"\",\r\n+        amount: serviceOptions[0].basePrice,\r\n+        status: \"pending\",\r\n+        phone: \"\",\r\n+        email: \"\",\r\n+        location: \"\",\r\n+        addOns: [],\r\n+        carType: carTypeOptions[0].label,\r\n+      });\r\n+    }\r\n+  }, [editBooking, open]);\r\n+  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n+  if (!open) return null;\r\n+  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n+    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n+    let base = service ? service.basePrice : 0;\r\n+    if (serviceTitle === \"Complete Interior Detail\") {\r\n+      if (carTypeLabel === \"SUV\") base = 130;\r\n+      else if (carTypeLabel === \"Truck\") base = 140;\r\n+      else base = 110;\r\n+    } else {\r\n+      const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n+      if (carType) base += carType.price;\r\n+    }\r\n+\r\n+    let addOnTotal = 0;\r\n+    if (service && service.hasAddOns && addOns.length) {\r\n+      let filteredAddOns = [];\r\n+      if (serviceTitle === \"Premium Exterior Wash\") {\r\n+        filteredAddOns = addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n+      } else if (serviceTitle === \"Complete Interior Detail\") {\r\n+        filteredAddOns = addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n+      } else if (serviceTitle === \"Ultimate Full Detail\") {\r\n+        filteredAddOns = addOns;\r\n+      }\r\n+      addOnTotal = filteredAddOns.reduce((sum, a) => sum + a.price, 0);\r\n+      const clay = filteredAddOns.find(a => a.label === \"Clay Bar\");\r\n+      const iron = filteredAddOns.find(a => a.label === \"Iron Removal\");\r\n+      if (clay && iron) addOnTotal -= 5;\r\n+    }\r\n+\r\n+    return base + addOnTotal;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+    setIsSubmitting(true);\r\n+    const payload = {\r\n+      ...newBooking,\r\n+      amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n+    };\r\n+    setSubmitStatus(null);\r\n+    setSubmitMsg(\"\");\r\n+    try {\r\n+      if (editBooking && onEdit) {\r\n+        await onEdit(payload);\r\n+        setSubmitStatus(\"success\");\r\n+        setSubmitMsg(\"Booking updated!\");\r\n+      } else {\r\n+        const resp = await fetch(\"/api/admin-add-booking\", {\r\n+          method: \"POST\",\r\n+          headers: { \"Content-Type\": \"application/json\" },\r\n+          body: JSON.stringify(payload),\r\n+        });\r\n+        const data = await resp.json();\r\n+        if (resp.ok && data.success) {\r\n+          setSubmitStatus(\"success\");\r\n+          setSubmitMsg(\"Booking saved to database!\");\r\n+          onAdd?.(payload);\r\n+        } else {\r\n+          setSubmitStatus(\"error\");\r\n+          setSubmitMsg(data.error || \"Failed to save booking\");\r\n+        }\r\n+      }\r\n+      setTimeout(() => {\r\n+        setSubmitStatus(null);\r\n+        setSubmitMsg(\"\");\r\n+        setNewBooking({\r\n+          name: \"\",\r\n+          carName: \"\",\r\n+          service: serviceOptions[0].title,\r\n+          date: \"\",\r\n+          time: \"\",\r\n+          amount: serviceOptions[0].basePrice,\r\n+          status: \"pending\",\r\n+          phone: \"\",\r\n+          email: \"\",\r\n+          location: \"\",\r\n+          addOns: [],\r\n+          carType: carTypeOptions[0].label,\r\n+        });\r\n+        onClose?.();\r\n+      }, 1200);\r\n+    } catch (err) {\r\n+      setSubmitStatus(\"error\");\r\n+      setSubmitMsg(err.message || \"Failed to save booking\");\r\n+    }\r\n+    setIsSubmitting(false);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+      <div\r\n+        className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n+        style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n+      >\r\n+        {/* Close (X) button */}\r\n+        <button\r\n+          type=\"button\"\r\n+          aria-label=\"Close\"\r\n+          onClick={onClose}\r\n+          className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n+          style={{ background: 'none', border: 'none' }}\r\n+        >\r\n+          &times;\r\n+        </button>\r\n+        <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n+        <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n+          {submitStatus && (\r\n+            <div className={`mb-2 text-center font-semibold ${submitStatus === 'success' ? 'text-green-600' : 'text-red-600'}`}>{submitMsg}</div>\r\n+          )}\r\n+          <form onSubmit={handleSubmit} className=\"space-y-5\">\r\n+            {/* Name */}\r\n+            <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Car Name */}\r\n+            <input type=\"text\" required placeholder=\"Car (e.g., Toyota Camry)\" value={newBooking.carName} onChange={e => setNewBooking({ ...newBooking, carName: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Service dropdown */}\r\n+            <select required value={newBooking.service} onChange={e => {\r\n+              const selectedService = e.target.value;\r\n+              setNewBooking(nb => ({\r\n+                ...nb,\r\n+                service: selectedService,\r\n+                addOns: [],\r\n+                amount: overrideAmount ? nb.amount : calculatePrice(selectedService, [], nb.carType),\r\n+              }));\r\n+            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+              {serviceOptions.map(s => (\r\n+                <option key={s.title} value={s.title}>{s.title}</option>\r\n+              ))}\r\n+            </select>\r\n+            {/* Car type dropdown */}\r\n+            <select required value={newBooking.carType} onChange={e => {\r\n+              const carType = e.target.value;\r\n+              setNewBooking(nb => ({\r\n+                ...nb,\r\n+                carType,\r\n+                amount: overrideAmount ? nb.amount : calculatePrice(nb.service, nb.addOns, carType),\r\n+              }));\r\n+            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+              {carTypeOptions.map(c => (\r\n+                <option key={c.label} value={c.label}>{c.label}</option>\r\n+              ))}\r\n+            </select>\r\n+            {/* Add-ons */}\r\n+            <div>\r\n+              <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n+              <div className=\"flex flex-wrap gap-3 mb-2\">\r\n+                {(() => {\r\n+                  let validAddOns = [];\r\n+                  if (newBooking.service === \"Premium Exterior Wash\") {\r\n+                    validAddOns = addOnOptions.filter(opt => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(opt.label));\r\n+                  } else if (newBooking.service === \"Complete Interior Detail\") {\r\n+                    validAddOns = addOnOptions.filter(opt => opt.label === \"Pet Hair Removal\");\r\n+                  } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n+                    validAddOns = addOnOptions;\r\n+                  }\r\n+                  return validAddOns.map(opt => (\r\n+                    <button\r\n+                      key={opt.label}\r\n+                      type=\"button\"\r\n+                      onClick={() => {\r\n+                        setNewBooking(nb => {\r\n+                          const exists = nb.addOns.find(a => a.label === opt.label);\r\n+                          const updated = exists\r\n+                            ? nb.addOns.filter(a => a.label !== opt.label)\r\n+                            : [...nb.addOns, opt];\r\n+                          return {\r\n+                            ...nb,\r\n+                            addOns: updated,\r\n+                            amount: overrideAmount ? nb.amount : calculatePrice(nb.service, updated, nb.carType),\r\n+                          };\r\n+                        });\r\n+                      }}\r\n+                      className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n+                    >\r\n+                      {opt.label}\r\n+                    </button>\r\n+                  ));\r\n+                })()}\r\n+              </div>\r\n+              {/* Combo discount message */}\r\n+              {(() => {\r\n+                let validAddOns = [];\r\n+                if (newBooking.service === \"Premium Exterior Wash\") {\r\n+                  validAddOns = newBooking.addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n+                } else if (newBooking.service === \"Complete Interior Detail\") {\r\n+                  validAddOns = newBooking.addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n+                } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n+                  validAddOns = newBooking.addOns;\r\n+                }\r\n+                return validAddOns.find(a => a.label === \"Clay Bar\") && validAddOns.find(a => a.label === \"Iron Removal\") ? (\r\n+                  <div className=\"text-xs text-blue-600 mt-2 font-semibold\">Combo discount applied (-$5)</div>\r\n+                ) : null;\r\n+              })()}\r\n+            </div>\r\n+            {/* Date */}\r\n+            <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Time (enabled after selecting date) */}\r\n+            <input\r\n+              type=\"time\"\r\n+              required\r\n+              disabled={!newBooking.date}\r\n+              value={newBooking.time}\r\n+              onChange={e => setNewBooking({ ...newBooking, time: e.target.value })}\r\n+              className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800 disabled:bg-gray-100\"\r\n+            />\r\n+            {/* Amount override */}\r\n+            <div className=\"space-y-2\">\r\n+              <label className=\"flex items-center gap-2 text-sm text-gray-700\">\r\n+                <input type=\"checkbox\" checked={overrideAmount} onChange={e => setOverrideAmount(e.target.checked)} />\r\n+                Enter custom amount\r\n+              </label>\r\n+              <input\r\n+                type=\"number\"\r\n+                required\r\n+                placeholder=\"Amount\"\r\n+                value={newBooking.amount}\r\n+                onChange={e => setNewBooking({ ...newBooking, amount: Number(e.target.value || 0) })}\r\n+                className={`w-full px-4 py-3 rounded-lg border ${overrideAmount ? 'border-blue-500 bg-white' : 'border-blue-200 bg-gray-100'} text-gray-800`}\r\n+                readOnly={!overrideAmount}\r\n+                min={0}\r\n+              />\r\n+              {!overrideAmount && (\r\n+                <div className=\"text-xs text-gray-500\">Amount is auto-calculated from service, car type and add-ons.</div>\r\n+              )}\r\n+            </div>\r\n+            {/* Phone (numbers only) */}\r\n+            <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n+              const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n+              setNewBooking({ ...newBooking, phone: val });\r\n+            }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Email */}\r\n+            <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Location autocomplete (Google Places API) */}\r\n+            <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n+              const val = e.target.value;\r\n+              setNewBooking({ ...newBooking, location: val });\r\n+              if (typeof window !== 'undefined' && val.length > 2) {\r\n+                try {\r\n+                  const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n+                  const data = await resp.json();\r\n+                  setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n+                } catch {}\r\n+              } else {\r\n+                setLocationSuggestions([]);\r\n+              }\r\n+            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n+            {/* Location suggestions dropdown */}\r\n+            {locationSuggestions.length > 0 && (\r\n+              <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n+                {locationSuggestions.map((sug, i) => (\r\n+                  <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n+                    setNewBooking(nb => ({ ...nb, location: sug }));\r\n+                    setLocationSuggestions([]);\r\n+                  }}>{sug}</div>\r\n+                ))}\r\n+              </div>\r\n+            )}\r\n+            {/* Status dropdown */}\r\n+            <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+              <option value=\"pending\">Pending</option>\r\n+              <option value=\"complete\">Complete</option>\r\n+            </select>\r\n+            <div className=\"flex gap-4 mt-4 pb-4\">\r\n+              <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\" disabled={isSubmitting}>\r\n+                {isSubmitting ? (editBooking ? 'Saving...' : 'Adding...') : (editBooking ? 'Edit' : 'Add')}\r\n+              </button>\r\n+              <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={onClose} disabled={isSubmitting}>Cancel</button>\r\n+            </div>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1760677447460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,19 +95,47 @@\n \r\n   const handleSubmit = async (e) => {\r\n     e.preventDefault();\r\n     setIsSubmitting(true);\r\n+    // Respect overrideAmount: if enabled, use user-entered amount; else auto-calc\r\n+    const computedAmount = overrideAmount\r\n+      ? Number(newBooking.amount || 0)\r\n+      : calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType);\r\n+    // Fill empty fields with \"N/A\" before saving\r\n     const payload = {\r\n       ...newBooking,\r\n-      amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n+      name: newBooking.name.trim() || \"N/A\",\r\n+      carName: newBooking.carName.trim() || \"N/A\",\r\n+      phone: newBooking.phone.trim() || \"N/A\",\r\n+      email: newBooking.email.trim() || \"N/A\",\r\n+      location: newBooking.location.trim() || \"N/A\",\r\n+      date: newBooking.date || \"N/A\",\r\n+      time: newBooking.time || \"N/A\",\r\n+      amount: computedAmount,\r\n     };\r\n     setSubmitStatus(null);\r\n     setSubmitMsg(\"\");\r\n     try {\r\n       if (editBooking && onEdit) {\r\n         await onEdit(payload);\r\n         setSubmitStatus(\"success\");\r\n         setSubmitMsg(\"Booking updated!\");\r\n+        // Reset form state after successful edit; parent will close modal\r\n+        setOverrideAmount(false);\r\n+        setNewBooking({\r\n+          name: \"\",\r\n+          carName: \"\",\r\n+          service: serviceOptions[0].title,\r\n+          date: \"\",\r\n+          time: \"\",\r\n+          amount: serviceOptions[0].basePrice,\r\n+          status: \"pending\",\r\n+          phone: \"\",\r\n+          email: \"\",\r\n+          location: \"\",\r\n+          addOns: [],\r\n+          carType: carTypeOptions[0].label,\r\n+        });\r\n       } else {\r\n         const resp = await fetch(\"/api/admin-add-booking\", {\r\n           method: \"POST\",\r\n           headers: { \"Content-Type\": \"application/json\" },\r\n@@ -116,33 +144,31 @@\n         const data = await resp.json();\r\n         if (resp.ok && data.success) {\r\n           setSubmitStatus(\"success\");\r\n           setSubmitMsg(\"Booking saved to database!\");\r\n+          // Delegate closing and refetching to parent handler\r\n           onAdd?.(payload);\r\n+          // Reset form state after successful add\r\n+          setOverrideAmount(false);\r\n+          setNewBooking({\r\n+            name: \"\",\r\n+            carName: \"\",\r\n+            service: serviceOptions[0].title,\r\n+            date: \"\",\r\n+            time: \"\",\r\n+            amount: serviceOptions[0].basePrice,\r\n+            status: \"pending\",\r\n+            phone: \"\",\r\n+            email: \"\",\r\n+            location: \"\",\r\n+            addOns: [],\r\n+            carType: carTypeOptions[0].label,\r\n+          });\r\n         } else {\r\n           setSubmitStatus(\"error\");\r\n           setSubmitMsg(data.error || \"Failed to save booking\");\r\n         }\r\n       }\r\n-      setTimeout(() => {\r\n-        setSubmitStatus(null);\r\n-        setSubmitMsg(\"\");\r\n-        setNewBooking({\r\n-          name: \"\",\r\n-          carName: \"\",\r\n-          service: serviceOptions[0].title,\r\n-          date: \"\",\r\n-          time: \"\",\r\n-          amount: serviceOptions[0].basePrice,\r\n-          status: \"pending\",\r\n-          phone: \"\",\r\n-          email: \"\",\r\n-          location: \"\",\r\n-          addOns: [],\r\n-          carType: carTypeOptions[0].label,\r\n-        });\r\n-        onClose?.();\r\n-      }, 1200);\r\n     } catch (err) {\r\n       setSubmitStatus(\"error\");\r\n       setSubmitMsg(err.message || \"Failed to save booking\");\r\n     }\r\n@@ -171,11 +197,11 @@\n             <div className={`mb-2 text-center font-semibold ${submitStatus === 'success' ? 'text-green-600' : 'text-red-600'}`}>{submitMsg}</div>\r\n           )}\r\n           <form onSubmit={handleSubmit} className=\"space-y-5\">\r\n             {/* Name */}\r\n-            <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            <input type=\"text\" placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n             {/* Car Name */}\r\n-            <input type=\"text\" required placeholder=\"Car (e.g., Toyota Camry)\" value={newBooking.carName} onChange={e => setNewBooking({ ...newBooking, carName: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            <input type=\"text\" placeholder=\"Car (e.g., Toyota Camry)\" value={newBooking.carName} onChange={e => setNewBooking({ ...newBooking, carName: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n             {/* Service dropdown */}\r\n             <select required value={newBooking.service} onChange={e => {\r\n               const selectedService = e.target.value;\r\n               setNewBooking(nb => ({\r\n@@ -254,13 +280,12 @@\n                 ) : null;\r\n               })()}\r\n             </div>\r\n             {/* Date */}\r\n-            <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            <input type=\"date\" value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n             {/* Time (enabled after selecting date) */}\r\n             <input\r\n               type=\"time\"\r\n-              required\r\n               disabled={!newBooking.date}\r\n               value={newBooking.time}\r\n               onChange={e => setNewBooking({ ...newBooking, time: e.target.value })}\r\n               className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800 disabled:bg-gray-100\"\r\n@@ -272,9 +297,8 @@\n                 Enter custom amount\r\n               </label>\r\n               <input\r\n                 type=\"number\"\r\n-                required\r\n                 placeholder=\"Amount\"\r\n                 value={newBooking.amount}\r\n                 onChange={e => setNewBooking({ ...newBooking, amount: Number(e.target.value || 0) })}\r\n                 className={`w-full px-4 py-3 rounded-lg border ${overrideAmount ? 'border-blue-500 bg-white' : 'border-blue-200 bg-gray-100'} text-gray-800`}\r\n@@ -285,16 +309,16 @@\n                 <div className=\"text-xs text-gray-500\">Amount is auto-calculated from service, car type and add-ons.</div>\r\n               )}\r\n             </div>\r\n             {/* Phone (numbers only) */}\r\n-            <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n+            <input type=\"text\" placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n               const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n               setNewBooking({ ...newBooking, phone: val });\r\n             }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n             {/* Email */}\r\n-            <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            <input type=\"email\" placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n             {/* Location autocomplete (Google Places API) */}\r\n-            <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n+            <input type=\"text\" placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n               const val = e.target.value;\r\n               setNewBooking({ ...newBooking, location: val });\r\n               if (typeof window !== 'undefined' && val.length > 2) {\r\n                 try {\r\n@@ -333,1975 +357,4 @@\n       </div>\r\n     </div>\r\n   );\r\n }\r\n-import { useState, useEffect } from \"react\";\r\n-\r\n-export default function AdminAddBooking({ open, onClose, onAdd, editBooking, onEdit }) {\r\n-  const [submitStatus, setSubmitStatus] = useState(null); // null | 'success' | 'error'\r\n-  const [submitMsg, setSubmitMsg] = useState(\"\");\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const serviceOptions = [\r\n-    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: true },\r\n-    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n-    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n-  ];\r\n-  const addOnOptions = [\r\n-    { label: \"Pet Hair Removal\", price: 20 },\r\n-    { label: \"Clay Bar\", price: 20 },\r\n-    { label: \"Iron Removal\", price: 25 },\r\n-    { label: \"Ceramic Sealant\", price: 10 },\r\n-  ];\r\n-  const carTypeOptions = [\r\n-    { label: \"Sedan\", price: 0 },\r\n-    { label: \"SUV\", price: 10 },\r\n-    { label: \"Truck\", price: 20 },\r\n-  ];\r\n-  const [newBooking, setNewBooking] = useState({\r\n-    name: \"\",\r\n-    carName: \"\",\r\n-    service: serviceOptions[0].title,\r\n-    date: \"\",\r\n-    time: \"\",\r\n-    amount: serviceOptions[0].basePrice,\r\n-    status: \"pending\",\r\n-    phone: \"\",\r\n-    email: \"\",\r\n-    location: \"\",\r\n-    addOns: [],\r\n-    carType: carTypeOptions[0].label,\r\n-  });\r\n-\r\n-  // Prefill form in edit mode\r\n-  useEffect(() => {\r\n-    if (editBooking && open) {\r\n-      setNewBooking({\r\n-        ...editBooking,\r\n-        amount: editBooking.amount || serviceOptions.find(s => s.title === editBooking.service)?.basePrice || serviceOptions[0].basePrice,\r\n-      });\r\n-    } else if (open && !editBooking) {\r\n-      setNewBooking({\r\n-        name: \"\",\r\n-        carName: \"\",\r\n-        service: serviceOptions[0].title,\r\n-        date: \"\",\r\n-        time: \"\",\r\n-        amount: serviceOptions[0].basePrice,\r\n-        status: \"pending\",\r\n-        phone: \"\",\r\n-        email: \"\",\r\n-        location: \"\",\r\n-        addOns: [],\r\n-        carType: carTypeOptions[0].label,\r\n-      });\r\n-    }\r\n-  }, [editBooking, open]);\r\n-  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n-  if (!open) return null;\r\n-  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n-    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n-    let base = service ? service.basePrice : 0;\r\n-    if (serviceTitle === \"Complete Interior Detail\") {\r\n-      if (carTypeLabel === \"SUV\") base = 130;\r\n-      else if (carTypeLabel === \"Truck\") base = 140;\r\n-      else base = 110;\r\n-    } else {\r\n-      const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n-      if (carType) base += carType.price;\r\n-    }\r\n-\r\n-    let addOnTotal = 0;\r\n-    if (service && service.hasAddOns && addOns.length) {\r\n-      let filteredAddOns = [];\r\n-      if (serviceTitle === \"Premium Exterior Wash\") {\r\n-        filteredAddOns = addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n-      } else if (serviceTitle === \"Complete Interior Detail\") {\r\n-        filteredAddOns = addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n-      } else if (serviceTitle === \"Ultimate Full Detail\") {\r\n-        filteredAddOns = addOns;\r\n-      }\r\n-      addOnTotal = filteredAddOns.reduce((sum, a) => sum + a.price, 0);\r\n-      const clay = filteredAddOns.find(a => a.label === \"Clay Bar\");\r\n-      const iron = filteredAddOns.find(a => a.label === \"Iron Removal\");\r\n-      if (clay && iron) addOnTotal -= 5;\r\n-    }\r\n-\r\n-    return base + addOnTotal;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-    setIsSubmitting(true);\r\n-    const payload = {\r\n-      ...newBooking,\r\n-      amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n-    };\r\n-    setSubmitStatus(null);\r\n-    setSubmitMsg(\"\");\r\n-    try {\r\n-      if (editBooking && onEdit) {\r\n-        await onEdit(payload);\r\n-        setSubmitStatus(\"success\");\r\n-        setSubmitMsg(\"Booking updated!\");\r\n-      } else {\r\n-        const resp = await fetch(\"/api/admin-add-booking\", {\r\n-          method: \"POST\",\r\n-          headers: { \"Content-Type\": \"application/json\" },\r\n-          body: JSON.stringify(payload),\r\n-        });\r\n-        const data = await resp.json();\r\n-        if (resp.ok && data.success) {\r\n-          setSubmitStatus(\"success\");\r\n-          setSubmitMsg(\"Booking saved to database!\");\r\n-          onAdd?.(payload);\r\n-        } else {\r\n-          setSubmitStatus(\"error\");\r\n-          setSubmitMsg(data.error || \"Failed to save booking\");\r\n-        }\r\n-      }\r\n-      setTimeout(() => {\r\n-        setSubmitStatus(null);\r\n-        setSubmitMsg(\"\");\r\n-        setNewBooking({\r\n-          name: \"\",\r\n-          carName: \"\",\r\n-          service: serviceOptions[0].title,\r\n-          date: \"\",\r\n-          time: \"\",\r\n-          amount: serviceOptions[0].basePrice,\r\n-          status: \"pending\",\r\n-          phone: \"\",\r\n-          email: \"\",\r\n-          location: \"\",\r\n-          addOns: [],\r\n-          carType: carTypeOptions[0].label,\r\n-        });\r\n-        onClose?.();\r\n-      }, 1200);\r\n-    } catch (err) {\r\n-      setSubmitStatus(\"error\");\r\n-      setSubmitMsg(err.message || \"Failed to save booking\");\r\n-    }\r\n-    setIsSubmitting(false);\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-      <div\r\n-        className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n-        style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n-      >\r\n-        {/* Close (X) button */}\r\n-        <button\r\n-          type=\"button\"\r\n-          aria-label=\"Close\"\r\n-          onClick={onClose}\r\n-          className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n-          style={{ background: 'none', border: 'none' }}\r\n-        >\r\n-          &times;\r\n-        </button>\r\n-        <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n-        <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n-          {submitStatus && (\r\n-            <div className={`mb-2 text-center font-semibold ${submitStatus === 'success' ? 'text-green-600' : 'text-red-600'}`}>{submitMsg}</div>\r\n-          )}\r\n-          <form onSubmit={handleSubmit} className=\"space-y-5\">\r\n-            {/* Name */}\r\n-            <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Car Name */}\r\n-            <input type=\"text\" required placeholder=\"Car (e.g., Toyota Camry)\" value={newBooking.carName} onChange={e => setNewBooking({ ...newBooking, carName: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Service dropdown */}\r\n-            <select required value={newBooking.service} onChange={e => {\r\n-              const selectedService = e.target.value;\r\n-              setNewBooking(nb => ({\r\n-                ...nb,\r\n-                service: selectedService,\r\n-                addOns: [],\r\n-                amount: calculatePrice(selectedService, [], nb.carType),\r\n-              }));\r\n-            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-              {serviceOptions.map(s => (\r\n-                <option key={s.title} value={s.title}>{s.title}</option>\r\n-              ))}\r\n-            </select>\r\n-            {/* Car type dropdown */}\r\n-            <select required value={newBooking.carType} onChange={e => {\r\n-              const carType = e.target.value;\r\n-              setNewBooking(nb => ({\r\n-                ...nb,\r\n-                carType,\r\n-                amount: calculatePrice(nb.service, nb.addOns, carType),\r\n-              }));\r\n-            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-              {carTypeOptions.map(c => (\r\n-                <option key={c.label} value={c.label}>{c.label}</option>\r\n-              ))}\r\n-            </select>\r\n-            {/* Add-ons */}\r\n-            <div>\r\n-              <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n-              <div className=\"flex flex-wrap gap-3 mb-2\">\r\n-                {(() => {\r\n-                  let validAddOns = [];\r\n-                  if (newBooking.service === \"Premium Exterior Wash\") {\r\n-                    validAddOns = addOnOptions.filter(opt => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(opt.label));\r\n-                  } else if (newBooking.service === \"Complete Interior Detail\") {\r\n-                    validAddOns = addOnOptions.filter(opt => opt.label === \"Pet Hair Removal\");\r\n-                  } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n-                    validAddOns = addOnOptions;\r\n-                  }\r\n-                  return validAddOns.map(opt => (\r\n-                    <button\r\n-                      key={opt.label}\r\n-                      type=\"button\"\r\n-                      onClick={() => {\r\n-                        setNewBooking(nb => {\r\n-                          const exists = nb.addOns.find(a => a.label === opt.label);\r\n-                          const updated = exists\r\n-                            ? nb.addOns.filter(a => a.label !== opt.label)\r\n-                            : [...nb.addOns, opt];\r\n-                          return {\r\n-                            ...nb,\r\n-                            addOns: updated,\r\n-                            amount: calculatePrice(nb.service, updated, nb.carType),\r\n-                          };\r\n-                        });\r\n-                      }}\r\n-                      className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n-                    >\r\n-                      {opt.label}\r\n-                    </button>\r\n-                  ));\r\n-                })()}\r\n-              </div>\r\n-              {/* Combo discount message */}\r\n-              {(() => {\r\n-                let validAddOns = [];\r\n-                if (newBooking.service === \"Premium Exterior Wash\") {\r\n-                  validAddOns = newBooking.addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n-                } else if (newBooking.service === \"Complete Interior Detail\") {\r\n-                  validAddOns = newBooking.addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n-                } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n-                  validAddOns = newBooking.addOns;\r\n-                }\r\n-                return validAddOns.find(a => a.label === \"Clay Bar\") && validAddOns.find(a => a.label === \"Iron Removal\") ? (\r\n-                  <div className=\"text-xs text-blue-600 mt-2 font-semibold\">Combo discount applied (-$5)</div>\r\n-                ) : null;\r\n-              })()}\r\n-            </div>\r\n-            {/* Date */}\r\n-            <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Time (enabled after selecting date) */}\r\n-            <input\r\n-              type=\"time\"\r\n-              required\r\n-              disabled={!newBooking.date}\r\n-              value={newBooking.time}\r\n-              onChange={e => setNewBooking({ ...newBooking, time: e.target.value })}\r\n-              className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800 disabled:bg-gray-100\"\r\n-            />\r\n-            {/* Amount (auto-calculated, read-only) */}\r\n-            <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n-            {/* Phone (numbers only) */}\r\n-            <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n-              const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n-              setNewBooking({ ...newBooking, phone: val });\r\n-            }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Email */}\r\n-            <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Location autocomplete (Google Places API) */}\r\n-            <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n-              const val = e.target.value;\r\n-              setNewBooking({ ...newBooking, location: val });\r\n-              if (typeof window !== 'undefined' && val.length > 2) {\r\n-                try {\r\n-                  const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n-                  const data = await resp.json();\r\n-                  setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n-                } catch {}\r\n-              } else {\r\n-                setLocationSuggestions([]);\r\n-              }\r\n-            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n-            {/* Location suggestions dropdown */}\r\n-            {locationSuggestions.length > 0 && (\r\n-              <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n-                {locationSuggestions.map((sug, i) => (\r\n-                  <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n-                    setNewBooking(nb => ({ ...nb, location: sug }));\r\n-                    setLocationSuggestions([]);\r\n-                  }}>{sug}</div>\r\n-                ))}\r\n-              </div>\r\n-            )}\r\n-            {/* Status dropdown */}\r\n-            <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-              <option value=\"pending\">Pending</option>\r\n-              <option value=\"complete\">Complete</option>\r\n-            </select>\r\n-            <div className=\"flex gap-4 mt-4 pb-4\">\r\n-              <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\" disabled={isSubmitting}>\r\n-                {isSubmitting ? (editBooking ? 'Saving...' : 'Adding...') : (editBooking ? 'Edit' : 'Add')}\r\n-              </button>\r\n-              <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={onClose} disabled={isSubmitting}>Cancel</button>\r\n-            </div>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import { useState } from \"react\";\r\n-\r\n-export default function AdminAddBooking({ open, onClose, onAdd }) {\r\n-  const [submitStatus, setSubmitStatus] = useState(null); // null | 'success' | 'error'\r\n-  const [submitMsg, setSubmitMsg] = useState(\"\");\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const serviceOptions = [\r\n-    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: true },\r\n-    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n-    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n-  ];\r\n-  const addOnOptions = [\r\n-    { label: \"Pet Hair Removal\", price: 20 },\r\n-    { label: \"Clay Bar\", price: 20 },\r\n-    { label: \"Iron Removal\", price: 25 },\r\n-    { label: \"Ceramic Sealant\", price: 10 },\r\n-  ];\r\n-  const carTypeOptions = [\r\n-    { label: \"Sedan\", price: 0 },\r\n-    { label: \"SUV\", price: 10 },\r\n-    { label: \"Truck\", price: 20 },\r\n-  ];\r\n-  const [newBooking, setNewBooking] = useState({\r\n-    name: \"\",\r\n-    carName: \"\",\r\n-    service: serviceOptions[0].title,\r\n-    date: \"\",\r\n-    time: \"\",\r\n-    amount: serviceOptions[0].basePrice,\r\n-    status: \"pending\",\r\n-    phone: \"\",\r\n-    email: \"\",\r\n-    location: \"\",\r\n-    addOns: [],\r\n-    carType: carTypeOptions[0].label,\r\n-  });\r\n-  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n-  if (!open) return null;\r\n-  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n-    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n-    let base = service ? service.basePrice : 0;\r\n-    if (serviceTitle === \"Complete Interior Detail\") {\r\n-      if (carTypeLabel === \"SUV\") base = 130;\r\n-      else if (carTypeLabel === \"Truck\") base = 140;\r\n-      else base = 110;\r\n-    } else {\r\n-      const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n-      if (carType) base += carType.price;\r\n-    }\r\n-\r\n-    let addOnTotal = 0;\r\n-    if (service && service.hasAddOns && addOns.length) {\r\n-      let filteredAddOns = [];\r\n-      if (serviceTitle === \"Premium Exterior Wash\") {\r\n-        filteredAddOns = addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n-      } else if (serviceTitle === \"Complete Interior Detail\") {\r\n-        filteredAddOns = addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n-      } else if (serviceTitle === \"Ultimate Full Detail\") {\r\n-        filteredAddOns = addOns;\r\n-      }\r\n-      addOnTotal = filteredAddOns.reduce((sum, a) => sum + a.price, 0);\r\n-      const clay = filteredAddOns.find(a => a.label === \"Clay Bar\");\r\n-      const iron = filteredAddOns.find(a => a.label === \"Iron Removal\");\r\n-      if (clay && iron) addOnTotal -= 5;\r\n-    }\r\n-\r\n-    return base + addOnTotal;\r\n-  };\r\n-\r\n-  const handleAddBooking = async (e) => {\r\n-    e.preventDefault();\r\n-    setIsSubmitting(true);\r\n-    const payload = {\r\n-      ...newBooking,\r\n-      amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n-    };\r\n-    setSubmitStatus(null);\r\n-    setSubmitMsg(\"\");\r\n-    try {\r\n-      const resp = await fetch(\"/api/admin-add-booking\", {\r\n-        method: \"POST\",\r\n-        headers: { \"Content-Type\": \"application/json\" },\r\n-        body: JSON.stringify(payload),\r\n-      });\r\n-      const data = await resp.json();\r\n-      if (resp.ok && data.success) {\r\n-        setSubmitStatus(\"success\");\r\n-        setSubmitMsg(\"Booking saved to database!\");\r\n-        onAdd?.(payload);\r\n-        setTimeout(() => {\r\n-          setSubmitStatus(null);\r\n-          setSubmitMsg(\"\");\r\n-          setNewBooking({\r\n-            name: \"\",\r\n-            carName: \"\",\r\n-            service: serviceOptions[0].title,\r\n-            date: \"\",\r\n-            time: \"\",\r\n-            amount: serviceOptions[0].basePrice,\r\n-            status: \"pending\",\r\n-            phone: \"\",\r\n-            email: \"\",\r\n-            location: \"\",\r\n-            addOns: [],\r\n-            carType: carTypeOptions[0].label,\r\n-          });\r\n-          onClose?.();\r\n-        }, 1200);\r\n-      } else {\r\n-        setSubmitStatus(\"error\");\r\n-        setSubmitMsg(data.error || \"Failed to save booking\");\r\n-      }\r\n-    } catch (err) {\r\n-      setSubmitStatus(\"error\");\r\n-      setSubmitMsg(err.message || \"Failed to save booking\");\r\n-    }\r\n-    setIsSubmitting(false);\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-      <div\r\n-        className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n-        style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n-      >\r\n-        {/* Close (X) button */}\r\n-        <button\r\n-          type=\"button\"\r\n-          aria-label=\"Close\"\r\n-          onClick={onClose}\r\n-          className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n-          style={{ background: 'none', border: 'none' }}\r\n-        >\r\n-          &times;\r\n-        </button>\r\n-        <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n-        <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n-          {submitStatus && (\r\n-            <div className={`mb-2 text-center font-semibold ${submitStatus === 'success' ? 'text-green-600' : 'text-red-600'}`}>{submitMsg}</div>\r\n-          )}\r\n-          <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n-            {/* Name */}\r\n-            <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Car Name */}\r\n-            <input type=\"text\" required placeholder=\"Car (e.g., Toyota Camry)\" value={newBooking.carName} onChange={e => setNewBooking({ ...newBooking, carName: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Service dropdown */}\r\n-            <select required value={newBooking.service} onChange={e => {\r\n-              const selectedService = e.target.value;\r\n-              setNewBooking(nb => ({\r\n-                ...nb,\r\n-                service: selectedService,\r\n-                addOns: [],\r\n-                amount: calculatePrice(selectedService, [], nb.carType),\r\n-              }));\r\n-            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-              {serviceOptions.map(s => (\r\n-                <option key={s.title} value={s.title}>{s.title}</option>\r\n-              ))}\r\n-            </select>\r\n-            {/* Car type dropdown */}\r\n-            <select required value={newBooking.carType} onChange={e => {\r\n-              const carType = e.target.value;\r\n-              setNewBooking(nb => ({\r\n-                ...nb,\r\n-                carType,\r\n-                amount: calculatePrice(nb.service, nb.addOns, carType),\r\n-              }));\r\n-            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-              {carTypeOptions.map(c => (\r\n-                <option key={c.label} value={c.label}>{c.label}</option>\r\n-              ))}\r\n-            </select>\r\n-            {/* Add-ons */}\r\n-            <div>\r\n-              <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n-              <div className=\"flex flex-wrap gap-3 mb-2\">\r\n-                {(() => {\r\n-                  let validAddOns = [];\r\n-                  if (newBooking.service === \"Premium Exterior Wash\") {\r\n-                    validAddOns = addOnOptions.filter(opt => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(opt.label));\r\n-                  } else if (newBooking.service === \"Complete Interior Detail\") {\r\n-                    validAddOns = addOnOptions.filter(opt => opt.label === \"Pet Hair Removal\");\r\n-                  } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n-                    validAddOns = addOnOptions;\r\n-                  }\r\n-                  return validAddOns.map(opt => (\r\n-                    <button\r\n-                      key={opt.label}\r\n-                      type=\"button\"\r\n-                      onClick={() => {\r\n-                        setNewBooking(nb => {\r\n-                          const exists = nb.addOns.find(a => a.label === opt.label);\r\n-                          const updated = exists\r\n-                            ? nb.addOns.filter(a => a.label !== opt.label)\r\n-                            : [...nb.addOns, opt];\r\n-                          return {\r\n-                            ...nb,\r\n-                            addOns: updated,\r\n-                            amount: calculatePrice(nb.service, updated, nb.carType),\r\n-                          };\r\n-                        });\r\n-                      }}\r\n-                      className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n-                    >\r\n-                      {opt.label}\r\n-                    </button>\r\n-                  ));\r\n-                })()}\r\n-              </div>\r\n-              {/* Combo discount message */}\r\n-              {(() => {\r\n-                let validAddOns = [];\r\n-                if (newBooking.service === \"Premium Exterior Wash\") {\r\n-                  validAddOns = newBooking.addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n-                } else if (newBooking.service === \"Complete Interior Detail\") {\r\n-                  validAddOns = newBooking.addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n-                } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n-                  validAddOns = newBooking.addOns;\r\n-                }\r\n-                return validAddOns.find(a => a.label === \"Clay Bar\") && validAddOns.find(a => a.label === \"Iron Removal\") ? (\r\n-                  <div className=\"text-xs text-blue-600 mt-2 font-semibold\">Combo discount applied (-$5)</div>\r\n-                ) : null;\r\n-              })()}\r\n-            </div>\r\n-            {/* Date */}\r\n-            <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Time (enabled after selecting date) */}\r\n-            <input\r\n-              type=\"time\"\r\n-              required\r\n-              disabled={!newBooking.date}\r\n-              value={newBooking.time}\r\n-              onChange={e => setNewBooking({ ...newBooking, time: e.target.value })}\r\n-              className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800 disabled:bg-gray-100\"\r\n-            />\r\n-            {/* Amount (auto-calculated, read-only) */}\r\n-            <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n-            {/* Phone (numbers only) */}\r\n-            <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n-              const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n-              setNewBooking({ ...newBooking, phone: val });\r\n-            }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Email */}\r\n-            <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Location autocomplete (Google Places API) */}\r\n-            <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n-              const val = e.target.value;\r\n-              setNewBooking({ ...newBooking, location: val });\r\n-              if (typeof window !== 'undefined' && val.length > 2) {\r\n-                try {\r\n-                  const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n-                  const data = await resp.json();\r\n-                  setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n-                } catch {}\r\n-              } else {\r\n-                setLocationSuggestions([]);\r\n-              }\r\n-            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n-            {/* Location suggestions dropdown */}\r\n-            {locationSuggestions.length > 0 && (\r\n-              <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n-                {locationSuggestions.map((sug, i) => (\r\n-                  <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n-                    setNewBooking(nb => ({ ...nb, location: sug }));\r\n-                    setLocationSuggestions([]);\r\n-                  }}>{sug}</div>\r\n-                ))}\r\n-              </div>\r\n-            )}\r\n-            {/* Status dropdown */}\r\n-            <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-              <option value=\"pending\">Pending</option>\r\n-              <option value=\"complete\">Complete</option>\r\n-            </select>\r\n-            <div className=\"flex gap-4 mt-4 pb-4\">\r\n-              <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\" disabled={isSubmitting}>\r\n-                {isSubmitting ? 'Adding...' : 'Add'}\r\n-              </button>\r\n-              <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={onClose} disabled={isSubmitting}>Cancel</button>\r\n-            </div>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import { useState } from \"react\";\r\n-\r\n-export default function AdminAddBooking({ open, onClose, onAdd }) {\r\n-  const [submitStatus, setSubmitStatus] = useState(null); // null | 'success' | 'error'\r\n-  const [submitMsg, setSubmitMsg] = useState(\"\");\r\n-  const serviceOptions = [\r\n-    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: true },\r\n-    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n-    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n-  ];\r\n-  const addOnOptions = [\r\n-    { label: \"Pet Hair Removal\", price: 20 },\r\n-    { label: \"Clay Bar\", price: 20 },\r\n-    { label: \"Iron Removal\", price: 25 },\r\n-    { label: \"Ceramic Sealant\", price: 10 },\r\n-  ];\r\n-  const carTypeOptions = [\r\n-    { label: \"Sedan\", price: 0 },\r\n-    { label: \"SUV\", price: 10 },\r\n-    { label: \"Truck\", price: 20 },\r\n-  ];\r\n-  const [newBooking, setNewBooking] = useState({\r\n-    name: \"\",\r\n-    carName: \"\",\r\n-    service: serviceOptions[0].title,\r\n-    date: \"\",\r\n-    time: \"\",\r\n-    amount: serviceOptions[0].basePrice,\r\n-    status: \"pending\",\r\n-    phone: \"\",\r\n-    email: \"\",\r\n-    location: \"\",\r\n-    addOns: [],\r\n-    carType: carTypeOptions[0].label,\r\n-  });\r\n-  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n-  if (!open) return null;\r\n-  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n-    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n-    let base = service ? service.basePrice : 0;\r\n-    if (serviceTitle === \"Complete Interior Detail\") {\r\n-      if (carTypeLabel === \"SUV\") base = 130;\r\n-      else if (carTypeLabel === \"Truck\") base = 140;\r\n-      else base = 110;\r\n-    } else {\r\n-      const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n-      if (carType) base += carType.price;\r\n-    }\r\n-\r\n-    let addOnTotal = 0;\r\n-    if (service && service.hasAddOns && addOns.length) {\r\n-      let filteredAddOns = [];\r\n-      if (serviceTitle === \"Premium Exterior Wash\") {\r\n-        filteredAddOns = addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n-      } else if (serviceTitle === \"Complete Interior Detail\") {\r\n-        filteredAddOns = addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n-      } else if (serviceTitle === \"Ultimate Full Detail\") {\r\n-        filteredAddOns = addOns;\r\n-      }\r\n-      addOnTotal = filteredAddOns.reduce((sum, a) => sum + a.price, 0);\r\n-      const clay = filteredAddOns.find(a => a.label === \"Clay Bar\");\r\n-      const iron = filteredAddOns.find(a => a.label === \"Iron Removal\");\r\n-      if (clay && iron) addOnTotal -= 5;\r\n-    }\r\n-\r\n-    return base + addOnTotal;\r\n-  };\r\n-\r\n-  const handleAddBooking = async (e) => {\r\n-    e.preventDefault();\r\n-    const payload = {\r\n-      ...newBooking,\r\n-      amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n-    };\r\n-    // Send to API\r\n-    setSubmitStatus(null);\r\n-    setSubmitMsg(\"\");\r\n-    try {\r\n-      const resp = await fetch(\"/api/admin-add-booking\", {\r\n-        method: \"POST\",\r\n-        headers: { \"Content-Type\": \"application/json\" },\r\n-        body: JSON.stringify(payload),\r\n-      });\r\n-      const data = await resp.json();\r\n-      if (resp.ok && data.success) {\r\n-        setSubmitStatus(\"success\");\r\n-        setSubmitMsg(\"Booking saved to database!\");\r\n-        onAdd?.(payload);\r\n-        setTimeout(() => {\r\n-          setSubmitStatus(null);\r\n-          setSubmitMsg(\"\");\r\n-          setNewBooking({\r\n-            name: \"\",\r\n-            carName: \"\",\r\n-            service: serviceOptions[0].title,\r\n-            date: \"\",\r\n-            time: \"\",\r\n-            amount: serviceOptions[0].basePrice,\r\n-            status: \"pending\",\r\n-            phone: \"\",\r\n-            email: \"\",\r\n-            location: \"\",\r\n-            addOns: [],\r\n-            carType: carTypeOptions[0].label,\r\n-          });\r\n-          onClose?.();\r\n-        }, 1200);\r\n-      } else {\r\n-        setSubmitStatus(\"error\");\r\n-        setSubmitMsg(data.error || \"Failed to save booking\");\r\n-      }\r\n-    } catch (err) {\r\n-      setSubmitStatus(\"error\");\r\n-      setSubmitMsg(err.message || \"Failed to save booking\");\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-      <div\r\n-        className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n-        style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n-      >\r\n-        {/* Close (X) button */}\r\n-        <button\r\n-          type=\"button\"\r\n-          aria-label=\"Close\"\r\n-          onClick={onClose}\r\n-          className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n-          style={{ background: 'none', border: 'none' }}\r\n-        >\r\n-          &times;\r\n-        </button>\r\n-        <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n-        <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n-          {submitStatus && (\r\n-            <div className={`mb-2 text-center font-semibold ${submitStatus === 'success' ? 'text-green-600' : 'text-red-600'}`}>{submitMsg}</div>\r\n-          )}\r\n-          <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n-            {/* Name */}\r\n-            <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Car Name */}\r\n-            <input type=\"text\" required placeholder=\"Car (e.g., Toyota Camry)\" value={newBooking.carName} onChange={e => setNewBooking({ ...newBooking, carName: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Service dropdown */}\r\n-            <select required value={newBooking.service} onChange={e => {\r\n-              const selectedService = e.target.value;\r\n-              setNewBooking(nb => ({\r\n-                ...nb,\r\n-                service: selectedService,\r\n-                addOns: [],\r\n-                amount: calculatePrice(selectedService, [], nb.carType),\r\n-              }));\r\n-            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-              {serviceOptions.map(s => (\r\n-                <option key={s.title} value={s.title}>{s.title}</option>\r\n-              ))}\r\n-            </select>\r\n-            {/* Car type dropdown */}\r\n-            <select required value={newBooking.carType} onChange={e => {\r\n-              const carType = e.target.value;\r\n-              setNewBooking(nb => ({\r\n-                ...nb,\r\n-                carType,\r\n-                amount: calculatePrice(nb.service, nb.addOns, carType),\r\n-              }));\r\n-            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-              {carTypeOptions.map(c => (\r\n-                <option key={c.label} value={c.label}>{c.label}</option>\r\n-              ))}\r\n-            </select>\r\n-            {/* Add-ons */}\r\n-            <div>\r\n-              <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n-              <div className=\"flex flex-wrap gap-3 mb-2\">\r\n-                {(() => {\r\n-                  let validAddOns = [];\r\n-                  if (newBooking.service === \"Premium Exterior Wash\") {\r\n-                    validAddOns = addOnOptions.filter(opt => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(opt.label));\r\n-                  } else if (newBooking.service === \"Complete Interior Detail\") {\r\n-                    validAddOns = addOnOptions.filter(opt => opt.label === \"Pet Hair Removal\");\r\n-                  } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n-                    validAddOns = addOnOptions;\r\n-                  }\r\n-                  return validAddOns.map(opt => (\r\n-                    <button\r\n-                      key={opt.label}\r\n-                      type=\"button\"\r\n-                      onClick={() => {\r\n-                        setNewBooking(nb => {\r\n-                          const exists = nb.addOns.find(a => a.label === opt.label);\r\n-                          const updated = exists\r\n-                            ? nb.addOns.filter(a => a.label !== opt.label)\r\n-                            : [...nb.addOns, opt];\r\n-                          return {\r\n-                            ...nb,\r\n-                            addOns: updated,\r\n-                            amount: calculatePrice(nb.service, updated, nb.carType),\r\n-                          };\r\n-                        });\r\n-                      }}\r\n-                      className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n-                    >\r\n-                      {opt.label}\r\n-                    </button>\r\n-                  ));\r\n-                })()}\r\n-              </div>\r\n-              {/* Combo discount message */}\r\n-              {(() => {\r\n-                let validAddOns = [];\r\n-                if (newBooking.service === \"Premium Exterior Wash\") {\r\n-                  validAddOns = newBooking.addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n-                } else if (newBooking.service === \"Complete Interior Detail\") {\r\n-                  validAddOns = newBooking.addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n-                } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n-                  validAddOns = newBooking.addOns;\r\n-                }\r\n-                return validAddOns.find(a => a.label === \"Clay Bar\") && validAddOns.find(a => a.label === \"Iron Removal\") ? (\r\n-                  <div className=\"text-xs text-blue-600 mt-2 font-semibold\">Combo discount applied (-$5)</div>\r\n-                ) : null;\r\n-              })()}\r\n-            </div>\r\n-            {/* Date */}\r\n-            <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Time (enabled after selecting date) */}\r\n-            <input\r\n-              type=\"time\"\r\n-              required\r\n-              disabled={!newBooking.date}\r\n-              value={newBooking.time}\r\n-              onChange={e => setNewBooking({ ...newBooking, time: e.target.value })}\r\n-              className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800 disabled:bg-gray-100\"\r\n-            />\r\n-            {/* Amount (auto-calculated, read-only) */}\r\n-            <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n-            {/* Phone (numbers only) */}\r\n-            <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n-              const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n-              setNewBooking({ ...newBooking, phone: val });\r\n-            }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Email */}\r\n-            <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Location autocomplete (Google Places API) */}\r\n-            <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n-              const val = e.target.value;\r\n-              setNewBooking({ ...newBooking, location: val });\r\n-              if (typeof window !== 'undefined' && val.length > 2) {\r\n-                try {\r\n-                  const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n-                  const data = await resp.json();\r\n-                  setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n-                } catch {}\r\n-              } else {\r\n-                setLocationSuggestions([]);\r\n-              }\r\n-            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n-            {/* Location suggestions dropdown */}\r\n-            {locationSuggestions.length > 0 && (\r\n-              <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n-                {locationSuggestions.map((sug, i) => (\r\n-                  <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n-                    setNewBooking(nb => ({ ...nb, location: sug }));\r\n-                    setLocationSuggestions([]);\r\n-                  }}>{sug}</div>\r\n-                ))}\r\n-              </div>\r\n-            )}\r\n-            {/* Status dropdown */}\r\n-            <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-              <option value=\"pending\">Pending</option>\r\n-              <option value=\"complete\">Complete</option>\r\n-            </select>\r\n-            <div className=\"flex gap-4 mt-4 pb-4\">\r\n-              <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n-              <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={onClose}>Cancel</button>\r\n-            </div>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import { useState } from \"react\";\r\n-  const [submitStatus, setSubmitStatus] = useState(null); // null | 'success' | 'error'\r\n-  const [submitMsg, setSubmitMsg] = useState(\"\");\r\n-\r\n-export default function AdminAddBooking({ open, onClose, onAdd }) {\r\n-  if (!open) return null;\r\n-\r\n-  // Service/add-on logic (scoped to this component)\r\n-  const serviceOptions = [\r\n-    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: true },\r\n-    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n-    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n-  ];\r\n-  const addOnOptions = [\r\n-    { label: \"Pet Hair Removal\", price: 20 },\r\n-    { label: \"Clay Bar\", price: 20 },\r\n-    { label: \"Iron Removal\", price: 25 },\r\n-    { label: \"Ceramic Sealant\", price: 10 },\r\n-  ];\r\n-  const carTypeOptions = [\r\n-    { label: \"Sedan\", price: 0 },\r\n-    { label: \"SUV\", price: 10 },\r\n-    { label: \"Truck\", price: 20 },\r\n-  ];\r\n-\r\n-  const [newBooking, setNewBooking] = useState({\r\n-    name: \"\",\r\n-    carName: \"\",\r\n-    service: serviceOptions[0].title,\r\n-    date: \"\",\r\n-    time: \"\",\r\n-    amount: serviceOptions[0].basePrice,\r\n-    status: \"pending\",\r\n-    phone: \"\",\r\n-    email: \"\",\r\n-    location: \"\",\r\n-    addOns: [],\r\n-    carType: carTypeOptions[0].label,\r\n-  });\r\n-  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n-\r\n-  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n-    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n-    let base = service ? service.basePrice : 0;\r\n-    if (serviceTitle === \"Complete Interior Detail\") {\r\n-      if (carTypeLabel === \"SUV\") base = 130;\r\n-      else if (carTypeLabel === \"Truck\") base = 140;\r\n-      else base = 110;\r\n-    } else {\r\n-      const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n-      if (carType) base += carType.price;\r\n-    }\r\n-\r\n-    let addOnTotal = 0;\r\n-    if (service && service.hasAddOns && addOns.length) {\r\n-      let filteredAddOns = [];\r\n-      if (serviceTitle === \"Premium Exterior Wash\") {\r\n-        filteredAddOns = addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n-      } else if (serviceTitle === \"Complete Interior Detail\") {\r\n-        filteredAddOns = addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n-      } else if (serviceTitle === \"Ultimate Full Detail\") {\r\n-        filteredAddOns = addOns;\r\n-      }\r\n-      addOnTotal = filteredAddOns.reduce((sum, a) => sum + a.price, 0);\r\n-      const clay = filteredAddOns.find(a => a.label === \"Clay Bar\");\r\n-      const iron = filteredAddOns.find(a => a.label === \"Iron Removal\");\r\n-      if (clay && iron) addOnTotal -= 5;\r\n-    }\r\n-\r\n-    return base + addOnTotal;\r\n-  };\r\n-\r\n-  const handleAddBooking = async (e) => {\r\n-    e.preventDefault();\r\n-    const payload = {\r\n-      ...newBooking,\r\n-      amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n-    };\r\n-    // Send to API\r\n-    setSubmitStatus(null);\r\n-    setSubmitMsg(\"\");\r\n-    try {\r\n-      const resp = await fetch(\"/api/admin-add-booking\", {\r\n-        method: \"POST\",\r\n-        headers: { \"Content-Type\": \"application/json\" },\r\n-        body: JSON.stringify(payload),\r\n-      });\r\n-      const data = await resp.json();\r\n-      if (resp.ok && data.success) {\r\n-        setSubmitStatus(\"success\");\r\n-        setSubmitMsg(\"Booking saved to database!\");\r\n-        onAdd?.(payload);\r\n-        setTimeout(() => {\r\n-          setSubmitStatus(null);\r\n-          setSubmitMsg(\"\");\r\n-          setNewBooking({\r\n-            name: \"\",\r\n-            carName: \"\",\r\n-            service: serviceOptions[0].title,\r\n-            date: \"\",\r\n-            time: \"\",\r\n-            amount: serviceOptions[0].basePrice,\r\n-            status: \"pending\",\r\n-            phone: \"\",\r\n-            email: \"\",\r\n-            location: \"\",\r\n-            addOns: [],\r\n-            carType: carTypeOptions[0].label,\r\n-          });\r\n-          onClose?.();\r\n-        }, 1200);\r\n-      } else {\r\n-        setSubmitStatus(\"error\");\r\n-        setSubmitMsg(data.error || \"Failed to save booking\");\r\n-      }\r\n-    } catch (err) {\r\n-      setSubmitStatus(\"error\");\r\n-      setSubmitMsg(err.message || \"Failed to save booking\");\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-      <div\r\n-        className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n-        style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n-      >\r\n-        {/* Close (X) button */}\r\n-        <button\r\n-          type=\"button\"\r\n-          aria-label=\"Close\"\r\n-          onClick={onClose}\r\n-          className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n-          style={{ background: 'none', border: 'none' }}\r\n-        >\r\n-          &times;\r\n-        </button>\r\n-        <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n-        <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n-          {submitStatus && (\r\n-            <div className={`mb-2 text-center font-semibold ${submitStatus === 'success' ? 'text-green-600' : 'text-red-600'}`}>{submitMsg}</div>\r\n-          )}\r\n-          <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n-            {/* Name */}\r\n-            <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Car Name */}\r\n-            <input type=\"text\" required placeholder=\"Car (e.g., Toyota Camry)\" value={newBooking.carName} onChange={e => setNewBooking({ ...newBooking, carName: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Service dropdown */}\r\n-            <select required value={newBooking.service} onChange={e => {\r\n-              const selectedService = e.target.value;\r\n-              setNewBooking(nb => ({\r\n-                ...nb,\r\n-                service: selectedService,\r\n-                addOns: [],\r\n-                amount: calculatePrice(selectedService, [], nb.carType),\r\n-              }));\r\n-            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-              {serviceOptions.map(s => (\r\n-                <option key={s.title} value={s.title}>{s.title}</option>\r\n-              ))}\r\n-            </select>\r\n-            {/* Car type dropdown */}\r\n-            <select required value={newBooking.carType} onChange={e => {\r\n-              const carType = e.target.value;\r\n-              setNewBooking(nb => ({\r\n-                ...nb,\r\n-                carType,\r\n-                amount: calculatePrice(nb.service, nb.addOns, carType),\r\n-              }));\r\n-            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-              {carTypeOptions.map(c => (\r\n-                <option key={c.label} value={c.label}>{c.label}</option>\r\n-              ))}\r\n-            </select>\r\n-            {/* Add-ons */}\r\n-            <div>\r\n-              <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n-              <div className=\"flex flex-wrap gap-3 mb-2\">\r\n-                {(() => {\r\n-                  let validAddOns = [];\r\n-                  if (newBooking.service === \"Premium Exterior Wash\") {\r\n-                    validAddOns = addOnOptions.filter(opt => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(opt.label));\r\n-                  } else if (newBooking.service === \"Complete Interior Detail\") {\r\n-                    validAddOns = addOnOptions.filter(opt => opt.label === \"Pet Hair Removal\");\r\n-                  } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n-                    validAddOns = addOnOptions;\r\n-                  }\r\n-                  return validAddOns.map(opt => (\r\n-                    <button\r\n-                      key={opt.label}\r\n-                      type=\"button\"\r\n-                      onClick={() => {\r\n-                        setNewBooking(nb => {\r\n-                          const exists = nb.addOns.find(a => a.label === opt.label);\r\n-                          const updated = exists\r\n-                            ? nb.addOns.filter(a => a.label !== opt.label)\r\n-                            : [...nb.addOns, opt];\r\n-                          return {\r\n-                            ...nb,\r\n-                            addOns: updated,\r\n-                            amount: calculatePrice(nb.service, updated, nb.carType),\r\n-                          };\r\n-                        });\r\n-                      }}\r\n-                      className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n-                    >\r\n-                      {opt.label}\r\n-                    </button>\r\n-                  ));\r\n-                })()}\r\n-              </div>\r\n-              {/* Combo discount message */}\r\n-              {(() => {\r\n-                let validAddOns = [];\r\n-                if (newBooking.service === \"Premium Exterior Wash\") {\r\n-                  validAddOns = newBooking.addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n-                } else if (newBooking.service === \"Complete Interior Detail\") {\r\n-                  validAddOns = newBooking.addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n-                } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n-                  validAddOns = newBooking.addOns;\r\n-                }\r\n-                return validAddOns.find(a => a.label === \"Clay Bar\") && validAddOns.find(a => a.label === \"Iron Removal\") ? (\r\n-                  <div className=\"text-xs text-blue-600 mt-2 font-semibold\">Combo discount applied (-$5)</div>\r\n-                ) : null;\r\n-              })()}\r\n-            </div>\r\n-            {/* Date */}\r\n-            <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Time (enabled after selecting date) */}\r\n-            <input\r\n-              type=\"time\"\r\n-              required\r\n-              disabled={!newBooking.date}\r\n-              value={newBooking.time}\r\n-              onChange={e => setNewBooking({ ...newBooking, time: e.target.value })}\r\n-              className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800 disabled:bg-gray-100\"\r\n-            />\r\n-            {/* Amount (auto-calculated, read-only) */}\r\n-            <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n-            {/* Phone (numbers only) */}\r\n-            <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n-              const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n-              setNewBooking({ ...newBooking, phone: val });\r\n-            }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Email */}\r\n-            <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Location autocomplete (Google Places API) */}\r\n-            <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n-              const val = e.target.value;\r\n-              setNewBooking({ ...newBooking, location: val });\r\n-              if (typeof window !== 'undefined' && val.length > 2) {\r\n-                try {\r\n-                  const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n-                  const data = await resp.json();\r\n-                  setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n-                } catch {}\r\n-              } else {\r\n-                setLocationSuggestions([]);\r\n-              }\r\n-            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n-            {/* Location suggestions dropdown */}\r\n-            {locationSuggestions.length > 0 && (\r\n-              <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n-                {locationSuggestions.map((sug, i) => (\r\n-                  <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n-                    setNewBooking(nb => ({ ...nb, location: sug }));\r\n-                    setLocationSuggestions([]);\r\n-                  }}>{sug}</div>\r\n-                ))}\r\n-              </div>\r\n-            )}\r\n-            {/* Status dropdown */}\r\n-            <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-              <option value=\"pending\">Pending</option>\r\n-              <option value=\"complete\">Complete</option>\r\n-            </select>\r\n-            <div className=\"flex gap-4 mt-4 pb-4\">\r\n-              <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n-              <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={onClose}>Cancel</button>\r\n-            </div>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import { useState } from \"react\";\r\n-  const [submitStatus, setSubmitStatus] = useState(null); // null | 'success' | 'error'\r\n-  const [submitMsg, setSubmitMsg] = useState(\"\");\r\n-\r\n-export default function AdminAddBooking({ open, onClose, onAdd }) {\r\n-  if (!open) return null;\r\n-\r\n-  // Service/add-on logic (scoped to this component)\r\n-  const serviceOptions = [\r\n-    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: true },\r\n-    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n-    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n-  ];\r\n-  const addOnOptions = [\r\n-    { label: \"Pet Hair Removal\", price: 20 },\r\n-    { label: \"Clay Bar\", price: 20 },\r\n-    { label: \"Iron Removal\", price: 25 },\r\n-    { label: \"Ceramic Sealant\", price: 10 },\r\n-  ];\r\n-  const carTypeOptions = [\r\n-    { label: \"Sedan\", price: 0 },\r\n-    { label: \"SUV\", price: 10 },\r\n-    { label: \"Truck\", price: 20 },\r\n-  ];\r\n-\r\n-  const [newBooking, setNewBooking] = useState({\r\n-    name: \"\",\r\n-    carName: \"\",\r\n-    service: serviceOptions[0].title,\r\n-    date: \"\",\r\n-    time: \"\",\r\n-    amount: serviceOptions[0].basePrice,\r\n-    status: \"pending\",\r\n-    phone: \"\",\r\n-    email: \"\",\r\n-    location: \"\",\r\n-    addOns: [],\r\n-    carType: carTypeOptions[0].label,\r\n-  });\r\n-  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n-\r\n-  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n-    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n-    let base = service ? service.basePrice : 0;\r\n-    if (serviceTitle === \"Complete Interior Detail\") {\r\n-      if (carTypeLabel === \"SUV\") base = 130;\r\n-      else if (carTypeLabel === \"Truck\") base = 140;\r\n-      else base = 110;\r\n-    } else {\r\n-      const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n-      if (carType) base += carType.price;\r\n-    }\r\n-\r\n-    let addOnTotal = 0;\r\n-    if (service && service.hasAddOns && addOns.length) {\r\n-      let filteredAddOns = [];\r\n-      if (serviceTitle === \"Premium Exterior Wash\") {\r\n-        filteredAddOns = addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n-      } else if (serviceTitle === \"Complete Interior Detail\") {\r\n-        filteredAddOns = addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n-      } else if (serviceTitle === \"Ultimate Full Detail\") {\r\n-        filteredAddOns = addOns;\r\n-      }\r\n-      addOnTotal = filteredAddOns.reduce((sum, a) => sum + a.price, 0);\r\n-      const clay = filteredAddOns.find(a => a.label === \"Clay Bar\");\r\n-      const iron = filteredAddOns.find(a => a.label === \"Iron Removal\");\r\n-      if (clay && iron) addOnTotal -= 5;\r\n-    }\r\n-\r\n-    return base + addOnTotal;\r\n-  };\r\n-\r\n-  const handleAddBooking = async (e) => {\r\n-    e.preventDefault();\r\n-    const payload = {\r\n-      ...newBooking,\r\n-      amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n-    };\r\n-    // Send to API\r\n-    setSubmitStatus(null);\r\n-    setSubmitMsg(\"\");\r\n-    try {\r\n-      const resp = await fetch(\"/api/admin-add-booking\", {\r\n-        method: \"POST\",\r\n-        headers: { \"Content-Type\": \"application/json\" },\r\n-        body: JSON.stringify(payload),\r\n-      });\r\n-      const data = await resp.json();\r\n-      if (resp.ok && data.success) {\r\n-        setSubmitStatus(\"success\");\r\n-        setSubmitMsg(\"Booking saved to database!\");\r\n-        onAdd?.(payload);\r\n-        setTimeout(() => {\r\n-          setSubmitStatus(null);\r\n-          setSubmitMsg(\"\");\r\n-          setNewBooking({\r\n-            name: \"\",\r\n-            carName: \"\",\r\n-            service: serviceOptions[0].title,\r\n-            date: \"\",\r\n-            time: \"\",\r\n-            amount: serviceOptions[0].basePrice,\r\n-            status: \"pending\",\r\n-            phone: \"\",\r\n-            email: \"\",\r\n-            location: \"\",\r\n-            addOns: [],\r\n-            carType: carTypeOptions[0].label,\r\n-          });\r\n-          onClose?.();\r\n-        }, 1200);\r\n-      } else {\r\n-        setSubmitStatus(\"error\");\r\n-        setSubmitMsg(data.error || \"Failed to save booking\");\r\n-      }\r\n-    } catch (err) {\r\n-      setSubmitStatus(\"error\");\r\n-      setSubmitMsg(err.message || \"Failed to save booking\");\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-      <div\r\n-        className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n-        style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n-      >\r\n-        {/* Close (X) button */}\r\n-        <button\r\n-          type=\"button\"\r\n-          aria-label=\"Close\"\r\n-          onClick={onClose}\r\n-          className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n-          style={{ background: 'none', border: 'none' }}\r\n-        >\r\n-          &times;\r\n-        </button>\r\n-        <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n-        <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n-          {submitStatus && (\r\n-            <div className={`mb-2 text-center font-semibold ${submitStatus === 'success' ? 'text-green-600' : 'text-red-600'}`}>{submitMsg}</div>\r\n-          )}\r\n-          <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n-            {/* Name */}\r\n-            <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Car Name */}\r\n-            <input type=\"text\" required placeholder=\"Car (e.g., Toyota Camry)\" value={newBooking.carName} onChange={e => setNewBooking({ ...newBooking, carName: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Service dropdown */}\r\n-            <select required value={newBooking.service} onChange={e => {\r\n-              const selectedService = e.target.value;\r\n-              setNewBooking(nb => ({\r\n-                ...nb,\r\n-                service: selectedService,\r\n-                addOns: [],\r\n-                amount: calculatePrice(selectedService, [], nb.carType),\r\n-              }));\r\n-            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-              {serviceOptions.map(s => (\r\n-                <option key={s.title} value={s.title}>{s.title}</option>\r\n-              ))}\r\n-            </select>\r\n-            {/* Car type dropdown */}\r\n-            <select required value={newBooking.carType} onChange={e => {\r\n-              const carType = e.target.value;\r\n-              setNewBooking(nb => ({\r\n-                ...nb,\r\n-                carType,\r\n-                amount: calculatePrice(nb.service, nb.addOns, carType),\r\n-              }));\r\n-            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-              {carTypeOptions.map(c => (\r\n-                <option key={c.label} value={c.label}>{c.label}</option>\r\n-              ))}\r\n-            </select>\r\n-            {/* Add-ons */}\r\n-            <div>\r\n-              <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n-              <div className=\"flex flex-wrap gap-3 mb-2\">\r\n-                {(() => {\r\n-                  let validAddOns = [];\r\n-                  if (newBooking.service === \"Premium Exterior Wash\") {\r\n-                    validAddOns = addOnOptions.filter(opt => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(opt.label));\r\n-                  } else if (newBooking.service === \"Complete Interior Detail\") {\r\n-                    validAddOns = addOnOptions.filter(opt => opt.label === \"Pet Hair Removal\");\r\n-                  } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n-                    validAddOns = addOnOptions;\r\n-                  }\r\n-                  return validAddOns.map(opt => (\r\n-                    <button\r\n-                      key={opt.label}\r\n-                      type=\"button\"\r\n-                      onClick={() => {\r\n-                        setNewBooking(nb => {\r\n-                          const exists = nb.addOns.find(a => a.label === opt.label);\r\n-                          const updated = exists\r\n-                            ? nb.addOns.filter(a => a.label !== opt.label)\r\n-                            : [...nb.addOns, opt];\r\n-                          return {\r\n-                            ...nb,\r\n-                            addOns: updated,\r\n-                            amount: calculatePrice(nb.service, updated, nb.carType),\r\n-                          };\r\n-                        });\r\n-                      }}\r\n-                      className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n-                    >\r\n-                      {opt.label}\r\n-                    </button>\r\n-                  ));\r\n-                })()}\r\n-              </div>\r\n-              {/* Combo discount message */}\r\n-              {(() => {\r\n-                let validAddOns = [];\r\n-                if (newBooking.service === \"Premium Exterior Wash\") {\r\n-                  validAddOns = newBooking.addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n-                } else if (newBooking.service === \"Complete Interior Detail\") {\r\n-                  validAddOns = newBooking.addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n-                } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n-                  validAddOns = newBooking.addOns;\r\n-                }\r\n-                return validAddOns.find(a => a.label === \"Clay Bar\") && validAddOns.find(a => a.label === \"Iron Removal\") ? (\r\n-                  <div className=\"text-xs text-blue-600 mt-2 font-semibold\">Combo discount applied (-$5)</div>\r\n-                ) : null;\r\n-              })()}\r\n-            </div>\r\n-            {/* Date */}\r\n-            <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Time (enabled after selecting date) */}\r\n-            <input\r\n-              type=\"time\"\r\n-              required\r\n-              disabled={!newBooking.date}\r\n-              value={newBooking.time}\r\n-              onChange={e => setNewBooking({ ...newBooking, time: e.target.value })}\r\n-              className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800 disabled:bg-gray-100\"\r\n-            />\r\n-            {/* Amount (auto-calculated, read-only) */}\r\n-            <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n-            {/* Phone (numbers only) */}\r\n-            <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n-              const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n-              setNewBooking({ ...newBooking, phone: val });\r\n-            }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Email */}\r\n-            <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Location autocomplete (Google Places API) */}\r\n-            <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n-              const val = e.target.value;\r\n-              setNewBooking({ ...newBooking, location: val });\r\n-              if (typeof window !== 'undefined' && val.length > 2) {\r\n-                try {\r\n-                  const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n-                  const data = await resp.json();\r\n-                  setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n-                } catch {}\r\n-              } else {\r\n-                setLocationSuggestions([]);\r\n-              }\r\n-            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n-            {/* Location suggestions dropdown */}\r\n-            {locationSuggestions.length > 0 && (\r\n-              <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n-                {locationSuggestions.map((sug, i) => (\r\n-                  <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n-                    setNewBooking(nb => ({ ...nb, location: sug }));\r\n-                    setLocationSuggestions([]);\r\n-                  }}>{sug}</div>\r\n-                ))}\r\n-              </div>\r\n-            )}\r\n-            {/* Status dropdown */}\r\n-            <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-              <option value=\"pending\">Pending</option>\r\n-              <option value=\"complete\">Complete</option>\r\n-            </select>\r\n-            <div className=\"flex gap-4 mt-4 pb-4\">\r\n-              <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n-              <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={onClose}>Cancel</button>\r\n-            </div>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import { useState } from \"react\";\r\n-\r\n-export default function AdminAddBooking({ open, onClose, onAdd }) {\r\n-  if (!open) return null;\r\n-\r\n-  // Service/add-on logic (scoped to this component)\r\n-  const serviceOptions = [\r\n-    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: true },\r\n-    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n-    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n-  ];\r\n-  const addOnOptions = [\r\n-    { label: \"Pet Hair Removal\", price: 20 },\r\n-    { label: \"Clay Bar\", price: 20 },\r\n-    { label: \"Iron Removal\", price: 25 },\r\n-    { label: \"Ceramic Sealant\", price: 10 },\r\n-  ];\r\n-  const carTypeOptions = [\r\n-    { label: \"Sedan\", price: 0 },\r\n-    { label: \"SUV\", price: 10 },\r\n-    { label: \"Truck\", price: 20 },\r\n-  ];\r\n-\r\n-  const [newBooking, setNewBooking] = useState({\r\n-    name: \"\",\r\n-    carName: \"\",\r\n-    service: serviceOptions[0].title,\r\n-    date: \"\",\r\n-    time: \"\",\r\n-    amount: serviceOptions[0].basePrice,\r\n-    status: \"pending\",\r\n-    phone: \"\",\r\n-    email: \"\",\r\n-    location: \"\",\r\n-    addOns: [],\r\n-    carType: carTypeOptions[0].label,\r\n-  });\r\n-  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n-\r\n-  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n-    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n-    let base = service ? service.basePrice : 0;\r\n-    if (serviceTitle === \"Complete Interior Detail\") {\r\n-      if (carTypeLabel === \"SUV\") base = 130;\r\n-      else if (carTypeLabel === \"Truck\") base = 140;\r\n-      else base = 110;\r\n-    } else {\r\n-      const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n-      if (carType) base += carType.price;\r\n-    }\r\n-\r\n-    let addOnTotal = 0;\r\n-    if (service && service.hasAddOns && addOns.length) {\r\n-      let filteredAddOns = [];\r\n-      if (serviceTitle === \"Premium Exterior Wash\") {\r\n-        filteredAddOns = addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n-      } else if (serviceTitle === \"Complete Interior Detail\") {\r\n-        filteredAddOns = addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n-      } else if (serviceTitle === \"Ultimate Full Detail\") {\r\n-        filteredAddOns = addOns;\r\n-      }\r\n-      addOnTotal = filteredAddOns.reduce((sum, a) => sum + a.price, 0);\r\n-      const clay = filteredAddOns.find(a => a.label === \"Clay Bar\");\r\n-      const iron = filteredAddOns.find(a => a.label === \"Iron Removal\");\r\n-      if (clay && iron) addOnTotal -= 5;\r\n-    }\r\n-\r\n-    return base + addOnTotal;\r\n-  };\r\n-\r\n-  const handleAddBooking = async (e) => {\r\n-    e.preventDefault();\r\n-    const payload = {\r\n-      ...newBooking,\r\n-      amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n-    };\r\n-    onAdd?.(payload);\r\n-    // Reset and close\r\n-    setNewBooking({\r\n-      name: \"\",\r\n-      carName: \"\",\r\n-      service: serviceOptions[0].title,\r\n-      date: \"\",\r\n-      time: \"\",\r\n-      amount: serviceOptions[0].basePrice,\r\n-      status: \"pending\",\r\n-      phone: \"\",\r\n-      email: \"\",\r\n-      location: \"\",\r\n-      addOns: [],\r\n-      carType: carTypeOptions[0].label,\r\n-    });\r\n-    onClose?.();\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-      <div\r\n-        className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n-        style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n-      >\r\n-        {/* Close (X) button */}\r\n-        <button\r\n-          type=\"button\"\r\n-          aria-label=\"Close\"\r\n-          onClick={onClose}\r\n-          className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n-          style={{ background: 'none', border: 'none' }}\r\n-        >\r\n-          &times;\r\n-        </button>\r\n-        <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n-        <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n-          <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n-            {/* Name */}\r\n-            <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Car Name */}\r\n-            <input type=\"text\" required placeholder=\"Car (e.g., Toyota Camry)\" value={newBooking.carName} onChange={e => setNewBooking({ ...newBooking, carName: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Service dropdown */}\r\n-            <select required value={newBooking.service} onChange={e => {\r\n-              const selectedService = e.target.value;\r\n-              setNewBooking(nb => ({\r\n-                ...nb,\r\n-                service: selectedService,\r\n-                addOns: [],\r\n-                amount: calculatePrice(selectedService, [], nb.carType),\r\n-              }));\r\n-            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-              {serviceOptions.map(s => (\r\n-                <option key={s.title} value={s.title}>{s.title}</option>\r\n-              ))}\r\n-            </select>\r\n-            {/* Car type dropdown */}\r\n-            <select required value={newBooking.carType} onChange={e => {\r\n-              const carType = e.target.value;\r\n-              setNewBooking(nb => ({\r\n-                ...nb,\r\n-                carType,\r\n-                amount: calculatePrice(nb.service, nb.addOns, carType),\r\n-              }));\r\n-            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-              {carTypeOptions.map(c => (\r\n-                <option key={c.label} value={c.label}>{c.label}</option>\r\n-              ))}\r\n-            </select>\r\n-            {/* Add-ons */}\r\n-            <div>\r\n-              <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n-              <div className=\"flex flex-wrap gap-3 mb-2\">\r\n-                {(() => {\r\n-                  let validAddOns = [];\r\n-                  if (newBooking.service === \"Premium Exterior Wash\") {\r\n-                    validAddOns = addOnOptions.filter(opt => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(opt.label));\r\n-                  } else if (newBooking.service === \"Complete Interior Detail\") {\r\n-                    validAddOns = addOnOptions.filter(opt => opt.label === \"Pet Hair Removal\");\r\n-                  } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n-                    validAddOns = addOnOptions;\r\n-                  }\r\n-                  return validAddOns.map(opt => (\r\n-                    <button\r\n-                      key={opt.label}\r\n-                      type=\"button\"\r\n-                      onClick={() => {\r\n-                        setNewBooking(nb => {\r\n-                          const exists = nb.addOns.find(a => a.label === opt.label);\r\n-                          const updated = exists\r\n-                            ? nb.addOns.filter(a => a.label !== opt.label)\r\n-                            : [...nb.addOns, opt];\r\n-                          return {\r\n-                            ...nb,\r\n-                            addOns: updated,\r\n-                            amount: calculatePrice(nb.service, updated, nb.carType),\r\n-                          };\r\n-                        });\r\n-                      }}\r\n-                      className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n-                    >\r\n-                      {opt.label}\r\n-                    </button>\r\n-                  ));\r\n-                })()}\r\n-              </div>\r\n-              {/* Combo discount message */}\r\n-              {(() => {\r\n-                let validAddOns = [];\r\n-                if (newBooking.service === \"Premium Exterior Wash\") {\r\n-                  validAddOns = newBooking.addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n-                } else if (newBooking.service === \"Complete Interior Detail\") {\r\n-                  validAddOns = newBooking.addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n-                } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n-                  validAddOns = newBooking.addOns;\r\n-                }\r\n-                return validAddOns.find(a => a.label === \"Clay Bar\") && validAddOns.find(a => a.label === \"Iron Removal\") ? (\r\n-                  <div className=\"text-xs text-blue-600 mt-2 font-semibold\">Combo discount applied (-$5)</div>\r\n-                ) : null;\r\n-              })()}\r\n-            </div>\r\n-            {/* Date */}\r\n-            <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Time (enabled after selecting date) */}\r\n-            <input\r\n-              type=\"time\"\r\n-              required\r\n-              disabled={!newBooking.date}\r\n-              value={newBooking.time}\r\n-              onChange={e => setNewBooking({ ...newBooking, time: e.target.value })}\r\n-              className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800 disabled:bg-gray-100\"\r\n-            />\r\n-            {/* Amount (auto-calculated, read-only) */}\r\n-            <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n-            {/* Phone (numbers only) */}\r\n-            <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n-              const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n-              setNewBooking({ ...newBooking, phone: val });\r\n-            }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Email */}\r\n-            <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Location autocomplete (Google Places API) */}\r\n-            <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n-              const val = e.target.value;\r\n-              setNewBooking({ ...newBooking, location: val });\r\n-              if (typeof window !== 'undefined' && val.length > 2) {\r\n-                try {\r\n-                  const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n-                  const data = await resp.json();\r\n-                  setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n-                } catch {}\r\n-              } else {\r\n-                setLocationSuggestions([]);\r\n-              }\r\n-            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n-            {/* Location suggestions dropdown */}\r\n-            {locationSuggestions.length > 0 && (\r\n-              <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n-                {locationSuggestions.map((sug, i) => (\r\n-                  <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n-                    setNewBooking(nb => ({ ...nb, location: sug }));\r\n-                    setLocationSuggestions([]);\r\n-                  }}>{sug}</div>\r\n-                ))}\r\n-              </div>\r\n-            )}\r\n-            {/* Status dropdown */}\r\n-            <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-              <option value=\"pending\">Pending</option>\r\n-              <option value=\"complete\">Complete</option>\r\n-            </select>\r\n-            <div className=\"flex gap-4 mt-4 pb-4\">\r\n-              <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n-              <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={onClose}>Cancel</button>\r\n-            </div>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import { useState } from \"react\";\r\n-\r\n-export default function AdminAddBooking({ open, onClose, onAdd }) {\r\n-  if (!open) return null;\r\n-\r\n-  // Service/add-on logic (scoped to this component)\r\n-  const serviceOptions = [\r\n-    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: true },\r\n-    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n-    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n-  ];\r\n-  const addOnOptions = [\r\n-    { label: \"Pet Hair Removal\", price: 20 },\r\n-    { label: \"Clay Bar\", price: 20 },\r\n-    { label: \"Iron Removal\", price: 25 },\r\n-    { label: \"Ceramic Sealant\", price: 10 },\r\n-  ];\r\n-  const carTypeOptions = [\r\n-    { label: \"Sedan\", price: 0 },\r\n-    { label: \"SUV\", price: 10 },\r\n-    { label: \"Truck\", price: 20 },\r\n-  ];\r\n-\r\n-  const [newBooking, setNewBooking] = useState({\r\n-    name: \"\",\r\n-    carName: \"\",\r\n-    service: serviceOptions[0].title,\r\n-    date: \"\",\r\n-    time: \"\",\r\n-    amount: serviceOptions[0].basePrice,\r\n-    status: \"pending\",\r\n-    phone: \"\",\r\n-    email: \"\",\r\n-    location: \"\",\r\n-    addOns: [],\r\n-    carType: carTypeOptions[0].label,\r\n-  });\r\n-  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n-\r\n-  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n-    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n-    let base = service ? service.basePrice : 0;\r\n-    if (serviceTitle === \"Complete Interior Detail\") {\r\n-      if (carTypeLabel === \"SUV\") base = 130;\r\n-      else if (carTypeLabel === \"Truck\") base = 140;\r\n-      else base = 110;\r\n-    } else {\r\n-      const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n-      if (carType) base += carType.price;\r\n-    }\r\n-\r\n-    let addOnTotal = 0;\r\n-    if (service && service.hasAddOns && addOns.length) {\r\n-      let filteredAddOns = [];\r\n-      if (serviceTitle === \"Premium Exterior Wash\") {\r\n-        filteredAddOns = addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n-      } else if (serviceTitle === \"Complete Interior Detail\") {\r\n-        filteredAddOns = addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n-      } else if (serviceTitle === \"Ultimate Full Detail\") {\r\n-        filteredAddOns = addOns;\r\n-      }\r\n-      addOnTotal = filteredAddOns.reduce((sum, a) => sum + a.price, 0);\r\n-      const clay = filteredAddOns.find(a => a.label === \"Clay Bar\");\r\n-      const iron = filteredAddOns.find(a => a.label === \"Iron Removal\");\r\n-      if (clay && iron) addOnTotal -= 5;\r\n-    }\r\n-\r\n-    return base + addOnTotal;\r\n-  };\r\n-\r\n-  const handleAddBooking = async (e) => {\r\n-    e.preventDefault();\r\n-    const payload = {\r\n-      ...newBooking,\r\n-      amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n-    };\r\n-    onAdd?.(payload);\r\n-    // Reset and close\r\n-    setNewBooking({\r\n-      name: \"\",\r\n-      carName: \"\",\r\n-      service: serviceOptions[0].title,\r\n-      date: \"\",\r\n-      time: \"\",\r\n-      amount: serviceOptions[0].basePrice,\r\n-      status: \"pending\",\r\n-      phone: \"\",\r\n-      email: \"\",\r\n-      location: \"\",\r\n-      addOns: [],\r\n-      carType: carTypeOptions[0].label,\r\n-    });\r\n-    onClose?.();\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-      <div\r\n-        className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n-        style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n-      >\r\n-        {/* Close (X) button */}\r\n-        <button\r\n-          type=\"button\"\r\n-          aria-label=\"Close\"\r\n-          onClick={onClose}\r\n-          className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n-          style={{ background: 'none', border: 'none' }}\r\n-        >\r\n-          &times;\r\n-        </button>\r\n-        <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n-        <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n-          <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n-            {/* Name */}\r\n-            <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Car Name */}\r\n-            <input type=\"text\" required placeholder=\"Car (e.g., Toyota Camry)\" value={newBooking.carName} onChange={e => setNewBooking({ ...newBooking, carName: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Service dropdown */}\r\n-            <select required value={newBooking.service} onChange={e => {\r\n-              const selectedService = e.target.value;\r\n-              setNewBooking(nb => ({\r\n-                ...nb,\r\n-                service: selectedService,\r\n-                addOns: [],\r\n-                amount: calculatePrice(selectedService, [], nb.carType),\r\n-              }));\r\n-            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-              {serviceOptions.map(s => (\r\n-                <option key={s.title} value={s.title}>{s.title}</option>\r\n-              ))}\r\n-            </select>\r\n-            {/* Car type dropdown */}\r\n-            <select required value={newBooking.carType} onChange={e => {\r\n-              const carType = e.target.value;\r\n-              setNewBooking(nb => ({\r\n-                ...nb,\r\n-                carType,\r\n-                amount: calculatePrice(nb.service, nb.addOns, carType),\r\n-              }));\r\n-            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-              {carTypeOptions.map(c => (\r\n-                <option key={c.label} value={c.label}>{c.label}</option>\r\n-              ))}\r\n-            </select>\r\n-            {/* Add-ons */}\r\n-            <div>\r\n-              <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n-              <div className=\"flex flex-wrap gap-3 mb-2\">\r\n-                {(() => {\r\n-                  let validAddOns = [];\r\n-                  if (newBooking.service === \"Premium Exterior Wash\") {\r\n-                    validAddOns = addOnOptions.filter(opt => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(opt.label));\r\n-                  } else if (newBooking.service === \"Complete Interior Detail\") {\r\n-                    validAddOns = addOnOptions.filter(opt => opt.label === \"Pet Hair Removal\");\r\n-                  } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n-                    validAddOns = addOnOptions;\r\n-                  }\r\n-                  return validAddOns.map(opt => (\r\n-                    <button\r\n-                      key={opt.label}\r\n-                      type=\"button\"\r\n-                      onClick={() => {\r\n-                        setNewBooking(nb => {\r\n-                          const exists = nb.addOns.find(a => a.label === opt.label);\r\n-                          const updated = exists\r\n-                            ? nb.addOns.filter(a => a.label !== opt.label)\r\n-                            : [...nb.addOns, opt];\r\n-                          return {\r\n-                            ...nb,\r\n-                            addOns: updated,\r\n-                            amount: calculatePrice(nb.service, updated, nb.carType),\r\n-                          };\r\n-                        });\r\n-                      }}\r\n-                      className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n-                    >\r\n-                      {opt.label}\r\n-                    </button>\r\n-                  ));\r\n-                })()}\r\n-              </div>\r\n-              {/* Combo discount message */}\r\n-              {(() => {\r\n-                let validAddOns = [];\r\n-                if (newBooking.service === \"Premium Exterior Wash\") {\r\n-                  validAddOns = newBooking.addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n-                } else if (newBooking.service === \"Complete Interior Detail\") {\r\n-                  validAddOns = newBooking.addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n-                } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n-                  validAddOns = newBooking.addOns;\r\n-                }\r\n-                return validAddOns.find(a => a.label === \"Clay Bar\") && validAddOns.find(a => a.label === \"Iron Removal\") ? (\r\n-                  <div className=\"text-xs text-blue-600 mt-2 font-semibold\">Combo discount applied (-$5)</div>\r\n-                ) : null;\r\n-              })()}\r\n-            </div>\r\n-            {/* Date */}\r\n-            <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Time (enabled after selecting date) */}\r\n-            <input\r\n-              type=\"time\"\r\n-              required\r\n-              disabled={!newBooking.date}\r\n-              value={newBooking.time}\r\n-              onChange={e => setNewBooking({ ...newBooking, time: e.target.value })}\r\n-              className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800 disabled:bg-gray-100\"\r\n-            />\r\n-            {/* Amount (auto-calculated, read-only) */}\r\n-            <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n-            {/* Phone (numbers only) */}\r\n-            <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n-              const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n-              setNewBooking({ ...newBooking, phone: val });\r\n-            }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Email */}\r\n-            <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Location autocomplete (Google Places API) */}\r\n-            <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n-              const val = e.target.value;\r\n-              setNewBooking({ ...newBooking, location: val });\r\n-              if (typeof window !== 'undefined' && val.length > 2) {\r\n-                try {\r\n-                  const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n-                  const data = await resp.json();\r\n-                  setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n-                } catch {}\r\n-              } else {\r\n-                setLocationSuggestions([]);\r\n-              }\r\n-            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n-            {/* Location suggestions dropdown */}\r\n-            {locationSuggestions.length > 0 && (\r\n-              <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n-                {locationSuggestions.map((sug, i) => (\r\n-                  <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n-                    setNewBooking(nb => ({ ...nb, location: sug }));\r\n-                    setLocationSuggestions([]);\r\n-                  }}>{sug}</div>\r\n-                ))}\r\n-              </div>\r\n-            )}\r\n-            {/* Status dropdown */}\r\n-            <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-              <option value=\"pending\">Pending</option>\r\n-              <option value=\"complete\">Complete</option>\r\n-            </select>\r\n-            <div className=\"flex gap-4 mt-4 pb-4\">\r\n-              <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n-              <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={onClose}>Cancel</button>\r\n-            </div>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1760679616980,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,360 @@\n+import { useState, useEffect } from \"react\";\r\n+\r\n+export default function AdminAddBooking({ open, onClose, onAdd, editBooking, onEdit }) {\r\n+  const [submitStatus, setSubmitStatus] = useState(null); // null | 'success' | 'error'\r\n+  const [submitMsg, setSubmitMsg] = useState(\"\");\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [overrideAmount, setOverrideAmount] = useState(false);\r\n+  const serviceOptions = [\r\n+    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: true },\r\n+    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n+    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n+  ];\r\n+  const addOnOptions = [\r\n+    { label: \"Pet Hair Removal\", price: 20 },\r\n+    { label: \"Clay Bar\", price: 20 },\r\n+    { label: \"Iron Removal\", price: 25 },\r\n+    { label: \"Ceramic Sealant\", price: 10 },\r\n+  ];\r\n+  const carTypeOptions = [\r\n+    { label: \"Sedan\", price: 0 },\r\n+    { label: \"SUV\", price: 10 },\r\n+    { label: \"Truck\", price: 20 },\r\n+  ];\r\n+  const [newBooking, setNewBooking] = useState({\r\n+    name: \"\",\r\n+    carName: \"\",\r\n+    service: serviceOptions[0].title,\r\n+    date: \"\",\r\n+    time: \"\",\r\n+    amount: serviceOptions[0].basePrice,\r\n+    status: \"pending\",\r\n+    phone: \"\",\r\n+    email: \"\",\r\n+    location: \"\",\r\n+    addOns: [],\r\n+    carType: carTypeOptions[0].label,\r\n+  });\r\n+\r\n+  // Prefill form in edit mode\r\n+  useEffect(() => {\r\n+    if (editBooking && open) {\r\n+      setNewBooking({\r\n+        ...editBooking,\r\n+        amount: editBooking.amount || serviceOptions.find(s => s.title === editBooking.service)?.basePrice || serviceOptions[0].basePrice,\r\n+      });\r\n+    } else if (open && !editBooking) {\r\n+      setNewBooking({\r\n+        name: \"\",\r\n+        carName: \"\",\r\n+        service: serviceOptions[0].title,\r\n+        date: \"\",\r\n+        time: \"\",\r\n+        amount: serviceOptions[0].basePrice,\r\n+        status: \"pending\",\r\n+        phone: \"\",\r\n+        email: \"\",\r\n+        location: \"\",\r\n+        addOns: [],\r\n+        carType: carTypeOptions[0].label,\r\n+      });\r\n+    }\r\n+  }, [editBooking, open]);\r\n+  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n+  if (!open) return null;\r\n+  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n+    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n+    let base = service ? service.basePrice : 0;\r\n+    if (serviceTitle === \"Complete Interior Detail\") {\r\n+      if (carTypeLabel === \"SUV\") base = 130;\r\n+      else if (carTypeLabel === \"Truck\") base = 140;\r\n+      else base = 110;\r\n+    } else {\r\n+      const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n+      if (carType) base += carType.price;\r\n+    }\r\n+\r\n+    let addOnTotal = 0;\r\n+    if (service && service.hasAddOns && addOns.length) {\r\n+      let filteredAddOns = [];\r\n+      if (serviceTitle === \"Premium Exterior Wash\") {\r\n+        filteredAddOns = addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n+      } else if (serviceTitle === \"Complete Interior Detail\") {\r\n+        filteredAddOns = addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n+      } else if (serviceTitle === \"Ultimate Full Detail\") {\r\n+        filteredAddOns = addOns;\r\n+      }\r\n+      addOnTotal = filteredAddOns.reduce((sum, a) => sum + a.price, 0);\r\n+      const clay = filteredAddOns.find(a => a.label === \"Clay Bar\");\r\n+      const iron = filteredAddOns.find(a => a.label === \"Iron Removal\");\r\n+      if (clay && iron) addOnTotal -= 5;\r\n+    }\r\n+\r\n+    return base + addOnTotal;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+    setIsSubmitting(true);\r\n+    // Respect overrideAmount: if enabled, use user-entered amount; else auto-calc\r\n+    const computedAmount = overrideAmount\r\n+      ? Number(newBooking.amount || 0)\r\n+      : calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType);\r\n+    // Fill empty fields with \"N/A\" before saving\r\n+    const payload = {\r\n+      ...newBooking,\r\n+      name: newBooking.name.trim() || \"N/A\",\r\n+      carName: newBooking.carName.trim() || \"N/A\",\r\n+      phone: newBooking.phone.trim() || \"N/A\",\r\n+      email: newBooking.email.trim() || \"N/A\",\r\n+      location: newBooking.location.trim() || \"N/A\",\r\n+      date: newBooking.date || \"N/A\",\r\n+      time: newBooking.time || \"N/A\",\r\n+      amount: computedAmount,\r\n+    };\r\n+    setSubmitStatus(null);\r\n+    setSubmitMsg(\"\");\r\n+    try {\r\n+      if (editBooking && onEdit) {\r\n+        await onEdit(payload);\r\n+        setSubmitStatus(\"success\");\r\n+        setSubmitMsg(\"Booking updated!\");\r\n+        // Reset form state after successful edit; parent will close modal\r\n+        setOverrideAmount(false);\r\n+        setNewBooking({\r\n+          name: \"\",\r\n+          carName: \"\",\r\n+          service: serviceOptions[0].title,\r\n+          date: \"\",\r\n+          time: \"\",\r\n+          amount: serviceOptions[0].basePrice,\r\n+          status: \"pending\",\r\n+          phone: \"\",\r\n+          email: \"\",\r\n+          location: \"\",\r\n+          addOns: [],\r\n+          carType: carTypeOptions[0].label,\r\n+        });\r\n+      } else {\r\n+        const resp = await fetch(\"/api/admin-add-booking\", {\r\n+          method: \"POST\",\r\n+          headers: { \"Content-Type\": \"application/json\" },\r\n+          body: JSON.stringify(payload),\r\n+        });\r\n+        const data = await resp.json();\r\n+        if (resp.ok && data.success) {\r\n+          setSubmitStatus(\"success\");\r\n+          setSubmitMsg(\"Booking saved to database!\");\r\n+          // Delegate closing and refetching to parent handler\r\n+          onAdd?.(payload);\r\n+          // Reset form state after successful add\r\n+          setOverrideAmount(false);\r\n+          setNewBooking({\r\n+            name: \"\",\r\n+            carName: \"\",\r\n+            service: serviceOptions[0].title,\r\n+            date: \"\",\r\n+            time: \"\",\r\n+            amount: serviceOptions[0].basePrice,\r\n+            status: \"pending\",\r\n+            phone: \"\",\r\n+            email: \"\",\r\n+            location: \"\",\r\n+            addOns: [],\r\n+            carType: carTypeOptions[0].label,\r\n+          });\r\n+        } else {\r\n+          setSubmitStatus(\"error\");\r\n+          setSubmitMsg(data.error || \"Failed to save booking\");\r\n+        }\r\n+      }\r\n+    } catch (err) {\r\n+      setSubmitStatus(\"error\");\r\n+      setSubmitMsg(err.message || \"Failed to save booking\");\r\n+    }\r\n+    setIsSubmitting(false);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+      <div\r\n+        className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n+        style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n+      >\r\n+        {/* Close (X) button */}\r\n+        <button\r\n+          type=\"button\"\r\n+          aria-label=\"Close\"\r\n+          onClick={onClose}\r\n+          className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n+          style={{ background: 'none', border: 'none' }}\r\n+        >\r\n+          &times;\r\n+        </button>\r\n+        <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n+        <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n+          {submitStatus && (\r\n+            <div className={`mb-2 text-center font-semibold ${submitStatus === 'success' ? 'text-green-600' : 'text-red-600'}`}>{submitMsg}</div>\r\n+          )}\r\n+          <form onSubmit={handleSubmit} className=\"space-y-5\">\r\n+            {/* Name */}\r\n+            <input type=\"text\" placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Car Name */}\r\n+            <input type=\"text\" placeholder=\"Car (e.g., Toyota Camry)\" value={newBooking.carName} onChange={e => setNewBooking({ ...newBooking, carName: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Service dropdown */}\r\n+            <select required value={newBooking.service} onChange={e => {\r\n+              const selectedService = e.target.value;\r\n+              setNewBooking(nb => ({\r\n+                ...nb,\r\n+                service: selectedService,\r\n+                addOns: [],\r\n+                amount: overrideAmount ? nb.amount : calculatePrice(selectedService, [], nb.carType),\r\n+              }));\r\n+            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+              {serviceOptions.map(s => (\r\n+                <option key={s.title} value={s.title}>{s.title}</option>\r\n+              ))}\r\n+            </select>\r\n+            {/* Car type dropdown */}\r\n+            <select required value={newBooking.carType} onChange={e => {\r\n+              const carType = e.target.value;\r\n+              setNewBooking(nb => ({\r\n+                ...nb,\r\n+                carType,\r\n+                amount: overrideAmount ? nb.amount : calculatePrice(nb.service, nb.addOns, carType),\r\n+              }));\r\n+            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+              {carTypeOptions.map(c => (\r\n+                <option key={c.label} value={c.label}>{c.label}</option>\r\n+              ))}\r\n+            </select>\r\n+            {/* Add-ons */}\r\n+            <div>\r\n+              <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n+              <div className=\"flex flex-wrap gap-3 mb-2\">\r\n+                {(() => {\r\n+                  let validAddOns = [];\r\n+                  if (newBooking.service === \"Premium Exterior Wash\") {\r\n+                    validAddOns = addOnOptions.filter(opt => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(opt.label));\r\n+                  } else if (newBooking.service === \"Complete Interior Detail\") {\r\n+                    validAddOns = addOnOptions.filter(opt => opt.label === \"Pet Hair Removal\");\r\n+                  } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n+                    validAddOns = addOnOptions;\r\n+                  }\r\n+                  return validAddOns.map(opt => (\r\n+                    <button\r\n+                      key={opt.label}\r\n+                      type=\"button\"\r\n+                      onClick={() => {\r\n+                        setNewBooking(nb => {\r\n+                          const exists = nb.addOns.find(a => a.label === opt.label);\r\n+                          const updated = exists\r\n+                            ? nb.addOns.filter(a => a.label !== opt.label)\r\n+                            : [...nb.addOns, opt];\r\n+                          return {\r\n+                            ...nb,\r\n+                            addOns: updated,\r\n+                            amount: overrideAmount ? nb.amount : calculatePrice(nb.service, updated, nb.carType),\r\n+                          };\r\n+                        });\r\n+                      }}\r\n+                      className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n+                    >\r\n+                      {opt.label}\r\n+                    </button>\r\n+                  ));\r\n+                })()}\r\n+              </div>\r\n+              {/* Combo discount message */}\r\n+              {(() => {\r\n+                let validAddOns = [];\r\n+                if (newBooking.service === \"Premium Exterior Wash\") {\r\n+                  validAddOns = newBooking.addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n+                } else if (newBooking.service === \"Complete Interior Detail\") {\r\n+                  validAddOns = newBooking.addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n+                } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n+                  validAddOns = newBooking.addOns;\r\n+                }\r\n+                return validAddOns.find(a => a.label === \"Clay Bar\") && validAddOns.find(a => a.label === \"Iron Removal\") ? (\r\n+                  <div className=\"text-xs text-blue-600 mt-2 font-semibold\">Combo discount applied (-$5)</div>\r\n+                ) : null;\r\n+              })()}\r\n+            </div>\r\n+            {/* Date */}\r\n+            <input type=\"date\" value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Time (enabled after selecting date) */}\r\n+            <input\r\n+              type=\"time\"\r\n+              disabled={!newBooking.date}\r\n+              value={newBooking.time}\r\n+              onChange={e => setNewBooking({ ...newBooking, time: e.target.value })}\r\n+              className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800 disabled:bg-gray-100\"\r\n+            />\r\n+            {/* Amount override */}\r\n+            <div className=\"space-y-2\">\r\n+              <label className=\"flex items-center gap-2 text-sm text-gray-700\">\r\n+                <input type=\"checkbox\" checked={overrideAmount} onChange={e => setOverrideAmount(e.target.checked)} />\r\n+                Enter custom amount\r\n+              </label>\r\n+              <input\r\n+                type=\"number\"\r\n+                placeholder=\"Amount\"\r\n+                value={newBooking.amount}\r\n+                onChange={e => setNewBooking({ ...newBooking, amount: Number(e.target.value || 0) })}\r\n+                className={`w-full px-4 py-3 rounded-lg border ${overrideAmount ? 'border-blue-500 bg-white' : 'border-blue-200 bg-gray-100'} text-gray-800`}\r\n+                readOnly={!overrideAmount}\r\n+                min={0}\r\n+              />\r\n+              {!overrideAmount && (\r\n+                <div className=\"text-xs text-gray-500\">Amount is auto-calculated from service, car type and add-ons.</div>\r\n+              )}\r\n+            </div>\r\n+            {/* Phone (numbers only) */}\r\n+            <input type=\"text\" placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n+              const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n+              setNewBooking({ ...newBooking, phone: val });\r\n+            }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Email */}\r\n+            <input type=\"text\" placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Location autocomplete (Google Places API) */}\r\n+            <input type=\"text\" placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n+              const val = e.target.value;\r\n+              setNewBooking({ ...newBooking, location: val });\r\n+              if (typeof window !== 'undefined' && val.length > 2) {\r\n+                try {\r\n+                  const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n+                  const data = await resp.json();\r\n+                  setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n+                } catch {}\r\n+              } else {\r\n+                setLocationSuggestions([]);\r\n+              }\r\n+            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n+            {/* Location suggestions dropdown */}\r\n+            {locationSuggestions.length > 0 && (\r\n+              <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n+                {locationSuggestions.map((sug, i) => (\r\n+                  <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n+                    setNewBooking(nb => ({ ...nb, location: sug }));\r\n+                    setLocationSuggestions([]);\r\n+                  }}>{sug}</div>\r\n+                ))}\r\n+              </div>\r\n+            )}\r\n+            {/* Status dropdown */}\r\n+            <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+              <option value=\"pending\">Pending</option>\r\n+              <option value=\"complete\">Complete</option>\r\n+            </select>\r\n+            <div className=\"flex gap-4 mt-4 pb-4\">\r\n+              <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\" disabled={isSubmitting}>\r\n+                {isSubmitting ? (editBooking ? 'Saving...' : 'Adding...') : (editBooking ? 'Edit' : 'Add')}\r\n+              </button>\r\n+              <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={onClose} disabled={isSubmitting}>Cancel</button>\r\n+            </div>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1760680342051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,360 @@\n+import { useState, useEffect } from \"react\";\r\n+\r\n+export default function AdminAddBooking({ open, onClose, onAdd, editBooking, onEdit }) {\r\n+  const [submitStatus, setSubmitStatus] = useState(null); // null | 'success' | 'error'\r\n+  const [submitMsg, setSubmitMsg] = useState(\"\");\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [overrideAmount, setOverrideAmount] = useState(false);\r\n+  const serviceOptions = [\r\n+    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: true },\r\n+    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n+    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n+  ];\r\n+  const addOnOptions = [\r\n+    { label: \"Pet Hair Removal\", price: 20 },\r\n+    { label: \"Clay Bar\", price: 20 },\r\n+    { label: \"Iron Removal\", price: 25 },\r\n+    { label: \"Ceramic Sealant\", price: 10 },\r\n+  ];\r\n+  const carTypeOptions = [\r\n+    { label: \"Sedan\", price: 0 },\r\n+    { label: \"SUV\", price: 10 },\r\n+    { label: \"Truck\", price: 20 },\r\n+  ];\r\n+  const [newBooking, setNewBooking] = useState({\r\n+    name: \"\",\r\n+    carName: \"\",\r\n+    service: serviceOptions[0].title,\r\n+    date: \"\",\r\n+    time: \"\",\r\n+    amount: serviceOptions[0].basePrice,\r\n+    status: \"pending\",\r\n+    phone: \"\",\r\n+    email: \"\",\r\n+    location: \"\",\r\n+    addOns: [],\r\n+    carType: carTypeOptions[0].label,\r\n+  });\r\n+\r\n+  // Prefill form in edit mode\r\n+  useEffect(() => {\r\n+    if (editBooking && open) {\r\n+      setNewBooking({\r\n+        ...editBooking,\r\n+        amount: editBooking.amount || serviceOptions.find(s => s.title === editBooking.service)?.basePrice || serviceOptions[0].basePrice,\r\n+      });\r\n+    } else if (open && !editBooking) {\r\n+      setNewBooking({\r\n+        name: \"\",\r\n+        carName: \"\",\r\n+        service: serviceOptions[0].title,\r\n+        date: \"\",\r\n+        time: \"\",\r\n+        amount: serviceOptions[0].basePrice,\r\n+        status: \"pending\",\r\n+        phone: \"\",\r\n+        email: \"\",\r\n+        location: \"\",\r\n+        addOns: [],\r\n+        carType: carTypeOptions[0].label,\r\n+      });\r\n+    }\r\n+  }, [editBooking, open]);\r\n+  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n+  if (!open) return null;\r\n+  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n+    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n+    let base = service ? service.basePrice : 0;\r\n+    if (serviceTitle === \"Complete Interior Detail\") {\r\n+      if (carTypeLabel === \"SUV\") base = 130;\r\n+      else if (carTypeLabel === \"Truck\") base = 140;\r\n+      else base = 110;\r\n+    } else {\r\n+      const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n+      if (carType) base += carType.price;\r\n+    }\r\n+\r\n+    let addOnTotal = 0;\r\n+    if (service && service.hasAddOns && addOns.length) {\r\n+      let filteredAddOns = [];\r\n+      if (serviceTitle === \"Premium Exterior Wash\") {\r\n+        filteredAddOns = addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n+      } else if (serviceTitle === \"Complete Interior Detail\") {\r\n+        filteredAddOns = addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n+      } else if (serviceTitle === \"Ultimate Full Detail\") {\r\n+        filteredAddOns = addOns;\r\n+      }\r\n+      addOnTotal = filteredAddOns.reduce((sum, a) => sum + a.price, 0);\r\n+      const clay = filteredAddOns.find(a => a.label === \"Clay Bar\");\r\n+      const iron = filteredAddOns.find(a => a.label === \"Iron Removal\");\r\n+      if (clay && iron) addOnTotal -= 5;\r\n+    }\r\n+\r\n+    return base + addOnTotal;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+    setIsSubmitting(true);\r\n+    // Respect overrideAmount: if enabled, use user-entered amount; else auto-calc\r\n+    const computedAmount = overrideAmount\r\n+      ? Number(newBooking.amount || 0)\r\n+      : calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType);\r\n+    // Fill empty fields with \"N/A\" before saving\r\n+    const payload = {\r\n+      ...newBooking,\r\n+      name: newBooking.name.trim() || \"N/A\",\r\n+      carName: newBooking.carName.trim() || \"N/A\",\r\n+      phone: newBooking.phone.trim() || \"N/A\",\r\n+      email: newBooking.email.trim() || \"N/A\",\r\n+      location: newBooking.location.trim() || \"N/A\",\r\n+      date: newBooking.date || \"N/A\",\r\n+      time: newBooking.time || \"N/A\",\r\n+      amount: computedAmount,\r\n+    };\r\n+    setSubmitStatus(null);\r\n+    setSubmitMsg(\"\");\r\n+    try {\r\n+      if (editBooking && onEdit) {\r\n+        await onEdit(payload);\r\n+        setSubmitStatus(\"success\");\r\n+        setSubmitMsg(\"Booking updated!\");\r\n+        // Reset form state after successful edit; parent will close modal\r\n+        setOverrideAmount(false);\r\n+        setNewBooking({\r\n+          name: \"\",\r\n+          carName: \"\",\r\n+          service: serviceOptions[0].title,\r\n+          date: \"\",\r\n+          time: \"\",\r\n+          amount: serviceOptions[0].basePrice,\r\n+          status: \"pending\",\r\n+          phone: \"\",\r\n+          email: \"\",\r\n+          location: \"\",\r\n+          addOns: [],\r\n+          carType: carTypeOptions[0].label,\r\n+        });\r\n+      } else {\r\n+        const resp = await fetch(\"/api/admin-add-booking\", {\r\n+          method: \"POST\",\r\n+          headers: { \"Content-Type\": \"application/json\" },\r\n+          body: JSON.stringify(payload),\r\n+        });\r\n+        const data = await resp.json();\r\n+        if (resp.ok && data.success) {\r\n+          setSubmitStatus(\"success\");\r\n+          setSubmitMsg(\"Booking saved to database!\");\r\n+          // Delegate closing and refetching to parent handler\r\n+          onAdd?.(payload);\r\n+          // Reset form state after successful add\r\n+          setOverrideAmount(false);\r\n+          setNewBooking({\r\n+            name: \"\",\r\n+            carName: \"\",\r\n+            service: serviceOptions[0].title,\r\n+            date: \"\",\r\n+            time: \"\",\r\n+            amount: serviceOptions[0].basePrice,\r\n+            status: \"pending\",\r\n+            phone: \"\",\r\n+            email: \"\",\r\n+            location: \"\",\r\n+            addOns: [],\r\n+            carType: carTypeOptions[0].label,\r\n+          });\r\n+        } else {\r\n+          setSubmitStatus(\"error\");\r\n+          setSubmitMsg(data.error || \"Failed to save booking\");\r\n+        }\r\n+      }\r\n+    } catch (err) {\r\n+      setSubmitStatus(\"error\");\r\n+      setSubmitMsg(err.message || \"Failed to save booking\");\r\n+    }\r\n+    setIsSubmitting(false);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+      <div\r\n+        className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n+        style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n+      >\r\n+        {/* Close (X) button */}\r\n+        <button\r\n+          type=\"button\"\r\n+          aria-label=\"Close\"\r\n+          onClick={onClose}\r\n+          className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n+          style={{ background: 'none', border: 'none' }}\r\n+        >\r\n+          &times;\r\n+        </button>\r\n+        <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n+        <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n+          {submitStatus && (\r\n+            <div className={`mb-2 text-center font-semibold ${submitStatus === 'success' ? 'text-green-600' : 'text-red-600'}`}>{submitMsg}</div>\r\n+          )}\r\n+          <form onSubmit={handleSubmit} className=\"space-y-5\">\r\n+            {/* Name */}\r\n+            <input type=\"text\" placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Car Name */}\r\n+            <input type=\"text\" placeholder=\"Car (e.g., Toyota Camry)\" value={newBooking.carName} onChange={e => setNewBooking({ ...newBooking, carName: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Service dropdown */}\r\n+            <select required value={newBooking.service} onChange={e => {\r\n+              const selectedService = e.target.value;\r\n+              setNewBooking(nb => ({\r\n+                ...nb,\r\n+                service: selectedService,\r\n+                addOns: [],\r\n+                amount: overrideAmount ? nb.amount : calculatePrice(selectedService, [], nb.carType),\r\n+              }));\r\n+            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+              {serviceOptions.map(s => (\r\n+                <option key={s.title} value={s.title}>{s.title}</option>\r\n+              ))}\r\n+            </select>\r\n+            {/* Car type dropdown */}\r\n+            <select required value={newBooking.carType} onChange={e => {\r\n+              const carType = e.target.value;\r\n+              setNewBooking(nb => ({\r\n+                ...nb,\r\n+                carType,\r\n+                amount: overrideAmount ? nb.amount : calculatePrice(nb.service, nb.addOns, carType),\r\n+              }));\r\n+            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+              {carTypeOptions.map(c => (\r\n+                <option key={c.label} value={c.label}>{c.label}</option>\r\n+              ))}\r\n+            </select>\r\n+            {/* Add-ons */}\r\n+            <div>\r\n+              <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n+              <div className=\"flex flex-wrap gap-3 mb-2\">\r\n+                {(() => {\r\n+                  let validAddOns = [];\r\n+                  if (newBooking.service === \"Premium Exterior Wash\") {\r\n+                    validAddOns = addOnOptions.filter(opt => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(opt.label));\r\n+                  } else if (newBooking.service === \"Complete Interior Detail\") {\r\n+                    validAddOns = addOnOptions.filter(opt => opt.label === \"Pet Hair Removal\");\r\n+                  } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n+                    validAddOns = addOnOptions;\r\n+                  }\r\n+                  return validAddOns.map(opt => (\r\n+                    <button\r\n+                      key={opt.label}\r\n+                      type=\"button\"\r\n+                      onClick={() => {\r\n+                        setNewBooking(nb => {\r\n+                          const exists = nb.addOns.find(a => a.label === opt.label);\r\n+                          const updated = exists\r\n+                            ? nb.addOns.filter(a => a.label !== opt.label)\r\n+                            : [...nb.addOns, opt];\r\n+                          return {\r\n+                            ...nb,\r\n+                            addOns: updated,\r\n+                            amount: overrideAmount ? nb.amount : calculatePrice(nb.service, updated, nb.carType),\r\n+                          };\r\n+                        });\r\n+                      }}\r\n+                      className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n+                    >\r\n+                      {opt.label}\r\n+                    </button>\r\n+                  ));\r\n+                })()}\r\n+              </div>\r\n+              {/* Combo discount message */}\r\n+              {(() => {\r\n+                let validAddOns = [];\r\n+                if (newBooking.service === \"Premium Exterior Wash\") {\r\n+                  validAddOns = newBooking.addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n+                } else if (newBooking.service === \"Complete Interior Detail\") {\r\n+                  validAddOns = newBooking.addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n+                } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n+                  validAddOns = newBooking.addOns;\r\n+                }\r\n+                return validAddOns.find(a => a.label === \"Clay Bar\") && validAddOns.find(a => a.label === \"Iron Removal\") ? (\r\n+                  <div className=\"text-xs text-blue-600 mt-2 font-semibold\">Combo discount applied (-$5)</div>\r\n+                ) : null;\r\n+              })()}\r\n+            </div>\r\n+            {/* Date */}\r\n+            <input type=\"date\" value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Time (enabled after selecting date) */}\r\n+            <input\r\n+              type=\"time\"\r\n+              disabled={!newBooking.date}\r\n+              value={newBooking.time}\r\n+              onChange={e => setNewBooking({ ...newBooking, time: e.target.value })}\r\n+              className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800 disabled:bg-gray-100\"\r\n+            />\r\n+            {/* Amount override */}\r\n+            <div className=\"space-y-2\">\r\n+              <label className=\"flex items-center gap-2 text-sm text-gray-700\">\r\n+                <input type=\"checkbox\" checked={overrideAmount} onChange={e => setOverrideAmount(e.target.checked)} />\r\n+                Enter custom amount\r\n+              </label>\r\n+              <input\r\n+                type=\"number\"\r\n+                placeholder=\"Amount\"\r\n+                value={newBooking.amount}\r\n+                onChange={e => setNewBooking({ ...newBooking, amount: Number(e.target.value || 0) })}\r\n+                className={`w-full px-4 py-3 rounded-lg border ${overrideAmount ? 'border-blue-500 bg-white' : 'border-blue-200 bg-gray-100'} text-gray-800`}\r\n+                readOnly={!overrideAmount}\r\n+                min={0}\r\n+              />\r\n+              {!overrideAmount && (\r\n+                <div className=\"text-xs text-gray-500\">Amount is auto-calculated from service, car type and add-ons.</div>\r\n+              )}\r\n+            </div>\r\n+            {/* Phone (numbers only) */}\r\n+            <input type=\"text\" placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n+              const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n+              setNewBooking({ ...newBooking, phone: val });\r\n+            }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Email */}\r\n+            <input type=\"text\" placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n+            {/* Location autocomplete (Google Places API) */}\r\n+            <input type=\"text\" placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n+              const val = e.target.value;\r\n+              setNewBooking({ ...newBooking, location: val });\r\n+              if (typeof window !== 'undefined' && val.length > 2) {\r\n+                try {\r\n+                  const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n+                  const data = await resp.json();\r\n+                  setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n+                } catch {}\r\n+              } else {\r\n+                setLocationSuggestions([]);\r\n+              }\r\n+            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n+            {/* Location suggestions dropdown */}\r\n+            {locationSuggestions.length > 0 && (\r\n+              <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n+                {locationSuggestions.map((sug, i) => (\r\n+                  <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n+                    setNewBooking(nb => ({ ...nb, location: sug }));\r\n+                    setLocationSuggestions([]);\r\n+                  }}>{sug}</div>\r\n+                ))}\r\n+              </div>\r\n+            )}\r\n+            {/* Status dropdown */}\r\n+            <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n+              <option value=\"pending\">Pending</option>\r\n+              <option value=\"complete\">Complete</option>\r\n+            </select>\r\n+            <div className=\"flex gap-4 mt-4 pb-4\">\r\n+              <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\" disabled={isSubmitting}>\r\n+                {isSubmitting ? (editBooking ? 'Saving...' : 'Adding...') : (editBooking ? 'Edit' : 'Add')}\r\n+              </button>\r\n+              <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={onClose} disabled={isSubmitting}>Cancel</button>\r\n+            </div>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1760846046951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,380 +135,45 @@\n           addOns: [],\r\n           carType: carTypeOptions[0].label,\r\n         });\r\n       } else {\r\n-        const resp = await fetch(\"/api/admin-add-booking\", {\r\n-          method: \"POST\",\r\n-          headers: { \"Content-Type\": \"application/json\" },\r\n-          body: JSON.stringify(payload),\r\n-        });\r\n-        const data = await resp.json();\r\n-        if (resp.ok && data.success) {\r\n-          setSubmitStatus(\"success\");\r\n-          setSubmitMsg(\"Booking saved to database!\");\r\n-          // Delegate closing and refetching to parent handler\r\n-          onAdd?.(payload);\r\n-          // Reset form state after successful add\r\n-          setOverrideAmount(false);\r\n-          setNewBooking({\r\n-            name: \"\",\r\n-            carName: \"\",\r\n-            service: serviceOptions[0].title,\r\n-            date: \"\",\r\n-            time: \"\",\r\n-            amount: serviceOptions[0].basePrice,\r\n-            status: \"pending\",\r\n-            phone: \"\",\r\n-            email: \"\",\r\n-            location: \"\",\r\n-            addOns: [],\r\n-            carType: carTypeOptions[0].label,\r\n-          });\r\n-        } else {\r\n-          setSubmitStatus(\"error\");\r\n-          setSubmitMsg(data.error || \"Failed to save booking\");\r\n-        }\r\n-      }\r\n-    } catch (err) {\r\n-      setSubmitStatus(\"error\");\r\n-      setSubmitMsg(err.message || \"Failed to save booking\");\r\n-    }\r\n-    setIsSubmitting(false);\r\n-  };\r\n+        // Map admin form to public booking API shape so emails are sent automatically\r\n+        const bookingPayload = {\r\n+          source: 'admin',\r\n+          status: newBooking.status || 'pending',\r\n+          service: {\r\n+            title: newBooking.service,\r\n+            totalPrice: computedAmount,\r\n+            addOns: Array.isArray(newBooking.addOns) ? newBooking.addOns : [],\r\n+          },\r\n+          vehicle: {\r\n+            name: newBooking.carName,\r\n+            type: newBooking.carType,\r\n+          },\r\n+          dateTime: {\r\n+            date: newBooking.date || 'N/A',\r\n+            time: newBooking.time || 'N/A',\r\n+          },\r\n+          location: {\r\n+            address: newBooking.location || 'N/A',\r\n+          },\r\n+          userInfo: {\r\n+            name: newBooking.name || 'N/A',\r\n+            email: newBooking.email || 'N/A',\r\n+            phone: newBooking.phone || 'N/A',\r\n+          },\r\n+        };\r\n \r\n-  return (\r\n-    <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-      <div\r\n-        className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n-        style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n-      >\r\n-        {/* Close (X) button */}\r\n-        <button\r\n-          type=\"button\"\r\n-          aria-label=\"Close\"\r\n-          onClick={onClose}\r\n-          className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n-          style={{ background: 'none', border: 'none' }}\r\n-        >\r\n-          &times;\r\n-        </button>\r\n-        <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n-        <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n-          {submitStatus && (\r\n-            <div className={`mb-2 text-center font-semibold ${submitStatus === 'success' ? 'text-green-600' : 'text-red-600'}`}>{submitMsg}</div>\r\n-          )}\r\n-          <form onSubmit={handleSubmit} className=\"space-y-5\">\r\n-            {/* Name */}\r\n-            <input type=\"text\" placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Car Name */}\r\n-            <input type=\"text\" placeholder=\"Car (e.g., Toyota Camry)\" value={newBooking.carName} onChange={e => setNewBooking({ ...newBooking, carName: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Service dropdown */}\r\n-            <select required value={newBooking.service} onChange={e => {\r\n-              const selectedService = e.target.value;\r\n-              setNewBooking(nb => ({\r\n-                ...nb,\r\n-                service: selectedService,\r\n-                addOns: [],\r\n-                amount: overrideAmount ? nb.amount : calculatePrice(selectedService, [], nb.carType),\r\n-              }));\r\n-            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-              {serviceOptions.map(s => (\r\n-                <option key={s.title} value={s.title}>{s.title}</option>\r\n-              ))}\r\n-            </select>\r\n-            {/* Car type dropdown */}\r\n-            <select required value={newBooking.carType} onChange={e => {\r\n-              const carType = e.target.value;\r\n-              setNewBooking(nb => ({\r\n-                ...nb,\r\n-                carType,\r\n-                amount: overrideAmount ? nb.amount : calculatePrice(nb.service, nb.addOns, carType),\r\n-              }));\r\n-            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-              {carTypeOptions.map(c => (\r\n-                <option key={c.label} value={c.label}>{c.label}</option>\r\n-              ))}\r\n-            </select>\r\n-            {/* Add-ons */}\r\n-            <div>\r\n-              <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n-              <div className=\"flex flex-wrap gap-3 mb-2\">\r\n-                {(() => {\r\n-                  let validAddOns = [];\r\n-                  if (newBooking.service === \"Premium Exterior Wash\") {\r\n-                    validAddOns = addOnOptions.filter(opt => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(opt.label));\r\n-                  } else if (newBooking.service === \"Complete Interior Detail\") {\r\n-                    validAddOns = addOnOptions.filter(opt => opt.label === \"Pet Hair Removal\");\r\n-                  } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n-                    validAddOns = addOnOptions;\r\n-                  }\r\n-                  return validAddOns.map(opt => (\r\n-                    <button\r\n-                      key={opt.label}\r\n-                      type=\"button\"\r\n-                      onClick={() => {\r\n-                        setNewBooking(nb => {\r\n-                          const exists = nb.addOns.find(a => a.label === opt.label);\r\n-                          const updated = exists\r\n-                            ? nb.addOns.filter(a => a.label !== opt.label)\r\n-                            : [...nb.addOns, opt];\r\n-                          return {\r\n-                            ...nb,\r\n-                            addOns: updated,\r\n-                            amount: overrideAmount ? nb.amount : calculatePrice(nb.service, updated, nb.carType),\r\n-                          };\r\n-                        });\r\n-                      }}\r\n-                      className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n-                    >\r\n-                      {opt.label}\r\n-                    </button>\r\n-                  ));\r\n-                })()}\r\n-              </div>\r\n-              {/* Combo discount message */}\r\n-              {(() => {\r\n-                let validAddOns = [];\r\n-                if (newBooking.service === \"Premium Exterior Wash\") {\r\n-                  validAddOns = newBooking.addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n-                } else if (newBooking.service === \"Complete Interior Detail\") {\r\n-                  validAddOns = newBooking.addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n-                } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n-                  validAddOns = newBooking.addOns;\r\n-                }\r\n-                return validAddOns.find(a => a.label === \"Clay Bar\") && validAddOns.find(a => a.label === \"Iron Removal\") ? (\r\n-                  <div className=\"text-xs text-blue-600 mt-2 font-semibold\">Combo discount applied (-$5)</div>\r\n-                ) : null;\r\n-              })()}\r\n-            </div>\r\n-            {/* Date */}\r\n-            <input type=\"date\" value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Time (enabled after selecting date) */}\r\n-            <input\r\n-              type=\"time\"\r\n-              disabled={!newBooking.date}\r\n-              value={newBooking.time}\r\n-              onChange={e => setNewBooking({ ...newBooking, time: e.target.value })}\r\n-              className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800 disabled:bg-gray-100\"\r\n-            />\r\n-            {/* Amount override */}\r\n-            <div className=\"space-y-2\">\r\n-              <label className=\"flex items-center gap-2 text-sm text-gray-700\">\r\n-                <input type=\"checkbox\" checked={overrideAmount} onChange={e => setOverrideAmount(e.target.checked)} />\r\n-                Enter custom amount\r\n-              </label>\r\n-              <input\r\n-                type=\"number\"\r\n-                placeholder=\"Amount\"\r\n-                value={newBooking.amount}\r\n-                onChange={e => setNewBooking({ ...newBooking, amount: Number(e.target.value || 0) })}\r\n-                className={`w-full px-4 py-3 rounded-lg border ${overrideAmount ? 'border-blue-500 bg-white' : 'border-blue-200 bg-gray-100'} text-gray-800`}\r\n-                readOnly={!overrideAmount}\r\n-                min={0}\r\n-              />\r\n-              {!overrideAmount && (\r\n-                <div className=\"text-xs text-gray-500\">Amount is auto-calculated from service, car type and add-ons.</div>\r\n-              )}\r\n-            </div>\r\n-            {/* Phone (numbers only) */}\r\n-            <input type=\"text\" placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n-              const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n-              setNewBooking({ ...newBooking, phone: val });\r\n-            }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Email */}\r\n-            <input type=\"text\" placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Location autocomplete (Google Places API) */}\r\n-            <input type=\"text\" placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n-              const val = e.target.value;\r\n-              setNewBooking({ ...newBooking, location: val });\r\n-              if (typeof window !== 'undefined' && val.length > 2) {\r\n-                try {\r\n-                  const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n-                  const data = await resp.json();\r\n-                  setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n-                } catch {}\r\n-              } else {\r\n-                setLocationSuggestions([]);\r\n-              }\r\n-            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n-            {/* Location suggestions dropdown */}\r\n-            {locationSuggestions.length > 0 && (\r\n-              <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n-                {locationSuggestions.map((sug, i) => (\r\n-                  <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n-                    setNewBooking(nb => ({ ...nb, location: sug }));\r\n-                    setLocationSuggestions([]);\r\n-                  }}>{sug}</div>\r\n-                ))}\r\n-              </div>\r\n-            )}\r\n-            {/* Status dropdown */}\r\n-            <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-              <option value=\"pending\">Pending</option>\r\n-              <option value=\"complete\">Complete</option>\r\n-            </select>\r\n-            <div className=\"flex gap-4 mt-4 pb-4\">\r\n-              <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\" disabled={isSubmitting}>\r\n-                {isSubmitting ? (editBooking ? 'Saving...' : 'Adding...') : (editBooking ? 'Edit' : 'Add')}\r\n-              </button>\r\n-              <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={onClose} disabled={isSubmitting}>Cancel</button>\r\n-            </div>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import { useState, useEffect } from \"react\";\r\n-\r\n-export default function AdminAddBooking({ open, onClose, onAdd, editBooking, onEdit }) {\r\n-  const [submitStatus, setSubmitStatus] = useState(null); // null | 'success' | 'error'\r\n-  const [submitMsg, setSubmitMsg] = useState(\"\");\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [overrideAmount, setOverrideAmount] = useState(false);\r\n-  const serviceOptions = [\r\n-    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: true },\r\n-    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n-    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n-  ];\r\n-  const addOnOptions = [\r\n-    { label: \"Pet Hair Removal\", price: 20 },\r\n-    { label: \"Clay Bar\", price: 20 },\r\n-    { label: \"Iron Removal\", price: 25 },\r\n-    { label: \"Ceramic Sealant\", price: 10 },\r\n-  ];\r\n-  const carTypeOptions = [\r\n-    { label: \"Sedan\", price: 0 },\r\n-    { label: \"SUV\", price: 10 },\r\n-    { label: \"Truck\", price: 20 },\r\n-  ];\r\n-  const [newBooking, setNewBooking] = useState({\r\n-    name: \"\",\r\n-    carName: \"\",\r\n-    service: serviceOptions[0].title,\r\n-    date: \"\",\r\n-    time: \"\",\r\n-    amount: serviceOptions[0].basePrice,\r\n-    status: \"pending\",\r\n-    phone: \"\",\r\n-    email: \"\",\r\n-    location: \"\",\r\n-    addOns: [],\r\n-    carType: carTypeOptions[0].label,\r\n-  });\r\n-\r\n-  // Prefill form in edit mode\r\n-  useEffect(() => {\r\n-    if (editBooking && open) {\r\n-      setNewBooking({\r\n-        ...editBooking,\r\n-        amount: editBooking.amount || serviceOptions.find(s => s.title === editBooking.service)?.basePrice || serviceOptions[0].basePrice,\r\n-      });\r\n-    } else if (open && !editBooking) {\r\n-      setNewBooking({\r\n-        name: \"\",\r\n-        carName: \"\",\r\n-        service: serviceOptions[0].title,\r\n-        date: \"\",\r\n-        time: \"\",\r\n-        amount: serviceOptions[0].basePrice,\r\n-        status: \"pending\",\r\n-        phone: \"\",\r\n-        email: \"\",\r\n-        location: \"\",\r\n-        addOns: [],\r\n-        carType: carTypeOptions[0].label,\r\n-      });\r\n-    }\r\n-  }, [editBooking, open]);\r\n-  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n-  if (!open) return null;\r\n-  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n-    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n-    let base = service ? service.basePrice : 0;\r\n-    if (serviceTitle === \"Complete Interior Detail\") {\r\n-      if (carTypeLabel === \"SUV\") base = 130;\r\n-      else if (carTypeLabel === \"Truck\") base = 140;\r\n-      else base = 110;\r\n-    } else {\r\n-      const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n-      if (carType) base += carType.price;\r\n-    }\r\n-\r\n-    let addOnTotal = 0;\r\n-    if (service && service.hasAddOns && addOns.length) {\r\n-      let filteredAddOns = [];\r\n-      if (serviceTitle === \"Premium Exterior Wash\") {\r\n-        filteredAddOns = addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n-      } else if (serviceTitle === \"Complete Interior Detail\") {\r\n-        filteredAddOns = addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n-      } else if (serviceTitle === \"Ultimate Full Detail\") {\r\n-        filteredAddOns = addOns;\r\n-      }\r\n-      addOnTotal = filteredAddOns.reduce((sum, a) => sum + a.price, 0);\r\n-      const clay = filteredAddOns.find(a => a.label === \"Clay Bar\");\r\n-      const iron = filteredAddOns.find(a => a.label === \"Iron Removal\");\r\n-      if (clay && iron) addOnTotal -= 5;\r\n-    }\r\n-\r\n-    return base + addOnTotal;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-    setIsSubmitting(true);\r\n-    // Respect overrideAmount: if enabled, use user-entered amount; else auto-calc\r\n-    const computedAmount = overrideAmount\r\n-      ? Number(newBooking.amount || 0)\r\n-      : calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType);\r\n-    // Fill empty fields with \"N/A\" before saving\r\n-    const payload = {\r\n-      ...newBooking,\r\n-      name: newBooking.name.trim() || \"N/A\",\r\n-      carName: newBooking.carName.trim() || \"N/A\",\r\n-      phone: newBooking.phone.trim() || \"N/A\",\r\n-      email: newBooking.email.trim() || \"N/A\",\r\n-      location: newBooking.location.trim() || \"N/A\",\r\n-      date: newBooking.date || \"N/A\",\r\n-      time: newBooking.time || \"N/A\",\r\n-      amount: computedAmount,\r\n-    };\r\n-    setSubmitStatus(null);\r\n-    setSubmitMsg(\"\");\r\n-    try {\r\n-      if (editBooking && onEdit) {\r\n-        await onEdit(payload);\r\n-        setSubmitStatus(\"success\");\r\n-        setSubmitMsg(\"Booking updated!\");\r\n-        // Reset form state after successful edit; parent will close modal\r\n-        setOverrideAmount(false);\r\n-        setNewBooking({\r\n-          name: \"\",\r\n-          carName: \"\",\r\n-          service: serviceOptions[0].title,\r\n-          date: \"\",\r\n-          time: \"\",\r\n-          amount: serviceOptions[0].basePrice,\r\n-          status: \"pending\",\r\n-          phone: \"\",\r\n-          email: \"\",\r\n-          location: \"\",\r\n-          addOns: [],\r\n-          carType: carTypeOptions[0].label,\r\n+        const resp = await fetch('/api/booking', {\r\n+          method: 'POST',\r\n+          headers: { 'Content-Type': 'application/json' },\r\n+          body: JSON.stringify(bookingPayload),\r\n         });\r\n-      } else {\r\n-        const resp = await fetch(\"/api/admin-add-booking\", {\r\n-          method: \"POST\",\r\n-          headers: { \"Content-Type\": \"application/json\" },\r\n-          body: JSON.stringify(payload),\r\n-        });\r\n         const data = await resp.json();\r\n-        if (resp.ok && data.success) {\r\n-          setSubmitStatus(\"success\");\r\n-          setSubmitMsg(\"Booking saved to database!\");\r\n-          // Delegate closing and refetching to parent handler\r\n+        if (resp.ok) {\r\n+          setSubmitStatus('success');\r\n+          setSubmitMsg('Booking created. Emails sent (if email provided).');\r\n           onAdd?.(payload);\r\n-          // Reset form state after successful add\r\n           setOverrideAmount(false);\r\n           setNewBooking({\r\n             name: \"\",\r\n             carName: \"\",\r\n@@ -523,10 +188,10 @@\n             addOns: [],\r\n             carType: carTypeOptions[0].label,\r\n           });\r\n         } else {\r\n-          setSubmitStatus(\"error\");\r\n-          setSubmitMsg(data.error || \"Failed to save booking\");\r\n+          setSubmitStatus('error');\r\n+          setSubmitMsg(data?.message || data?.error || 'Failed to create booking');\r\n         }\r\n       }\r\n     } catch (err) {\r\n       setSubmitStatus(\"error\");\r\n@@ -717,364 +382,4 @@\n       </div>\r\n     </div>\r\n   );\r\n }\r\n-import { useState, useEffect } from \"react\";\r\n-\r\n-export default function AdminAddBooking({ open, onClose, onAdd, editBooking, onEdit }) {\r\n-  const [submitStatus, setSubmitStatus] = useState(null); // null | 'success' | 'error'\r\n-  const [submitMsg, setSubmitMsg] = useState(\"\");\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [overrideAmount, setOverrideAmount] = useState(false);\r\n-  const serviceOptions = [\r\n-    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: true },\r\n-    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n-    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n-  ];\r\n-  const addOnOptions = [\r\n-    { label: \"Pet Hair Removal\", price: 20 },\r\n-    { label: \"Clay Bar\", price: 20 },\r\n-    { label: \"Iron Removal\", price: 25 },\r\n-    { label: \"Ceramic Sealant\", price: 10 },\r\n-  ];\r\n-  const carTypeOptions = [\r\n-    { label: \"Sedan\", price: 0 },\r\n-    { label: \"SUV\", price: 10 },\r\n-    { label: \"Truck\", price: 20 },\r\n-  ];\r\n-  const [newBooking, setNewBooking] = useState({\r\n-    name: \"\",\r\n-    carName: \"\",\r\n-    service: serviceOptions[0].title,\r\n-    date: \"\",\r\n-    time: \"\",\r\n-    amount: serviceOptions[0].basePrice,\r\n-    status: \"pending\",\r\n-    phone: \"\",\r\n-    email: \"\",\r\n-    location: \"\",\r\n-    addOns: [],\r\n-    carType: carTypeOptions[0].label,\r\n-  });\r\n-\r\n-  // Prefill form in edit mode\r\n-  useEffect(() => {\r\n-    if (editBooking && open) {\r\n-      setNewBooking({\r\n-        ...editBooking,\r\n-        amount: editBooking.amount || serviceOptions.find(s => s.title === editBooking.service)?.basePrice || serviceOptions[0].basePrice,\r\n-      });\r\n-    } else if (open && !editBooking) {\r\n-      setNewBooking({\r\n-        name: \"\",\r\n-        carName: \"\",\r\n-        service: serviceOptions[0].title,\r\n-        date: \"\",\r\n-        time: \"\",\r\n-        amount: serviceOptions[0].basePrice,\r\n-        status: \"pending\",\r\n-        phone: \"\",\r\n-        email: \"\",\r\n-        location: \"\",\r\n-        addOns: [],\r\n-        carType: carTypeOptions[0].label,\r\n-      });\r\n-    }\r\n-  }, [editBooking, open]);\r\n-  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n-  if (!open) return null;\r\n-  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n-    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n-    let base = service ? service.basePrice : 0;\r\n-    if (serviceTitle === \"Complete Interior Detail\") {\r\n-      if (carTypeLabel === \"SUV\") base = 130;\r\n-      else if (carTypeLabel === \"Truck\") base = 140;\r\n-      else base = 110;\r\n-    } else {\r\n-      const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n-      if (carType) base += carType.price;\r\n-    }\r\n-\r\n-    let addOnTotal = 0;\r\n-    if (service && service.hasAddOns && addOns.length) {\r\n-      let filteredAddOns = [];\r\n-      if (serviceTitle === \"Premium Exterior Wash\") {\r\n-        filteredAddOns = addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n-      } else if (serviceTitle === \"Complete Interior Detail\") {\r\n-        filteredAddOns = addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n-      } else if (serviceTitle === \"Ultimate Full Detail\") {\r\n-        filteredAddOns = addOns;\r\n-      }\r\n-      addOnTotal = filteredAddOns.reduce((sum, a) => sum + a.price, 0);\r\n-      const clay = filteredAddOns.find(a => a.label === \"Clay Bar\");\r\n-      const iron = filteredAddOns.find(a => a.label === \"Iron Removal\");\r\n-      if (clay && iron) addOnTotal -= 5;\r\n-    }\r\n-\r\n-    return base + addOnTotal;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-    setIsSubmitting(true);\r\n-    // Respect overrideAmount: if enabled, use user-entered amount; else auto-calc\r\n-    const computedAmount = overrideAmount\r\n-      ? Number(newBooking.amount || 0)\r\n-      : calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType);\r\n-    // Fill empty fields with \"N/A\" before saving\r\n-    const payload = {\r\n-      ...newBooking,\r\n-      name: newBooking.name.trim() || \"N/A\",\r\n-      carName: newBooking.carName.trim() || \"N/A\",\r\n-      phone: newBooking.phone.trim() || \"N/A\",\r\n-      email: newBooking.email.trim() || \"N/A\",\r\n-      location: newBooking.location.trim() || \"N/A\",\r\n-      date: newBooking.date || \"N/A\",\r\n-      time: newBooking.time || \"N/A\",\r\n-      amount: computedAmount,\r\n-    };\r\n-    setSubmitStatus(null);\r\n-    setSubmitMsg(\"\");\r\n-    try {\r\n-      if (editBooking && onEdit) {\r\n-        await onEdit(payload);\r\n-        setSubmitStatus(\"success\");\r\n-        setSubmitMsg(\"Booking updated!\");\r\n-        // Reset form state after successful edit; parent will close modal\r\n-        setOverrideAmount(false);\r\n-        setNewBooking({\r\n-          name: \"\",\r\n-          carName: \"\",\r\n-          service: serviceOptions[0].title,\r\n-          date: \"\",\r\n-          time: \"\",\r\n-          amount: serviceOptions[0].basePrice,\r\n-          status: \"pending\",\r\n-          phone: \"\",\r\n-          email: \"\",\r\n-          location: \"\",\r\n-          addOns: [],\r\n-          carType: carTypeOptions[0].label,\r\n-        });\r\n-      } else {\r\n-        const resp = await fetch(\"/api/admin-add-booking\", {\r\n-          method: \"POST\",\r\n-          headers: { \"Content-Type\": \"application/json\" },\r\n-          body: JSON.stringify(payload),\r\n-        });\r\n-        const data = await resp.json();\r\n-        if (resp.ok && data.success) {\r\n-          setSubmitStatus(\"success\");\r\n-          setSubmitMsg(\"Booking saved to database!\");\r\n-          // Delegate closing and refetching to parent handler\r\n-          onAdd?.(payload);\r\n-          // Reset form state after successful add\r\n-          setOverrideAmount(false);\r\n-          setNewBooking({\r\n-            name: \"\",\r\n-            carName: \"\",\r\n-            service: serviceOptions[0].title,\r\n-            date: \"\",\r\n-            time: \"\",\r\n-            amount: serviceOptions[0].basePrice,\r\n-            status: \"pending\",\r\n-            phone: \"\",\r\n-            email: \"\",\r\n-            location: \"\",\r\n-            addOns: [],\r\n-            carType: carTypeOptions[0].label,\r\n-          });\r\n-        } else {\r\n-          setSubmitStatus(\"error\");\r\n-          setSubmitMsg(data.error || \"Failed to save booking\");\r\n-        }\r\n-      }\r\n-    } catch (err) {\r\n-      setSubmitStatus(\"error\");\r\n-      setSubmitMsg(err.message || \"Failed to save booking\");\r\n-    }\r\n-    setIsSubmitting(false);\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-      <div\r\n-        className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n-        style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n-      >\r\n-        {/* Close (X) button */}\r\n-        <button\r\n-          type=\"button\"\r\n-          aria-label=\"Close\"\r\n-          onClick={onClose}\r\n-          className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n-          style={{ background: 'none', border: 'none' }}\r\n-        >\r\n-          &times;\r\n-        </button>\r\n-        <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n-        <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n-          {submitStatus && (\r\n-            <div className={`mb-2 text-center font-semibold ${submitStatus === 'success' ? 'text-green-600' : 'text-red-600'}`}>{submitMsg}</div>\r\n-          )}\r\n-          <form onSubmit={handleSubmit} className=\"space-y-5\">\r\n-            {/* Name */}\r\n-            <input type=\"text\" placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Car Name */}\r\n-            <input type=\"text\" placeholder=\"Car (e.g., Toyota Camry)\" value={newBooking.carName} onChange={e => setNewBooking({ ...newBooking, carName: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Service dropdown */}\r\n-            <select required value={newBooking.service} onChange={e => {\r\n-              const selectedService = e.target.value;\r\n-              setNewBooking(nb => ({\r\n-                ...nb,\r\n-                service: selectedService,\r\n-                addOns: [],\r\n-                amount: overrideAmount ? nb.amount : calculatePrice(selectedService, [], nb.carType),\r\n-              }));\r\n-            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-              {serviceOptions.map(s => (\r\n-                <option key={s.title} value={s.title}>{s.title}</option>\r\n-              ))}\r\n-            </select>\r\n-            {/* Car type dropdown */}\r\n-            <select required value={newBooking.carType} onChange={e => {\r\n-              const carType = e.target.value;\r\n-              setNewBooking(nb => ({\r\n-                ...nb,\r\n-                carType,\r\n-                amount: overrideAmount ? nb.amount : calculatePrice(nb.service, nb.addOns, carType),\r\n-              }));\r\n-            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-              {carTypeOptions.map(c => (\r\n-                <option key={c.label} value={c.label}>{c.label}</option>\r\n-              ))}\r\n-            </select>\r\n-            {/* Add-ons */}\r\n-            <div>\r\n-              <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n-              <div className=\"flex flex-wrap gap-3 mb-2\">\r\n-                {(() => {\r\n-                  let validAddOns = [];\r\n-                  if (newBooking.service === \"Premium Exterior Wash\") {\r\n-                    validAddOns = addOnOptions.filter(opt => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(opt.label));\r\n-                  } else if (newBooking.service === \"Complete Interior Detail\") {\r\n-                    validAddOns = addOnOptions.filter(opt => opt.label === \"Pet Hair Removal\");\r\n-                  } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n-                    validAddOns = addOnOptions;\r\n-                  }\r\n-                  return validAddOns.map(opt => (\r\n-                    <button\r\n-                      key={opt.label}\r\n-                      type=\"button\"\r\n-                      onClick={() => {\r\n-                        setNewBooking(nb => {\r\n-                          const exists = nb.addOns.find(a => a.label === opt.label);\r\n-                          const updated = exists\r\n-                            ? nb.addOns.filter(a => a.label !== opt.label)\r\n-                            : [...nb.addOns, opt];\r\n-                          return {\r\n-                            ...nb,\r\n-                            addOns: updated,\r\n-                            amount: overrideAmount ? nb.amount : calculatePrice(nb.service, updated, nb.carType),\r\n-                          };\r\n-                        });\r\n-                      }}\r\n-                      className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n-                    >\r\n-                      {opt.label}\r\n-                    </button>\r\n-                  ));\r\n-                })()}\r\n-              </div>\r\n-              {/* Combo discount message */}\r\n-              {(() => {\r\n-                let validAddOns = [];\r\n-                if (newBooking.service === \"Premium Exterior Wash\") {\r\n-                  validAddOns = newBooking.addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n-                } else if (newBooking.service === \"Complete Interior Detail\") {\r\n-                  validAddOns = newBooking.addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n-                } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n-                  validAddOns = newBooking.addOns;\r\n-                }\r\n-                return validAddOns.find(a => a.label === \"Clay Bar\") && validAddOns.find(a => a.label === \"Iron Removal\") ? (\r\n-                  <div className=\"text-xs text-blue-600 mt-2 font-semibold\">Combo discount applied (-$5)</div>\r\n-                ) : null;\r\n-              })()}\r\n-            </div>\r\n-            {/* Date */}\r\n-            <input type=\"date\" value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Time (enabled after selecting date) */}\r\n-            <input\r\n-              type=\"time\"\r\n-              disabled={!newBooking.date}\r\n-              value={newBooking.time}\r\n-              onChange={e => setNewBooking({ ...newBooking, time: e.target.value })}\r\n-              className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800 disabled:bg-gray-100\"\r\n-            />\r\n-            {/* Amount override */}\r\n-            <div className=\"space-y-2\">\r\n-              <label className=\"flex items-center gap-2 text-sm text-gray-700\">\r\n-                <input type=\"checkbox\" checked={overrideAmount} onChange={e => setOverrideAmount(e.target.checked)} />\r\n-                Enter custom amount\r\n-              </label>\r\n-              <input\r\n-                type=\"number\"\r\n-                placeholder=\"Amount\"\r\n-                value={newBooking.amount}\r\n-                onChange={e => setNewBooking({ ...newBooking, amount: Number(e.target.value || 0) })}\r\n-                className={`w-full px-4 py-3 rounded-lg border ${overrideAmount ? 'border-blue-500 bg-white' : 'border-blue-200 bg-gray-100'} text-gray-800`}\r\n-                readOnly={!overrideAmount}\r\n-                min={0}\r\n-              />\r\n-              {!overrideAmount && (\r\n-                <div className=\"text-xs text-gray-500\">Amount is auto-calculated from service, car type and add-ons.</div>\r\n-              )}\r\n-            </div>\r\n-            {/* Phone (numbers only) */}\r\n-            <input type=\"text\" placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n-              const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n-              setNewBooking({ ...newBooking, phone: val });\r\n-            }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Email */}\r\n-            <input type=\"email\" placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n-            {/* Location autocomplete (Google Places API) */}\r\n-            <input type=\"text\" placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n-              const val = e.target.value;\r\n-              setNewBooking({ ...newBooking, location: val });\r\n-              if (typeof window !== 'undefined' && val.length > 2) {\r\n-                try {\r\n-                  const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n-                  const data = await resp.json();\r\n-                  setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n-                } catch {}\r\n-              } else {\r\n-                setLocationSuggestions([]);\r\n-              }\r\n-            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n-            {/* Location suggestions dropdown */}\r\n-            {locationSuggestions.length > 0 && (\r\n-              <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n-                {locationSuggestions.map((sug, i) => (\r\n-                  <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n-                    setNewBooking(nb => ({ ...nb, location: sug }));\r\n-                    setLocationSuggestions([]);\r\n-                  }}>{sug}</div>\r\n-                ))}\r\n-              </div>\r\n-            )}\r\n-            {/* Status dropdown */}\r\n-            <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n-              <option value=\"pending\">Pending</option>\r\n-              <option value=\"complete\">Complete</option>\r\n-            </select>\r\n-            <div className=\"flex gap-4 mt-4 pb-4\">\r\n-              <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\" disabled={isSubmitting}>\r\n-                {isSubmitting ? (editBooking ? 'Saving...' : 'Adding...') : (editBooking ? 'Edit' : 'Add')}\r\n-              </button>\r\n-              <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={onClose} disabled={isSubmitting}>Cancel</button>\r\n-            </div>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n"
                }
            ],
            "date": 1760672897261,
            "name": "Commit-0",
            "content": "import { useState } from \"react\";\r\n\r\nexport default function AdminAddBooking({ open, onClose, onAdd }) {\r\n  if (!open) return null;\r\n\r\n  // Service/add-on logic (scoped to this component)\r\n  const serviceOptions = [\r\n    { title: \"Premium Exterior Wash\", basePrice: 50, hasAddOns: true },\r\n    { title: \"Complete Interior Detail\", basePrice: 110, hasAddOns: true },\r\n    { title: \"Ultimate Full Detail\", basePrice: 150, hasAddOns: true },\r\n  ];\r\n  const addOnOptions = [\r\n    { label: \"Pet Hair Removal\", price: 20 },\r\n    { label: \"Clay Bar\", price: 20 },\r\n    { label: \"Iron Removal\", price: 25 },\r\n    { label: \"Ceramic Sealant\", price: 10 },\r\n  ];\r\n  const carTypeOptions = [\r\n    { label: \"Sedan\", price: 0 },\r\n    { label: \"SUV\", price: 10 },\r\n    { label: \"Truck\", price: 20 },\r\n  ];\r\n\r\n  const [newBooking, setNewBooking] = useState({\r\n    name: \"\",\r\n    service: serviceOptions[0].title,\r\n    date: \"\",\r\n    time: \"\",\r\n    amount: serviceOptions[0].basePrice,\r\n    status: \"pending\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    location: \"\",\r\n    addOns: [],\r\n    carType: carTypeOptions[0].label,\r\n  });\r\n  const [locationSuggestions, setLocationSuggestions] = useState([]);\r\n\r\n  const calculatePrice = (serviceTitle, addOns, carTypeLabel) => {\r\n    const service = serviceOptions.find(s => s.title === serviceTitle);\r\n    let base = service ? service.basePrice : 0;\r\n    if (serviceTitle === \"Complete Interior Detail\") {\r\n      if (carTypeLabel === \"SUV\") base = 130;\r\n      else if (carTypeLabel === \"Truck\") base = 140;\r\n      else base = 110;\r\n    } else {\r\n      const carType = carTypeOptions.find(c => c.label === carTypeLabel);\r\n      if (carType) base += carType.price;\r\n    }\r\n\r\n    let addOnTotal = 0;\r\n    if (service && service.hasAddOns && addOns.length) {\r\n      let filteredAddOns = [];\r\n      if (serviceTitle === \"Premium Exterior Wash\") {\r\n        filteredAddOns = addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n      } else if (serviceTitle === \"Complete Interior Detail\") {\r\n        filteredAddOns = addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n      } else if (serviceTitle === \"Ultimate Full Detail\") {\r\n        filteredAddOns = addOns;\r\n      }\r\n      addOnTotal = filteredAddOns.reduce((sum, a) => sum + a.price, 0);\r\n      const clay = filteredAddOns.find(a => a.label === \"Clay Bar\");\r\n      const iron = filteredAddOns.find(a => a.label === \"Iron Removal\");\r\n      if (clay && iron) addOnTotal -= 5;\r\n    }\r\n\r\n    return base + addOnTotal;\r\n  };\r\n\r\n  const handleAddBooking = async (e) => {\r\n    e.preventDefault();\r\n    const payload = {\r\n      ...newBooking,\r\n      amount: calculatePrice(newBooking.service, newBooking.addOns, newBooking.carType),\r\n    };\r\n    onAdd?.(payload);\r\n    // Reset and close\r\n    setNewBooking({\r\n      name: \"\",\r\n      service: serviceOptions[0].title,\r\n      date: \"\",\r\n      time: \"\",\r\n      amount: serviceOptions[0].basePrice,\r\n      status: \"pending\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      location: \"\",\r\n      addOns: [],\r\n      carType: carTypeOptions[0].label,\r\n    });\r\n    onClose?.();\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n      <div\r\n        className=\"bg-white rounded-2xl shadow-xl w-full max-w-md md:max-w-lg border border-blue-100 flex flex-col relative\"\r\n        style={{ maxHeight: '90vh', minHeight: '60vh', width: '100%', margin: '0 1rem' }}\r\n      >\r\n        {/* Close (X) button */}\r\n        <button\r\n          type=\"button\"\r\n          aria-label=\"Close\"\r\n          onClick={onClose}\r\n          className=\"absolute top-4 right-4 text-gray-500 hover:text-blue-600 text-2xl font-bold z-10\"\r\n          style={{ background: 'none', border: 'none' }}\r\n        >\r\n          &times;\r\n        </button>\r\n        <h3 className=\"text-xl font-bold mb-4 text-center mt-6\" style={{ color: '#888' }}>Add Booking</h3>\r\n        <div className=\"overflow-y-auto px-2 pb-2\" style={{ maxHeight: '70vh' }}>\r\n          <form onSubmit={handleAddBooking} className=\"space-y-5\">\r\n            {/* Name */}\r\n            <input type=\"text\" required placeholder=\"Name\" value={newBooking.name} onChange={e => setNewBooking({ ...newBooking, name: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n            {/* Service dropdown */}\r\n            <select required value={newBooking.service} onChange={e => {\r\n              const selectedService = e.target.value;\r\n              setNewBooking(nb => ({\r\n                ...nb,\r\n                service: selectedService,\r\n                addOns: [],\r\n                amount: calculatePrice(selectedService, [], nb.carType),\r\n              }));\r\n            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n              {serviceOptions.map(s => (\r\n                <option key={s.title} value={s.title}>{s.title}</option>\r\n              ))}\r\n            </select>\r\n            {/* Car type dropdown */}\r\n            <select required value={newBooking.carType} onChange={e => {\r\n              const carType = e.target.value;\r\n              setNewBooking(nb => ({\r\n                ...nb,\r\n                carType,\r\n                amount: calculatePrice(nb.service, nb.addOns, carType),\r\n              }));\r\n            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n              {carTypeOptions.map(c => (\r\n                <option key={c.label} value={c.label}>{c.label}</option>\r\n              ))}\r\n            </select>\r\n            {/* Add-ons */}\r\n            <div>\r\n              <div className=\"text-base font-semibold text-gray-700 mb-2 text-left\">Add-Ons</div>\r\n              <div className=\"flex flex-wrap gap-3 mb-2\">\r\n                {(() => {\r\n                  let validAddOns = [];\r\n                  if (newBooking.service === \"Premium Exterior Wash\") {\r\n                    validAddOns = addOnOptions.filter(opt => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(opt.label));\r\n                  } else if (newBooking.service === \"Complete Interior Detail\") {\r\n                    validAddOns = addOnOptions.filter(opt => opt.label === \"Pet Hair Removal\");\r\n                  } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n                    validAddOns = addOnOptions;\r\n                  }\r\n                  return validAddOns.map(opt => (\r\n                    <button\r\n                      key={opt.label}\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        setNewBooking(nb => {\r\n                          const exists = nb.addOns.find(a => a.label === opt.label);\r\n                          const updated = exists\r\n                            ? nb.addOns.filter(a => a.label !== opt.label)\r\n                            : [...nb.addOns, opt];\r\n                          return {\r\n                            ...nb,\r\n                            addOns: updated,\r\n                            amount: calculatePrice(nb.service, updated, nb.carType),\r\n                          };\r\n                        });\r\n                      }}\r\n                      className={`px-5 py-2 rounded-full border font-medium transition-all ${newBooking.addOns.find(a => a.label === opt.label) ? \"bg-blue-600 text-white border-blue-600 shadow\" : \"bg-white border-gray-300 text-blue-600 hover:bg-blue-50\"}`}\r\n                    >\r\n                      {opt.label}\r\n                    </button>\r\n                  ));\r\n                })()}\r\n              </div>\r\n              {/* Combo discount message */}\r\n              {(() => {\r\n                let validAddOns = [];\r\n                if (newBooking.service === \"Premium Exterior Wash\") {\r\n                  validAddOns = newBooking.addOns.filter(a => [\"Clay Bar\", \"Iron Removal\", \"Ceramic Sealant\"].includes(a.label));\r\n                } else if (newBooking.service === \"Complete Interior Detail\") {\r\n                  validAddOns = newBooking.addOns.filter(a => a.label === \"Pet Hair Removal\");\r\n                } else if (newBooking.service === \"Ultimate Full Detail\") {\r\n                  validAddOns = newBooking.addOns;\r\n                }\r\n                return validAddOns.find(a => a.label === \"Clay Bar\") && validAddOns.find(a => a.label === \"Iron Removal\") ? (\r\n                  <div className=\"text-xs text-blue-600 mt-2 font-semibold\">Combo discount applied (-$5)</div>\r\n                ) : null;\r\n              })()}\r\n            </div>\r\n            {/* Date */}\r\n            <input type=\"date\" required value={newBooking.date} onChange={e => setNewBooking({ ...newBooking, date: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n            {/* Time (enabled after selecting date) */}\r\n            <input\r\n              type=\"time\"\r\n              required\r\n              disabled={!newBooking.date}\r\n              value={newBooking.time}\r\n              onChange={e => setNewBooking({ ...newBooking, time: e.target.value })}\r\n              className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800 disabled:bg-gray-100\"\r\n            />\r\n            {/* Amount (auto-calculated, read-only) */}\r\n            <input type=\"number\" required placeholder=\"Amount\" value={newBooking.amount} readOnly className=\"w-full px-4 py-3 rounded-lg border border-blue-200 bg-gray-100 text-gray-800\" />\r\n            {/* Phone (numbers only) */}\r\n            <input type=\"text\" required placeholder=\"Phone\" value={newBooking.phone} onChange={e => {\r\n              const val = e.target.value.replace(/[^0-9]/g, \"\");\r\n              setNewBooking({ ...newBooking, phone: val });\r\n            }} maxLength={10} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n            {/* Email */}\r\n            <input type=\"email\" required placeholder=\"Email\" value={newBooking.email} onChange={e => setNewBooking({ ...newBooking, email: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" />\r\n            {/* Location autocomplete (Google Places API) */}\r\n            <input type=\"text\" required placeholder=\"Location\" value={newBooking.location} onChange={async e => {\r\n              const val = e.target.value;\r\n              setNewBooking({ ...newBooking, location: val });\r\n              if (typeof window !== 'undefined' && val.length > 2) {\r\n                try {\r\n                  const resp = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${encodeURIComponent(val)}&key=YOUR_GOOGLE_API_KEY&types=(cities)`);\r\n                  const data = await resp.json();\r\n                  setLocationSuggestions(data.predictions?.map(p => p.description) || []);\r\n                } catch {}\r\n              } else {\r\n                setLocationSuggestions([]);\r\n              }\r\n            }} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\" autoComplete=\"off\" />\r\n            {/* Location suggestions dropdown */}\r\n            {locationSuggestions.length > 0 && (\r\n              <div className=\"bg-white border border-blue-200 rounded-lg shadow mt-1\">\r\n                {locationSuggestions.map((sug, i) => (\r\n                  <div key={i} className=\"px-4 py-2 cursor-pointer hover:bg-blue-50\" onClick={() => {\r\n                    setNewBooking(nb => ({ ...nb, location: sug }));\r\n                    setLocationSuggestions([]);\r\n                  }}>{sug}</div>\r\n                ))}\r\n              </div>\r\n            )}\r\n            {/* Status dropdown */}\r\n            <select value={newBooking.status} onChange={e => setNewBooking({ ...newBooking, status: e.target.value })} className=\"w-full px-4 py-3 rounded-lg border border-blue-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 outline-none text-gray-800\">\r\n              <option value=\"pending\">Pending</option>\r\n              <option value=\"complete\">Complete</option>\r\n            </select>\r\n            <div className=\"flex gap-4 mt-4 pb-4\">\r\n              <button type=\"submit\" className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\">Add</button>\r\n              <button type=\"button\" className=\"w-full py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\" onClick={onClose}>Cancel</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"
        }
    ]
}