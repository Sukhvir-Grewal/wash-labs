{
    "sourceFile": "components/AddExpenseModal.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1761076545262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1761077055284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,169 @@\n+import { useState } from 'react';\r\n+\r\n+const CATEGORIES = [\r\n+  { key: 'one-time', label: 'Equipment' },\r\n+  { key: 'chemicals', label: 'Chemicals' },\r\n+  { key: 'other', label: 'Other' },\r\n+];\r\n+\r\n+const SUPPLIERS = [\r\n+  'Canadian Tire',\r\n+  'Walmart',\r\n+  'Home Depot',\r\n+  'Amazon',\r\n+  'Carzilla',\r\n+  'Other',\r\n+];\r\n+\r\n+export default function AddExpenseModal({ open, onClose, onSuccess }) {\r\n+  const [form, setForm] = useState({\r\n+    date: '',\r\n+    amount: '',\r\n+    includeTax: false,\r\n+    supplier: 'Canadian Tire',\r\n+    supplierOther: '',\r\n+    productName: '',\r\n+    category: 'one-time',\r\n+  });\r\n+  const [submitting, setSubmitting] = useState(false);\r\n+  const [error, setError] = useState('');\r\n+\r\n+  if (!open) return null;\r\n+\r\n+  async function handleSubmit(e) {\r\n+    e.preventDefault();\r\n+    setSubmitting(true);\r\n+    setError('');\r\n+    try {\r\n+      const base = Number(form.amount || 0);\r\n+      const taxRate = form.includeTax ? 0.15 : 0;\r\n+      const finalAmount = base * (1 + taxRate);\r\n+      const supplierValue = form.supplier === 'Other' ? form.supplierOther : form.supplier;\r\n+      const body = {\r\n+        date: form.date,\r\n+        amount: Number(finalAmount.toFixed(2)),\r\n+        baseAmount: Number(base.toFixed(2)),\r\n+        taxIncluded: !!form.includeTax,\r\n+        taxRate,\r\n+        category: form.category,\r\n+        supplier: supplierValue,\r\n+        productName: form.productName,\r\n+      };\r\n+      const res = await fetch('/api/expenses', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(body) });\r\n+      const data = await res.json();\r\n+      if (res.ok && data.success) {\r\n+        setForm({ date: '', amount: '', includeTax: form.includeTax, supplier: 'Canadian Tire', supplierOther: '', productName: '', category: form.category });\r\n+        if (onSuccess) onSuccess(data.item);\r\n+        onClose();\r\n+      } else setError(data.error || 'Failed to add');\r\n+    } catch (e) {\r\n+      setError(e.message || 'Failed to add');\r\n+    }\r\n+    setSubmitting(false);\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n+      <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-3xl border border-blue-100 max-h-[90vh] overflow-y-auto\">\r\n+        <h3 className=\"text-xl font-bold mb-6 text-center text-blue-700\">Add Expense</h3>\r\n+        <form onSubmit={handleSubmit} className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n+          <div>\r\n+            <label className=\"block text-sm text-gray-700 mb-1\">Date</label>\r\n+            <input\r\n+              type=\"date\"\r\n+              value={form.date}\r\n+              onChange={e => setForm(f => ({ ...f, date: e.target.value }))}\r\n+              className=\"w-full px-3 py-2 rounded border border-blue-200 text-gray-700 focus:text-black caret-black\"\r\n+              required\r\n+            />\r\n+          </div>\r\n+          <div>\r\n+            <input\r\n+              type=\"text\"\r\n+              value={form.productName}\r\n+              onChange={e => setForm(f => ({ ...f, productName: e.target.value }))}\r\n+              placeholder=\"Product Name (e.g., Vacuum, Foam Cannon)\"\r\n+              className=\"w-full px-3 py-2 rounded border border-blue-200 text-gray-700 focus:text-black placeholder:text-gray-400 caret-black\"\r\n+            />\r\n+          </div>\r\n+          <div>\r\n+            <select\r\n+              value={form.supplier}\r\n+              onChange={e => setForm(f => ({ ...f, supplier: e.target.value, supplierOther: '' }))}\r\n+              className=\"w-full px-3 py-2 rounded border border-blue-200 text-gray-700 focus:text-black caret-black\"\r\n+            >\r\n+              {SUPPLIERS.map(s => <option key={s} value={s}>{s}</option>)}\r\n+            </select>\r\n+          </div>\r\n+          {form.supplier === 'Other' && (\r\n+            <div>\r\n+              <input\r\n+                type=\"text\"\r\n+                value={form.supplierOther}\r\n+                onChange={e => setForm(f => ({ ...f, supplierOther: e.target.value }))}\r\n+                placeholder=\"Enter supplier name\"\r\n+                className=\"w-full px-3 py-2 rounded border border-blue-200 text-gray-700 focus:text-black placeholder:text-gray-400 caret-black\"\r\n+              />\r\n+            </div>\r\n+          )}\r\n+          <div>\r\n+            <select\r\n+              value={form.category}\r\n+              onChange={e => setForm(f => ({ ...f, category: e.target.value }))}\r\n+              className=\"w-full px-3 py-2 rounded border border-blue-200 text-gray-700 focus:text-black caret-black\"\r\n+            >\r\n+              {CATEGORIES.map(c => <option key={c.key} value={c.key}>{c.label}</option>)}\r\n+            </select>\r\n+          </div>\r\n+          <div>\r\n+            <div className=\"relative\">\r\n+              <span className=\"absolute left-3 top-1/2 -translate-y-1/2 text-gray-600 pointer-events-none\">$</span>\r\n+              <input\r\n+                type=\"number\"\r\n+                min=\"0\"\r\n+                step=\"0.01\"\r\n+                value={form.amount}\r\n+                onChange={e => setForm(f => ({ ...f, amount: e.target.value }))}\r\n+                className=\"w-full pl-6 pr-3 py-2 rounded border border-blue-200 text-gray-700 focus:text-black placeholder:text-gray-400 caret-black\"\r\n+                placeholder=\"Amount\"\r\n+                required\r\n+              />\r\n+            </div>\r\n+          </div>\r\n+          <div className=\"flex items-center\">\r\n+            <label className=\"inline-flex items-center gap-2 px-3 py-2 rounded border border-blue-200 text-sm text-gray-700 cursor-pointer hover:bg-gray-50\">\r\n+              <input\r\n+                type=\"checkbox\"\r\n+                checked={form.includeTax}\r\n+                onChange={e => setForm(f => ({ ...f, includeTax: e.target.checked }))}\r\n+              />\r\n+              TAX (15%)\r\n+            </label>\r\n+            {form.amount !== '' && !isNaN(Number(form.amount)) && (\r\n+              <div className=\"ml-3 text-sm text-gray-600\">\r\n+                Total: <span className=\"font-semibold text-gray-900\">${(Number(form.amount) * (form.includeTax ? 1.15 : 1)).toFixed(2)}</span>\r\n+              </div>\r\n+            )}\r\n+          </div>\r\n+          {error && <div className=\"col-span-2 text-red-600 text-sm\">{error}</div>}\r\n+          <div className=\"col-span-2 flex gap-3 mt-4\">\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={onClose}\r\n+              className=\"flex-1 py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\"\r\n+            >\r\n+              Cancel\r\n+            </button>\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={submitting}\r\n+              className=\"flex-1 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold disabled:opacity-50\"\r\n+            >\r\n+              {submitting ? 'Adding...' : 'Add Expense'}\r\n+            </button>\r\n+          </div>\r\n+        </form>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1761077335988,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,12 +19,12 @@\n   const [form, setForm] = useState({\r\n     date: '',\r\n     amount: '',\r\n     includeTax: false,\r\n-    supplier: 'Canadian Tire',\r\n+    supplier: '',\r\n     supplierOther: '',\r\n     productName: '',\r\n-    category: 'one-time',\r\n+    category: '',\r\n   });\r\n   const [submitting, setSubmitting] = useState(false);\r\n   const [error, setError] = useState('');\r\n \r\n@@ -51,9 +51,9 @@\n       };\r\n       const res = await fetch('/api/expenses', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(body) });\r\n       const data = await res.json();\r\n       if (res.ok && data.success) {\r\n-        setForm({ date: '', amount: '', includeTax: form.includeTax, supplier: 'Canadian Tire', supplierOther: '', productName: '', category: form.category });\r\n+        setForm({ date: '', amount: '', includeTax: form.includeTax, supplier: '', supplierOther: '', productName: '', category: '' });\r\n         if (onSuccess) onSuccess(data.item);\r\n         onClose();\r\n       } else setError(data.error || 'Failed to add');\r\n     } catch (e) {\r\n@@ -63,11 +63,11 @@\n   }\r\n \r\n   return (\r\n     <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-      <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-3xl border border-blue-100 max-h-[90vh] overflow-y-auto\">\r\n-        <h3 className=\"text-xl font-bold mb-6 text-center text-blue-700\">Add Expense</h3>\r\n-        <form onSubmit={handleSubmit} className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n+      <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-2xl border border-blue-100 max-h-[90vh] overflow-y-auto\">\r\n+        <h3 className=\"text-xl font-bold mb-6 text-center text-black\">Add Expense</h3>\r\n+        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n           <div>\r\n             <label className=\"block text-sm text-gray-700 mb-1\">Date</label>\r\n             <input\r\n               type=\"date\"\r\n@@ -81,18 +81,20 @@\n             <input\r\n               type=\"text\"\r\n               value={form.productName}\r\n               onChange={e => setForm(f => ({ ...f, productName: e.target.value }))}\r\n-              placeholder=\"Product Name (e.g., Vacuum, Foam Cannon)\"\r\n+              placeholder=\"Product\"\r\n               className=\"w-full px-3 py-2 rounded border border-blue-200 text-gray-700 focus:text-black placeholder:text-gray-400 caret-black\"\r\n             />\r\n           </div>\r\n           <div>\r\n             <select\r\n               value={form.supplier}\r\n               onChange={e => setForm(f => ({ ...f, supplier: e.target.value, supplierOther: '' }))}\r\n               className=\"w-full px-3 py-2 rounded border border-blue-200 text-gray-700 focus:text-black caret-black\"\r\n+              required\r\n             >\r\n+              <option value=\"\" disabled>Supplier</option>\r\n               {SUPPLIERS.map(s => <option key={s} value={s}>{s}</option>)}\r\n             </select>\r\n           </div>\r\n           {form.supplier === 'Other' && (\r\n@@ -110,9 +112,11 @@\n             <select\r\n               value={form.category}\r\n               onChange={e => setForm(f => ({ ...f, category: e.target.value }))}\r\n               className=\"w-full px-3 py-2 rounded border border-blue-200 text-gray-700 focus:text-black caret-black\"\r\n+              required\r\n             >\r\n+              <option value=\"\" disabled>Category</option>\r\n               {CATEGORIES.map(c => <option key={c.key} value={c.key}>{c.label}</option>)}\r\n             </select>\r\n           </div>\r\n           <div>\r\n@@ -129,9 +133,9 @@\n                 required\r\n               />\r\n             </div>\r\n           </div>\r\n-          <div className=\"flex items-center\">\r\n+          <div className=\"flex items-center gap-3\">\r\n             <label className=\"inline-flex items-center gap-2 px-3 py-2 rounded border border-blue-200 text-sm text-gray-700 cursor-pointer hover:bg-gray-50\">\r\n               <input\r\n                 type=\"checkbox\"\r\n                 checked={form.includeTax}\r\n@@ -139,15 +143,15 @@\n               />\r\n               TAX (15%)\r\n             </label>\r\n             {form.amount !== '' && !isNaN(Number(form.amount)) && (\r\n-              <div className=\"ml-3 text-sm text-gray-600\">\r\n+              <div className=\"text-sm text-gray-600\">\r\n                 Total: <span className=\"font-semibold text-gray-900\">${(Number(form.amount) * (form.includeTax ? 1.15 : 1)).toFixed(2)}</span>\r\n               </div>\r\n             )}\r\n           </div>\r\n-          {error && <div className=\"col-span-2 text-red-600 text-sm\">{error}</div>}\r\n-          <div className=\"col-span-2 flex gap-3 mt-4\">\r\n+          {error && <div className=\"text-red-600 text-sm\">{error}</div>}\r\n+          <div className=\"flex gap-3 pt-4\">\r\n             <button\r\n               type=\"button\"\r\n               onClick={onClose}\r\n               className=\"flex-1 py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\"\r\n@@ -166,155 +170,4 @@\n       </div>\r\n     </div>\r\n   );\r\n }\r\n-import { useState } from 'react';\r\n-\r\n-const CATEGORIES = [\r\n-  { key: 'one-time', label: 'Equipment' },\r\n-  { key: 'chemicals', label: 'Chemicals' },\r\n-  { key: 'other', label: 'Other' },\r\n-];\r\n-\r\n-export default function AddExpenseModal({ open, onClose, onSuccess }) {\r\n-  const [form, setForm] = useState({\r\n-    date: '',\r\n-    amount: '',\r\n-    includeTax: false,\r\n-    supplier: '',\r\n-    productName: '',\r\n-    category: 'one-time',\r\n-  });\r\n-  const [submitting, setSubmitting] = useState(false);\r\n-  const [error, setError] = useState('');\r\n-\r\n-  if (!open) return null;\r\n-\r\n-  async function handleSubmit(e) {\r\n-    e.preventDefault();\r\n-    setSubmitting(true);\r\n-    setError('');\r\n-    try {\r\n-      const base = Number(form.amount || 0);\r\n-      const taxRate = form.includeTax ? 0.15 : 0;\r\n-      const finalAmount = base * (1 + taxRate);\r\n-      const body = {\r\n-        date: form.date,\r\n-        amount: Number(finalAmount.toFixed(2)),\r\n-        baseAmount: Number(base.toFixed(2)),\r\n-        taxIncluded: !!form.includeTax,\r\n-        taxRate,\r\n-        category: form.category,\r\n-        supplier: form.supplier,\r\n-        productName: form.productName,\r\n-      };\r\n-      const res = await fetch('/api/expenses', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(body) });\r\n-      const data = await res.json();\r\n-      if (res.ok && data.success) {\r\n-        setForm({ date: '', amount: '', includeTax: form.includeTax, supplier: '', productName: '', category: form.category });\r\n-        if (onSuccess) onSuccess(data.item);\r\n-        onClose();\r\n-      } else setError(data.error || 'Failed to add');\r\n-    } catch (e) {\r\n-      setError(e.message || 'Failed to add');\r\n-    }\r\n-    setSubmitting(false);\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n-      <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-3xl border border-blue-100 max-h-[90vh] overflow-y-auto\">\r\n-        <h3 className=\"text-xl font-bold mb-6 text-center text-blue-700\">Add Expense</h3>\r\n-        <form onSubmit={handleSubmit} className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n-          <div>\r\n-            <label className=\"block text-sm text-gray-700 mb-1\">Date</label>\r\n-            <input\r\n-              type=\"date\"\r\n-              value={form.date}\r\n-              onChange={e => setForm(f => ({ ...f, date: e.target.value }))}\r\n-              className=\"w-full px-3 py-2 rounded border border-blue-200 text-gray-700 focus:text-black placeholder:text-gray-600 caret-black\"\r\n-              required\r\n-            />\r\n-          </div>\r\n-          <div>\r\n-            <label className=\"block text-sm text-gray-700 mb-1\">Product Name</label>\r\n-            <input\r\n-              type=\"text\"\r\n-              value={form.productName}\r\n-              onChange={e => setForm(f => ({ ...f, productName: e.target.value }))}\r\n-              placeholder=\"e.g., Vacuum, Foam Cannon\"\r\n-              className=\"w-full px-3 py-2 rounded border border-blue-200 text-gray-700 focus:text-black placeholder:text-gray-600 caret-black\"\r\n-            />\r\n-          </div>\r\n-          <div>\r\n-            <label className=\"block text-sm text-gray-700 mb-1\">Supplier</label>\r\n-            <input\r\n-              type=\"text\"\r\n-              value={form.supplier}\r\n-              onChange={e => setForm(f => ({ ...f, supplier: e.target.value }))}\r\n-              placeholder=\"e.g., Canadian Tire\"\r\n-              className=\"w-full px-3 py-2 rounded border border-blue-200 text-gray-700 focus:text-black placeholder:text-gray-600 caret-black\"\r\n-            />\r\n-          </div>\r\n-          <div>\r\n-            <label className=\"block text-sm text-gray-700 mb-1\">Category</label>\r\n-            <select\r\n-              value={form.category}\r\n-              onChange={e => setForm(f => ({ ...f, category: e.target.value }))}\r\n-              className=\"w-full px-3 py-2 rounded border border-blue-200 text-gray-700 focus:text-black caret-black\"\r\n-            >\r\n-              {CATEGORIES.map(c => <option key={c.key} value={c.key}>{c.label}</option>)}\r\n-            </select>\r\n-          </div>\r\n-          <div>\r\n-            <label className=\"block text-sm text-gray-700 mb-1\">Amount</label>\r\n-            <div className=\"relative\">\r\n-              <span className=\"absolute left-3 top-1/2 -translate-y-1/2 text-gray-600 pointer-events-none\">$</span>\r\n-              <input\r\n-                type=\"number\"\r\n-                min=\"0\"\r\n-                step=\"0.01\"\r\n-                value={form.amount}\r\n-                onChange={e => setForm(f => ({ ...f, amount: e.target.value }))}\r\n-                className=\"w-full pl-6 pr-3 py-2 rounded border border-blue-200 text-gray-700 focus:text-black placeholder:text-gray-600 caret-black\"\r\n-                placeholder=\"0.00\"\r\n-                required\r\n-              />\r\n-            </div>\r\n-            <div className=\"mt-2\">\r\n-              <label className=\"inline-flex items-center gap-2 text-sm text-gray-700\">\r\n-                <input\r\n-                  type=\"checkbox\"\r\n-                  checked={form.includeTax}\r\n-                  onChange={e => setForm(f => ({ ...f, includeTax: e.target.checked }))}\r\n-                />\r\n-                Include NS tax (15%)\r\n-              </label>\r\n-              {form.amount !== '' && !isNaN(Number(form.amount)) && (\r\n-                <div className=\"text-xs text-gray-600 mt-1\">\r\n-                  Total: <span className=\"font-semibold text-gray-900\">${(Number(form.amount) * (form.includeTax ? 1.15 : 1)).toFixed(2)}</span>\r\n-                </div>\r\n-              )}\r\n-            </div>\r\n-          </div>\r\n-          {error && <div className=\"col-span-2 text-red-600 text-sm\">{error}</div>}\r\n-          <div className=\"col-span-2 flex gap-3 mt-4\">\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={onClose}\r\n-              className=\"flex-1 py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\"\r\n-            >\r\n-              Cancel\r\n-            </button>\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={submitting}\r\n-              className=\"flex-1 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold disabled:opacity-50\"\r\n-            >\r\n-              {submitting ? 'Adding...' : 'Add Expense'}\r\n-            </button>\r\n-          </div>\r\n-        </form>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n"
                }
            ],
            "date": 1761076545262,
            "name": "Commit-0",
            "content": "import { useState } from 'react';\r\n\r\nconst CATEGORIES = [\r\n  { key: 'one-time', label: 'Equipment' },\r\n  { key: 'chemicals', label: 'Chemicals' },\r\n  { key: 'other', label: 'Other' },\r\n];\r\n\r\nexport default function AddExpenseModal({ open, onClose, onSuccess }) {\r\n  const [form, setForm] = useState({\r\n    date: '',\r\n    amount: '',\r\n    includeTax: false,\r\n    supplier: '',\r\n    productName: '',\r\n    category: 'one-time',\r\n  });\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  if (!open) return null;\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setSubmitting(true);\r\n    setError('');\r\n    try {\r\n      const base = Number(form.amount || 0);\r\n      const taxRate = form.includeTax ? 0.15 : 0;\r\n      const finalAmount = base * (1 + taxRate);\r\n      const body = {\r\n        date: form.date,\r\n        amount: Number(finalAmount.toFixed(2)),\r\n        baseAmount: Number(base.toFixed(2)),\r\n        taxIncluded: !!form.includeTax,\r\n        taxRate,\r\n        category: form.category,\r\n        supplier: form.supplier,\r\n        productName: form.productName,\r\n      };\r\n      const res = await fetch('/api/expenses', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(body) });\r\n      const data = await res.json();\r\n      if (res.ok && data.success) {\r\n        setForm({ date: '', amount: '', includeTax: form.includeTax, supplier: '', productName: '', category: form.category });\r\n        if (onSuccess) onSuccess(data.item);\r\n        onClose();\r\n      } else setError(data.error || 'Failed to add');\r\n    } catch (e) {\r\n      setError(e.message || 'Failed to add');\r\n    }\r\n    setSubmitting(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-3xl border border-blue-100 max-h-[90vh] overflow-y-auto\">\r\n        <h3 className=\"text-xl font-bold mb-6 text-center text-blue-700\">Add Expense</h3>\r\n        <form onSubmit={handleSubmit} className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n          <div>\r\n            <label className=\"block text-sm text-gray-700 mb-1\">Date</label>\r\n            <input\r\n              type=\"date\"\r\n              value={form.date}\r\n              onChange={e => setForm(f => ({ ...f, date: e.target.value }))}\r\n              className=\"w-full px-3 py-2 rounded border border-blue-200 text-gray-700 focus:text-black placeholder:text-gray-600 caret-black\"\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm text-gray-700 mb-1\">Product Name</label>\r\n            <input\r\n              type=\"text\"\r\n              value={form.productName}\r\n              onChange={e => setForm(f => ({ ...f, productName: e.target.value }))}\r\n              placeholder=\"e.g., Vacuum, Foam Cannon\"\r\n              className=\"w-full px-3 py-2 rounded border border-blue-200 text-gray-700 focus:text-black placeholder:text-gray-600 caret-black\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm text-gray-700 mb-1\">Supplier</label>\r\n            <input\r\n              type=\"text\"\r\n              value={form.supplier}\r\n              onChange={e => setForm(f => ({ ...f, supplier: e.target.value }))}\r\n              placeholder=\"e.g., Canadian Tire\"\r\n              className=\"w-full px-3 py-2 rounded border border-blue-200 text-gray-700 focus:text-black placeholder:text-gray-600 caret-black\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm text-gray-700 mb-1\">Category</label>\r\n            <select\r\n              value={form.category}\r\n              onChange={e => setForm(f => ({ ...f, category: e.target.value }))}\r\n              className=\"w-full px-3 py-2 rounded border border-blue-200 text-gray-700 focus:text-black caret-black\"\r\n            >\r\n              {CATEGORIES.map(c => <option key={c.key} value={c.key}>{c.label}</option>)}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm text-gray-700 mb-1\">Amount</label>\r\n            <div className=\"relative\">\r\n              <span className=\"absolute left-3 top-1/2 -translate-y-1/2 text-gray-600 pointer-events-none\">$</span>\r\n              <input\r\n                type=\"number\"\r\n                min=\"0\"\r\n                step=\"0.01\"\r\n                value={form.amount}\r\n                onChange={e => setForm(f => ({ ...f, amount: e.target.value }))}\r\n                className=\"w-full pl-6 pr-3 py-2 rounded border border-blue-200 text-gray-700 focus:text-black placeholder:text-gray-600 caret-black\"\r\n                placeholder=\"0.00\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"mt-2\">\r\n              <label className=\"inline-flex items-center gap-2 text-sm text-gray-700\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={form.includeTax}\r\n                  onChange={e => setForm(f => ({ ...f, includeTax: e.target.checked }))}\r\n                />\r\n                Include NS tax (15%)\r\n              </label>\r\n              {form.amount !== '' && !isNaN(Number(form.amount)) && (\r\n                <div className=\"text-xs text-gray-600 mt-1\">\r\n                  Total: <span className=\"font-semibold text-gray-900\">${(Number(form.amount) * (form.includeTax ? 1.15 : 1)).toFixed(2)}</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          {error && <div className=\"col-span-2 text-red-600 text-sm\">{error}</div>}\r\n          <div className=\"col-span-2 flex gap-3 mt-4\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              className=\"flex-1 py-3 rounded-lg bg-gray-200 hover:bg-gray-300 text-blue-700 font-semibold\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={submitting}\r\n              className=\"flex-1 py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold disabled:opacity-50\"\r\n            >\r\n              {submitting ? 'Adding...' : 'Add Expense'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"
        }
    ]
}